{"version":3,"sources":["webpack://@kyrne/websocket/webpack/bootstrap","webpack://@kyrne/websocket/external \"flarum.core.compat['app']\"","webpack://@kyrne/websocket/external \"flarum.core.compat['extend']\"","webpack://@kyrne/websocket/external \"flarum.core.compat['components/Switch']\"","webpack://@kyrne/websocket/external \"flarum.core.compat['components/DashboardPage']\"","webpack://@kyrne/websocket/external \"flarum.core.compat['components/ExtensionPage']\"","webpack://@kyrne/websocket/external \"flarum.core.compat['components/DashboardWidget']\"","webpack://@kyrne/websocket/external \"flarum.core.compat['utils/humanTime']\"","webpack://@kyrne/websocket/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@kyrne/websocket/./src/admin/components/WebsocketPage.js","webpack://@kyrne/websocket/./node_modules/frappe-charts/dist/frappe-charts.esm.js","webpack://@kyrne/websocket/./src/admin/components/WebsocketStatsWidget.js","webpack://@kyrne/websocket/./src/admin/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_inheritsLoose","subClass","superClass","constructor","__proto__","WebsocketPage","content","className","app","translator","trans","bidi","this","setting","placeholder","window","location","hostname","Switch_default","a","state","onchange","settings","submitButton","ExtensionPage","$","expr","con","document","querySelector","getOffset","element","rect","getBoundingClientRect","top","documentElement","scrollTop","body","left","scrollLeft","tag","createElement","val","appendChild","ref","parentNode","insertBefore","keys","map","prop","style","setAttribute","BASE_MEASURES","margins","bottom","right","paddings","baseHeight","titleHeight","legendHeight","titleFontSize","getTopOffset","getLeftOffset","getExtraHeight","getExtraWidth","INIT_CHART_UPDATE_TIMEOUT","CHART_POST_ANIMATE_TIMEOUT","AXIS_DATASET_CHART_TYPES","AXIS_LEGEND_BAR_SIZE","BAR_CHART_SPACE_RATIO","MIN_BAR_PERCENT_HEIGHT","LINE_CHART_DOT_SIZE","PERCENTAGE_BAR_DEFAULT_HEIGHT","PERCENTAGE_BAR_DEFAULT_DEPTH","HEATMAP_DISTRIBUTION_SIZE","HEATMAP_SQUARE_SIZE","DEFAULT_CHAR_WIDTH","TOOLTIP_POINTER_TRIANGLE_HEIGHT","DEFAULT_CHART_COLORS","DEFAULT_COLORS","bar","line","pie","percentage","heatmap","donut","ANGLE_RATIO","Math","PI","FULL_ANGLE","SvgTip","[object Object]","parent","colors","titleName","titleValue","listValues","titleValueFirst","x","y","setup","makeTooltip","fill","calcPosition","container","inside","innerHTML","hideTip","title","dataPointList","addEventListener","index","set","color","formatted","li","styles","border-top","width","offsetWidth","offsetHeight","maxLeft","pointer","pointerOffset","valueFirst","refresh","opacity","floatTwo","parseFloat","toFixed","fillArray","array","count","start","length","fillerArray","Array","abs","concat","getStringWidth","string","charWidth","getPositionByAngle","angle","radius","sin","cos","isValidNumber","candidate","nonNegative","Number","isNaN","undefined","isFinite","getBarHeightAndYAttr","yTop","zeroLine","height","equilizeNoOfElements","array1","array2","extraCount","truncateString","txt","len","slice","getSplineCurvePointsStr","xList","yList","points","push","controlPoint","current","previous","next","reverse","pointA","pointB","lengthX","lengthY","sqrt","pow","atan2","command","reduce","acc","point","pointStr","cps","cpe","PRESET_COLOR_MAP","light-blue","blue","violet","red","orange","yellow","green","light-green","purple","magenta","black","grey","light-grey","dark-grey","limitColor","lightenDarkenColor","amt","col","getColor","usePound","num","parseInt","b","toString","test","exec","ch","AXIS_TICK_LENGTH","LABEL_MARGIN","LABEL_MAX_CHARS","FONT_SIZE","BASE_LINE_COLOR","FONT_FILL","$$1","createSVG","createElementNS","setGradientStop","gradElem","offset","stop-opacity","makeSVGGroup","transform","args","makePath","pathStr","stroke","strokeWidth","stroke-width","makeGradient","svgDefElem","lighter","gradientId","gradientDef","id","x1","x2","y1","y2","renderVerticalGradient","opacities","heatSquare","size","data","rx","makeText","options","fontSize","dy","font-size","text-anchor","textAnchor","makeHoriLine","label","lineType","shortenNumbers","number","floor","log10","shortened","round","shortenLargeNumber","text","stroke-opacity","xLine","pos","makeVertLine","makeOverlay","unit","transformValue","nodeName","getAttribute","childNodes","overlay","cloneNode","dot","heat_square","updateOverlay","attributes","values","filter","attr","includes","specified","nodeValue","UNIT_ANIM_DUR","PATH_ANIM_DUR","MARKER_LINE_ANIM_DUR","REPLACE_ALL_NEW_DUR","STD_EASING","translate","oldCoord","newCoord","duration","old","join","translateHoriLine","yLine","newY","oldY","animatePathStr","oldPath","EASING","ease","linear","easein","easeout","easeinout","webkitTransform","msTransform","mozTransform","oTransform","animateSVG","svgContainer","elements","newElements","animElements","animElement","newElement","props","dur","easingType","type","oldValues","attributeName","animateElement","currentValue","animAttr","from","to","begin","keySplines","keyTimes","calcMode","animateSVGElement","replaceChild","animSvg","CSSTEXT","BaseChart","deepClone","cloned","Date","getTime","isArray","HTMLElement","Error","rawChartArgs","realData","prepareData","prepareFirstData","validateColors","config","showTooltip","showLegend","isNavigable","animate","truncateLegends","measures","JSON","parse","stringify","setMeasures","argHeight","initTimeout","overlays","configure","validColors","forEach","isValidColor","console","warn","boundDrawFn","draw","ResizeObserver","resizeObserver","observe","disconnect","removeEventListener","makeContainer","updateWidth","independentWidth","tip","bindTooltip","onlyWidthChange","init","offsetParent","calc","makeChartArea","setupComponents","components","drawArea","render","setTimeout","update","renderLegend","setupNavigation","padding","baseWidth","getComputedStyle","paddingLeft","paddingRight","clientWidth","svg","removeChild","svgDefs","titleEL","legendArea","updateTipOffset","Map","error","elementsToAnimate","svgElement","animSvgElement","runSMILAnimation","make","updateNav","bindUnits","bindOverlay","keyActions","13","onEnterKey","37","onLeftArrow","38","onUpArrow","39","onRightArrow","40","onDownArrow","e","el","innerHeight","clientHeight","innerWidth","isElementInViewport","event","keyCode","chartSvg","clone","classList","add","styleEl","firstChild","prepareForExport","filename","blob","Blob","url","URL","createObjectURL","href","download","click","revokeObjectURL","downloadFile","AggregationChart","super","formatTooltipY","tooltipOptions","maxSlices","maxLegendPoints","sliceTotals","allTotals","labels","total","datasets","totals","sort","remaining","sumOfRemaining","grandTotal","center","textContent","legendTotals","barWidth","divisor","truncate","cx","cy","dx","group","legendDot","NO_OF_YEAR_MONTHS","NO_OF_DAYS_IN_WEEK","NO_OF_MILLIS","SEC_IN_DAY","MONTH_NAMES","DAY_NAMES_SHORT","treatAsUtc","date","result","setMinutes","getMinutes","getTimezoneOffset","getYyyyMmDd","dd","getDate","mm","getMonth","getFullYear","getWeeksBetween","startDate","endDate","weekStartDate","setDayToSunday","ceil","millisecondsPerDay","getDaysBetween","areInSameMonth","getMonthName","short","monthName","getLastDateInMonth","month","year","newDate","day","getDay","addDays","numberOfDays","setDate","ChartComponent","layerClass","layerTransform","constants","getData","makeElements","animateElements","store","layer","oldData","componentConfigs","donutSlices","sliceStrings","transition","newData","pieSlices","percentageBars","xPositions","depth","stroke-dasharray","percentageBar","widths","barHeight","barDepth","yAxis","positions","position","newPos","newLabels","oldPos","oldLabels","xAxis","calcLabels","newX","oldX","translateVertLine","yMarkers","labelPos","labelSvg","yMarker","newOptions","yRegions","region","yRegion","startPos","endPos","newStarts","oldStarts","rectGroup","newY1","newY2","oldY2","newHeight","animateRegion","heatDomain","colWidth","rowHeight","squareSize","xTranslate","serializedSubDomains","cols","week","weekNo","toUpperCase","data-date","yyyyMmDd","data-value","dataValue","data-day","square","barGraph","unitType","units","yPositions","j","meta","minHeight","data-point-index","datasetBar","offsets","barsWidth","newXPos","newYPos","newOffsets","oldXPos","oldYPos","oldOffsets","rectAnim","oldCoordStr","split","animateBar","lineGraph","paths","hideLine","pointsStr","spline","path","heatline","gradient_id","regionFill","gradient_id_region","getPaths","hideDots","datasetDot","valuesOverPoints","newValues","newXList","newYList","pathComponents","animPath","regStartPt","regEndPt","animRegion","animatePath","animateDot","getComponent","k","assign","normalize","mantissa","exponent","sig","exp","getChartIntervals","maxValue","minValue","normalMaxValue","normalMinValue","intervals","max","min","upperBound","lowerBound","range","noOfParts","partSize","getChartRangeIntervals","getIntervalSize","orderedArray","scale","scaleMultiplier","COL_WIDTH","ROW_HEIGHT","AxisChart","barOptions","lineOptions","axisOptions","xAxisMode","yAxisMode","xIsSeries","shortenYAxisNumbers","formatTooltipX","datasetLength","zeroArray","vals","chartType","end","dataPrep","zeroData","zeroDataPrep","calcXPositions","calcYAxisParameters","getAllYValues","makeDataByIndex","unitWidth","xOffset","dataValues","withMinimum","yPts","getPositiveFirstIntervals","absMinValue","intervalSize","unshift","pseudoMaxValue","pseudoMinValue","calcChartIntervals","intervalHeight","zeroIndex","interval","indexOf","getZeroIndex","calcDatasetPoints","calcYExtremes","calcYRegions","scaleAll","cumulativeYs","replace","char","cumulativeYPos","stacked","yExtremes","cumulative","allValueLists","chartWidth","isSeries","allowedSpace","seriesMultiple","allowedLetters","maxLabelLength","getShortenedLabels","barDatasets","lineDatasets","barsConfigs","spaceRatio","lineConfigs","minLine","dotSize","markerConfigs","optionals","dataUnitComponents","component","dataByIndex","formatX","formatY","yPos","formattedLabel","xPos","yExtreme","relX","pageX","relY","pageY","mapTooltipXPosition","goal","arr","closest","prev","curr","getClosestInArray","dbi","setValues","showTip","legendBar","overlayGuides","g","currentIndex","currentUnit","setCurrentDataPoint","target","properties","evt","createEvent","initEvent","dispatchEvent","fire","getDataPoint","datasetValues","addDataPoint","splice","removeDataPoint","chartTypes","bars","gOff","pOff","formattedLabels","fraction","countLabel","validStarts","startSubDomain","startSubDomainIndex","discreteDomains","spacing","noOfWeeks","setFullYear","dataPoints","timestampSec$$1","firstWeekStart","distribution","distributionSize","dataMaxValue","distributionStep","checkpoint","calcDistribution","domainConfigs","getDomains","lessCol","dayName","dayText","comp","daySquares","daySquare","dateParts","lessText","moreText","startMonth","startYear","endMonth","endYear","noOfMonths","startOfMonth","getDomainConfig","startOfWeek","domainConfig","noOfMonthWeeks","getCol","empty","currentDate","currentDateWithinData","getSubDomainConfig","mouseMove","mouseLeave","hoverRadio","startAngle","clockWise","prevSlicesProperties","slicesProperties","curAngle","originDiffAngle","largeArc","diffAngle","endAngle","startPosition","endPosition","prevProperty","curStart","curEnd","curPath","arcStartX","arcStartY","arcEndX","midArc","arcEndY","makeCircleStr","makeArcPathStr","flag","calTranslateByAngle","g_off","formatted_labels","percent","slices","prevIndex","curActiveSliceIndex","prevAcitve","curActiveSlice","hoverSlice","makeStrokeCircleStr","makeArcStrokePathStr","Chart","getChartByType","StatisticsWidget","oncreate","drawChart","onupdate","vnode","stats","websocket_statistics","chart","dom","peak_connections","humanTime","null","websocket_messages_count","forum","attribute","DashboardWidget","initializers","extensionData","for","registerPage","extend","DashboardPage","widgets","WebsocketStatsWidget_StatisticsWidget"],"mappings":"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","file":"admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['components/Switch'];","module.exports = flarum.core.compat['components/DashboardPage'];","module.exports = flarum.core.compat['components/ExtensionPage'];","module.exports = flarum.core.compat['components/DashboardWidget'];","module.exports = flarum.core.compat['utils/humanTime'];","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","import ExtensionPage from 'flarum/components/ExtensionPage';\nimport Switch from 'flarum/components/Switch';\n\nexport default class WebsocketPage extends ExtensionPage {\n  content() {\n    return (\n      <div className=\"ExtensionPage-settings\">\n        <div className=\"container\">\n          <div className=\"Form\">\n            <div className=\"Form-group\">\n              <label>{app.translator.trans('kyrne-websocket.admin.pusher_settings.app_id_label')}</label>\n              <div className='helpText'>{app.translator.trans('kyrne-websocket.admin.help.app_id')}</div>\n              <input className=\"FormControl\" bidi={this.setting('kyrne-websocket.app_id')}/>\n            </div>\n\n            <div className=\"Form-group\">\n\n              <label>{app.translator.trans('kyrne-websocket.admin.pusher_settings.app_key_label')}</label>\n              <div className='helpText'>{app.translator.trans('kyrne-websocket.admin.help.app_key')}</div>\n              <input className=\"FormControl\" bidi={this.setting('kyrne-websocket.app_key')}/>\n            </div>\n\n            <div className=\"Form-group\">\n              <label>{app.translator.trans('kyrne-websocket.admin.pusher_settings.app_secret_label')}</label>\n              <div className='helpText'>{app.translator.trans('kyrne-websocket.admin.help.secret')}</div>\n              <input className=\"FormControl\" bidi={this.setting('kyrne-websocket.app_secret')}/>\n            </div>\n\n            <div className=\"Form-group\">\n              <label>{app.translator.trans('kyrne-websocket.admin.pusher_settings.app_host_label')}</label>\n              <div className='helpText'>{app.translator.trans('kyrne-websocket.admin.help.host')}</div>\n              <input className=\"FormControl\" placeholder={window.location.hostname}\n                     bidi={this.setting('kyrne-websocket.app_host')}/>\n            </div>\n\n            <div className=\"Form-group\">\n              <label>{app.translator.trans('kyrne-websocket.admin.pusher_settings.app_port_label')}</label>\n              <div className='helpText'>{app.translator.trans('kyrne-websocket.admin.help.port')}</div>\n              <input className=\"FormControl\" placeholder=\"6001\" bidi={this.setting('kyrne-websocket.app_port')}/>\n            </div>\n\n            <div className=\"Form-group\">\n              <label>{app.translator.trans('kyrne-websocket.admin.pusher_settings.stats_label')}</label>\n              <div className='helpText'>{app.translator.trans('kyrne-websocket.admin.help.stats')}</div>\n              <input placeholder={7200} className=\"FormControl\" bidi={this.setting('kyrne-websocket.app_statistics-interval')}/>\n            </div>\n\n            <div className=\"Form-group\">\n              <Switch\n                state={!!this.setting('kyrne-websocket.reverse_proxy')() && this.setting('kyrne-websocket.reverse_proxy')() !== '0'}\n                onchange={this.settings['kyrne-websocket.reverse_proxy']}>\n                {app.translator.trans('kyrne-websocket.admin.pusher_settings.reverse_proxy')}\n              </Switch>\n              <div className='helpText'>{app.translator.trans('kyrne-websocket.admin.help.reverse_proxy')}</div>\n            </div>\n            <div className=\"Form-group\">\n              <label>{app.translator.trans('kyrne-websocket.admin.pusher_settings.local_cert_path')}</label>\n              <div className='helpText'>{app.translator.trans('kyrne-websocket.admin.help.cert_path')}</div>\n              <input className=\"FormControl\" placeholder=\"/etc/letsencrypt/live/your.domain/fullchain.pem\"\n                     bidi={this.setting('kyrne-websocket.local_cert')}/>\n            </div>\n\n            <div className=\"Form-group\">\n              <label>{app.translator.trans('kyrne-websocket.admin.pusher_settings.local_pk_path')}</label>\n              <div className='helpText'>{app.translator.trans('kyrne-websocket.admin.help.pk_path')}</div>\n              <input className=\"FormControl\" placeholder=\"/etc/letsencrypt/live/your.domain/privkey.pem\"\n                     bidi={this.setting('kyrne-websocket.local_pk')}/>\n            </div>\n\n            <div className=\"Form-group\">\n              <label>{app.translator.trans('kyrne-websocket.admin.pusher_settings.passphrase')}</label>\n              <div className='helpText'>{app.translator.trans('kyrne-websocket.admin.help.passphrase')}</div>\n              <input className=\"FormControl\" bidi={this.setting('kyrne-websocket.passphrase')}/>\n            </div>\n\n            <div className=\"Form-group\">\n              <Switch\n                state={!!this.setting('kyrne-websocket.cert_self_signed')() && this.setting('kyrne-websocket.cert_self_signed')() !== '0'}\n                onchange={this.settings['kyrne-websocket.cert_self_signed']}>\n                {app.translator.trans('kyrne-websocket.admin.pusher_settings.cert_self_signed')}\n              </Switch>\n              <div className='helpText'>{app.translator.trans('kyrne-websocket.admin.help.self_signed')}</div>\n            </div>\n\n            <div className=\"Form-group\">\n              <Switch\n                state={!!this.setting('kyrne-websocket.force_secure')() && this.setting('kyrne-websocket.force_secure')() !== '0'}\n                onchange={this.settings['kyrne-websocket.force_secure']}>\n                {app.translator.trans('kyrne-websocket.admin.pusher_settings.secure')}\n              </Switch>\n              <div className='helpText'>{app.translator.trans('kyrne-websocket.admin.help.secure')}</div>\n            </div>\n            <div className=\"Form-group\">\n              <Switch\n                state={!!this.setting('kyrne-websocket.auto_update')() && this.setting('kyrne-websocket.auto_update')() !== '0'}\n                onchange={this.settings['kyrne-websocket.auto_update']}>\n                {app.translator.trans('kyrne-websocket.admin.pusher_settings.auto_update')}\n              </Switch>\n              <div className='helpText'>{app.translator.trans('kyrne-websocket.admin.help.auto_update')}</div>\n            </div>\n            <div className=\"Form-group\">\n              <Switch\n                state={!!this.setting('kyrne-websocket.auth_only')() && this.setting('kyrne-websocket.auth_only')() !== '0'}\n                onchange={this.settings['kyrne-websocket.auth_only']}>\n                {app.translator.trans('kyrne-websocket.admin.pusher_settings.auth_only')}\n              </Switch>\n              <div className='helpText'>{app.translator.trans('kyrne-websocket.admin.help.auth_only')}</div>\n            </div>\n            <div className=\"Form-group\">{this.submitButton()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","function $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\n\n\n$.create = (tag, o) => {\n\tvar element = document.createElement(tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (i in element ) {\n\t\t\telement[i] = val;\n\t\t}\n\t\telse {\n\t\t\telement.setAttribute(i, val);\n\t\t}\n\t}\n\n\treturn element;\n};\n\nfunction getOffset(element) {\n\tlet rect = element.getBoundingClientRect();\n\treturn {\n\t\t// https://stackoverflow.com/a/7436602/6495043\n\t\t// rect.top varies with scroll, so we add whatever has been\n\t\t// scrolled to it to get absolute distance from actual page top\n\t\ttop: rect.top + (document.documentElement.scrollTop || document.body.scrollTop),\n\t\tleft: rect.left + (document.documentElement.scrollLeft || document.body.scrollLeft)\n\t};\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n// an element's offsetParent property will return null whenever it, or any of its parents,\n// is hidden via the display style property.\nfunction isHidden(el) {\n\treturn (el.offsetParent === null);\n}\n\nfunction isElementInViewport(el) {\n\t// Although straightforward: https://stackoverflow.com/a/7557433/6495043\n\tvar rect = el.getBoundingClientRect();\n\n\treturn (\n\t\trect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */\n\t);\n}\n\nfunction getElementContentWidth(element) {\n\tvar styles = window.getComputedStyle(element);\n\tvar padding = parseFloat(styles.paddingLeft) +\n\t\tparseFloat(styles.paddingRight);\n\n\treturn element.clientWidth - padding;\n}\n\n\n\n\n\nfunction fire(target, type, properties) {\n\tvar evt = document.createEvent(\"HTMLEvents\");\n\n\tevt.initEvent(type, true, true );\n\n\tfor (var j in properties) {\n\t\tevt[j] = properties[j];\n\t}\n\n\treturn target.dispatchEvent(evt);\n}\n\n// https://css-tricks.com/snippets/javascript/loop-queryselectorall-matches/\n\nconst BASE_MEASURES = {\n\tmargins: {\n\t\ttop: 10,\n\t\tbottom: 10,\n\t\tleft: 20,\n\t\tright: 20\n\t},\n\tpaddings: {\n\t\ttop: 20,\n\t\tbottom: 40,\n\t\tleft: 30,\n\t\tright: 10\n\t},\n\n\tbaseHeight: 240,\n\ttitleHeight: 20,\n\tlegendHeight: 30,\n\n\ttitleFontSize: 12,\n};\n\nfunction getTopOffset(m) {\n\treturn m.titleHeight + m.margins.top + m.paddings.top;\n}\n\nfunction getLeftOffset(m) {\n\treturn m.margins.left + m.paddings.left;\n}\n\nfunction getExtraHeight(m) {\n\tlet totalExtraHeight = m.margins.top + m.margins.bottom\n\t\t+ m.paddings.top + m.paddings.bottom\n\t\t+ m.titleHeight + m.legendHeight;\n\treturn totalExtraHeight;\n}\n\nfunction getExtraWidth(m) {\n\tlet totalExtraWidth = m.margins.left + m.margins.right\n\t\t+ m.paddings.left + m.paddings.right;\n\n\treturn totalExtraWidth;\n}\n\nconst INIT_CHART_UPDATE_TIMEOUT = 700;\nconst CHART_POST_ANIMATE_TIMEOUT = 400;\n\nconst DEFAULT_AXIS_CHART_TYPE = 'line';\nconst AXIS_DATASET_CHART_TYPES = ['line', 'bar'];\n\nconst AXIS_LEGEND_BAR_SIZE = 100;\n\nconst BAR_CHART_SPACE_RATIO = 0.5;\nconst MIN_BAR_PERCENT_HEIGHT = 0.00;\n\nconst LINE_CHART_DOT_SIZE = 4;\nconst DOT_OVERLAY_SIZE_INCR = 4;\n\nconst PERCENTAGE_BAR_DEFAULT_HEIGHT = 20;\nconst PERCENTAGE_BAR_DEFAULT_DEPTH = 2;\n\n// Fixed 5-color theme,\n// More colors are difficult to parse visually\nconst HEATMAP_DISTRIBUTION_SIZE = 5;\n\nconst HEATMAP_SQUARE_SIZE = 10;\nconst HEATMAP_GUTTER_SIZE = 2;\n\nconst DEFAULT_CHAR_WIDTH = 7;\n\nconst TOOLTIP_POINTER_TRIANGLE_HEIGHT = 5;\n\nconst DEFAULT_CHART_COLORS = ['light-blue', 'blue', 'violet', 'red', 'orange',\n\t'yellow', 'green', 'light-green', 'purple', 'magenta', 'light-grey', 'dark-grey'];\nconst HEATMAP_COLORS_GREEN = ['#ebedf0', '#c6e48b', '#7bc96f', '#239a3b', '#196127'];\n\n\n\nconst DEFAULT_COLORS = {\n\tbar: DEFAULT_CHART_COLORS,\n\tline: DEFAULT_CHART_COLORS,\n\tpie: DEFAULT_CHART_COLORS,\n\tpercentage: DEFAULT_CHART_COLORS,\n\theatmap: HEATMAP_COLORS_GREEN,\n\tdonut: DEFAULT_CHART_COLORS\n};\n\n// Universal constants\nconst ANGLE_RATIO = Math.PI / 180;\nconst FULL_ANGLE = 360;\n\nclass SvgTip {\n\tconstructor({\n\t\tparent = null,\n\t\tcolors = []\n\t}) {\n\t\tthis.parent = parent;\n\t\tthis.colors = colors;\n\t\tthis.titleName = '';\n\t\tthis.titleValue = '';\n\t\tthis.listValues = [];\n\t\tthis.titleValueFirst = 0;\n\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\n\t\tthis.top = 0;\n\t\tthis.left = 0;\n\n\t\tthis.setup();\n\t}\n\n\tsetup() {\n\t\tthis.makeTooltip();\n\t}\n\n\trefresh() {\n\t\tthis.fill();\n\t\tthis.calcPosition();\n\t}\n\n\tmakeTooltip() {\n\t\tthis.container = $.create('div', {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'graph-svg-tip comparison',\n\t\t\tinnerHTML: `<span class=\"title\"></span>\n\t\t\t\t<ul class=\"data-point-list\"></ul>\n\t\t\t\t<div class=\"svg-pointer\"></div>`\n\t\t});\n\t\tthis.hideTip();\n\n\t\tthis.title = this.container.querySelector('.title');\n\t\tthis.dataPointList = this.container.querySelector('.data-point-list');\n\n\t\tthis.parent.addEventListener('mouseleave', () => {\n\t\t\tthis.hideTip();\n\t\t});\n\t}\n\n\tfill() {\n\t\tlet title;\n\t\tif(this.index) {\n\t\t\tthis.container.setAttribute('data-point-index', this.index);\n\t\t}\n\t\tif(this.titleValueFirst) {\n\t\t\ttitle = `<strong>${this.titleValue}</strong>${this.titleName}`;\n\t\t} else {\n\t\t\ttitle = `${this.titleName}<strong>${this.titleValue}</strong>`;\n\t\t}\n\t\tthis.title.innerHTML = title;\n\t\tthis.dataPointList.innerHTML = '';\n\n\t\tthis.listValues.map((set, i) => {\n\t\t\tconst color = this.colors[i] || 'black';\n\t\t\tlet value = set.formatted === 0 || set.formatted ? set.formatted : set.value;\n\n\t\t\tlet li = $.create('li', {\n\t\t\t\tstyles: {\n\t\t\t\t\t'border-top': `3px solid ${color}`\n\t\t\t\t},\n\t\t\t\tinnerHTML: `<strong style=\"display: block;\">${ value === 0 || value ? value : '' }</strong>\n\t\t\t\t\t${set.title ? set.title : '' }`\n\t\t\t});\n\n\t\t\tthis.dataPointList.appendChild(li);\n\t\t});\n\t}\n\n\tcalcPosition() {\n\t\tlet width = this.container.offsetWidth;\n\n\t\tthis.top = this.y - this.container.offsetHeight\n\t\t\t- TOOLTIP_POINTER_TRIANGLE_HEIGHT;\n\t\tthis.left = this.x - width/2;\n\t\tlet maxLeft = this.parent.offsetWidth - width;\n\n\t\tlet pointer = this.container.querySelector('.svg-pointer');\n\n\t\tif(this.left < 0) {\n\t\t\tpointer.style.left = `calc(50% - ${-1 * this.left}px)`;\n\t\t\tthis.left = 0;\n\t\t} else if(this.left > maxLeft) {\n\t\t\tlet delta = this.left - maxLeft;\n\t\t\tlet pointerOffset = `calc(50% + ${delta}px)`;\n\t\t\tpointer.style.left = pointerOffset;\n\n\t\t\tthis.left = maxLeft;\n\t\t} else {\n\t\t\tpointer.style.left = `50%`;\n\t\t}\n\t}\n\n\tsetValues(x, y, title = {}, listValues = [], index = -1) {\n\t\tthis.titleName = title.name;\n\t\tthis.titleValue = title.value;\n\t\tthis.listValues = listValues;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.titleValueFirst = title.valueFirst || 0;\n\t\tthis.index = index;\n\t\tthis.refresh();\n\t}\n\n\thideTip() {\n\t\tthis.container.style.top = '0px';\n\t\tthis.container.style.left = '0px';\n\t\tthis.container.style.opacity = '0';\n\t}\n\n\tshowTip() {\n\t\tthis.container.style.top = this.top + 'px';\n\t\tthis.container.style.left = this.left + 'px';\n\t\tthis.container.style.opacity = '1';\n\t}\n}\n\n/**\n * Returns the value of a number upto 2 decimal places.\n * @param {Number} d Any number\n */\nfunction floatTwo(d) {\n\treturn parseFloat(d.toFixed(2));\n}\n\n/**\n * Returns whether or not two given arrays are equal.\n * @param {Array} arr1 First array\n * @param {Array} arr2 Second array\n */\n\n\n/**\n * Shuffles array in place. ES6 version\n * @param {Array} array An array containing the items.\n */\n\n\n/**\n * Fill an array with extra points\n * @param {Array} array Array\n * @param {Number} count number of filler elements\n * @param {Object} element element to fill with\n * @param {Boolean} start fill at start?\n */\nfunction fillArray(array, count, element, start=false) {\n\tif(!element) {\n\t\telement = start ? array[0] : array[array.length - 1];\n\t}\n\tlet fillerArray = new Array(Math.abs(count)).fill(element);\n\tarray = start ? fillerArray.concat(array) : array.concat(fillerArray);\n\treturn array;\n}\n\n/**\n * Returns pixel width of string.\n * @param {String} string\n * @param {Number} charWidth Width of single char in pixels\n */\nfunction getStringWidth(string, charWidth) {\n\treturn (string+\"\").length * charWidth;\n}\n\n\n\n// https://stackoverflow.com/a/29325222\n\n\nfunction getPositionByAngle(angle, radius) {\n\treturn {\n\t\tx: Math.sin(angle * ANGLE_RATIO) * radius,\n\t\ty: Math.cos(angle * ANGLE_RATIO) * radius,\n\t};\n}\n\n/**\n * Check if a number is valid for svg attributes\n * @param {object} candidate Candidate to test\n * @param {Boolean} nonNegative flag to treat negative number as invalid\n */\nfunction isValidNumber(candidate, nonNegative=false) {\n\tif (Number.isNaN(candidate)) return false;\n\telse if (candidate === undefined) return false;\n\telse if (!Number.isFinite(candidate)) return false;\n\telse if (nonNegative && candidate < 0) return false;\n\telse return true;\n}\n\n/**\n * Round a number to the closes precision, max max precision 4\n * @param {Number} d Any Number\n */\nfunction round(d) {\n\t// https://floating-point-gui.de/\n\t// https://www.jacklmoore.com/notes/rounding-in-javascript/\n\treturn Number(Math.round(d + 'e4') + 'e-4');\n}\n\n/**\n * Creates a deep clone of an object\n * @param {Object} candidate Any Object\n */\n function deepClone(candidate) {\n\tlet cloned, value, key;\n  \n\tif (candidate instanceof Date) {\n\t  return new Date(candidate.getTime());\n\t}\n  \n\tif (typeof candidate !== \"object\" || candidate === null) {\n\t  return candidate;\n\t}\n  \n\tcloned = Array.isArray(candidate) ? [] : {};\n  \n\tfor (key in candidate) {\n\t  value = candidate[key];\n  \n\t  cloned[key] = deepClone(value);\n\t}\n  \n\treturn cloned;\n  }\n\nfunction getBarHeightAndYAttr(yTop, zeroLine) {\n\tlet height, y;\n\tif (yTop <= zeroLine) {\n\t\theight = zeroLine - yTop;\n\t\ty = yTop;\n\t} else {\n\t\theight = yTop - zeroLine;\n\t\ty = zeroLine;\n\t}\n\n\treturn [height, y];\n}\n\nfunction equilizeNoOfElements(array1, array2,\n\textraCount = array2.length - array1.length) {\n\n\t// Doesn't work if either has zero elements.\n\tif(extraCount > 0) {\n\t\tarray1 = fillArray(array1, extraCount);\n\t} else {\n\t\tarray2 = fillArray(array2, extraCount);\n\t}\n\treturn [array1, array2];\n}\n\nfunction truncateString(txt, len) {\n\tif (!txt) {\n\t\treturn;\n\t}\n\tif (txt.length > len) {\n\t\treturn txt.slice(0, len-3) + '...';\n\t} else {\n\t\treturn txt;\n\t}\n}\n\nfunction shortenLargeNumber(label) {\n\tlet number;\n\tif (typeof label === 'number') number = label;\n\telse if (typeof label === 'string') {\n\t\tnumber = Number(label);\n\t\tif (Number.isNaN(number)) return label;\n\t}\n\n\t// Using absolute since log wont work for negative numbers\n\tlet p = Math.floor(Math.log10(Math.abs(number)));\n\tif (p <= 2) return number; // Return as is for a 3 digit number of less\n\tlet\tl = Math.floor(p / 3);\n\tlet shortened = (Math.pow(10, p - l * 3) * +(number / Math.pow(10, p)).toFixed(1));\n\n\t// Correct for floating point error upto 2 decimal places\n\treturn Math.round(shortened*100)/100 + ' ' + ['', 'K', 'M', 'B', 'T'][l];\n}\n\n// cubic bezier curve calculation (from example by François Romain)\nfunction getSplineCurvePointsStr(xList, yList) {\n\n\tlet points=[];\n\tfor(let i=0;i<xList.length;i++){\n\t\tpoints.push([xList[i], yList[i]]);\n\t}\n\n\tlet smoothing = 0.2;\n\tlet line = (pointA, pointB) => {\n\t\tlet lengthX = pointB[0] - pointA[0];\n\t\tlet lengthY = pointB[1] - pointA[1];\n\t\treturn {\n\t\t\tlength: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n\t\t\tangle: Math.atan2(lengthY, lengthX)\n\t\t};\n\t};\n    \n\tlet controlPoint = (current, previous, next, reverse) => {\n\t\tlet p = previous || current;\n\t\tlet n = next || current;\n\t\tlet o = line(p, n);\n\t\tlet angle = o.angle + (reverse ? Math.PI : 0);\n\t\tlet length = o.length * smoothing;\n\t\tlet x = current[0] + Math.cos(angle) * length;\n\t\tlet y = current[1] + Math.sin(angle) * length;\n\t\treturn [x, y];\n\t};\n    \n\tlet bezierCommand = (point, i, a) => {\n\t\tlet cps = controlPoint(a[i - 1], a[i - 2], point);\n\t\tlet cpe = controlPoint(point, a[i - 1], a[i + 1], true);\n\t\treturn `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[1]}`;\n\t};\n    \n\tlet pointStr = (points, command) => {\n\t\treturn points.reduce((acc, point, i, a) => i === 0\n\t\t\t? `${point[0]},${point[1]}`\n\t\t\t: `${acc} ${command(point, i, a)}`, '');\n\t};\n    \n\treturn pointStr(points, bezierCommand);\n}\n\nconst PRESET_COLOR_MAP = {\n\t'light-blue': '#7cd6fd',\n\t'blue': '#5e64ff',\n\t'violet': '#743ee2',\n\t'red': '#ff5858',\n\t'orange': '#ffa00a',\n\t'yellow': '#feef72',\n\t'green': '#28a745',\n\t'light-green': '#98d85b',\n\t'purple': '#b554ff',\n\t'magenta': '#ffa3ef',\n\t'black': '#36114C',\n\t'grey': '#bdd3e6',\n\t'light-grey': '#f0f4f7',\n\t'dark-grey': '#b8c2cc'\n};\n\nfunction limitColor(r){\n\tif (r > 255) return 255;\n\telse if (r < 0) return 0;\n\treturn r;\n}\n\nfunction lightenDarkenColor(color, amt) {\n\tlet col = getColor(color);\n\tlet usePound = false;\n\tif (col[0] == \"#\") {\n\t\tcol = col.slice(1);\n\t\tusePound = true;\n\t}\n\tlet num = parseInt(col,16);\n\tlet r = limitColor((num >> 16) + amt);\n\tlet b = limitColor(((num >> 8) & 0x00FF) + amt);\n\tlet g = limitColor((num & 0x0000FF) + amt);\n\treturn (usePound?\"#\":\"\") + (g | (b << 8) | (r << 16)).toString(16);\n}\n\nfunction isValidColor(string) {\n\t// https://stackoverflow.com/a/32685393\n\tlet HEX_RE = /(^\\s*)(#)((?:[A-Fa-f0-9]{3}){1,2})$/i;\n\tlet RGB_RE = /(^\\s*)(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/i;\n\treturn HEX_RE.test(string) || RGB_RE.test(string);\n}\n\nconst getColor = (color) => {\n\t// When RGB color, convert to hexadecimal (alpha value is omitted)\n\tif((/rgb[a]{0,1}\\([\\d, ]+\\)/gim).test(color)) {\n\t\treturn (/\\D+(\\d*)\\D+(\\d*)\\D+(\\d*)/gim).exec(color)\n\t\t\t.map((x, i) => (i !== 0 ? Number(x).toString(16) : '#'))\n\t\t\t.reduce((c, ch) => `${c}${ch}`);\n\t}\n\treturn PRESET_COLOR_MAP[color] || color;\n};\n\nconst AXIS_TICK_LENGTH = 6;\nconst LABEL_MARGIN = 4;\nconst LABEL_MAX_CHARS = 15;\nconst FONT_SIZE = 10;\nconst BASE_LINE_COLOR = '#dadada';\nconst FONT_FILL = '#555b51';\n\nfunction $$1(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nfunction createSVG(tag, o) {\n\tvar element = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$$1(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $$1(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif(i === \"className\") { i = \"class\"; }\n\t\t\tif(i === \"innerHTML\") {\n\t\t\t\telement['textContent'] = val;\n\t\t\t} else {\n\t\t\t\telement.setAttribute(i, val);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn element;\n}\n\nfunction renderVerticalGradient(svgDefElem, gradientId) {\n\treturn createSVG('linearGradient', {\n\t\tinside: svgDefElem,\n\t\tid: gradientId,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: 0,\n\t\ty2: 1\n\t});\n}\n\nfunction setGradientStop(gradElem, offset, color, opacity) {\n\treturn createSVG('stop', {\n\t\t'inside': gradElem,\n\t\t'style': `stop-color: ${color}`,\n\t\t'offset': offset,\n\t\t'stop-opacity': opacity\n\t});\n}\n\nfunction makeSVGContainer(parent, className, width, height) {\n\treturn createSVG('svg', {\n\t\tclassName: className,\n\t\tinside: parent,\n\t\twidth: width,\n\t\theight: height\n\t});\n}\n\nfunction makeSVGDefs(svgContainer) {\n\treturn createSVG('defs', {\n\t\tinside: svgContainer,\n\t});\n}\n\nfunction makeSVGGroup(className, transform='', parent=undefined) {\n\tlet args = {\n\t\tclassName: className,\n\t\ttransform: transform\n\t};\n\tif(parent) args.inside = parent;\n\treturn createSVG('g', args);\n}\n\n\n\nfunction makePath(pathStr, className='', stroke='none', fill='none', strokeWidth=2) {\n\treturn createSVG('path', {\n\t\tclassName: className,\n\t\td: pathStr,\n\t\tstyles: {\n\t\t\tstroke: stroke,\n\t\t\tfill: fill,\n\t\t\t'stroke-width': strokeWidth\n\t\t}\n\t});\n}\n\nfunction makeArcPathStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, arcEndY] = [center.x + endPosition.x, center.y + endPosition.y];\n\treturn `M${center.x} ${center.y}\n\t\tL${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY} z`;\n}\n\nfunction makeCircleStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, midArc, arcEndY] = [center.x + endPosition.x, center.y * 2, center.y + endPosition.y];\n\treturn `M${center.x} ${center.y}\n\t\tL${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${midArc} z\n\t\tL${arcStartX} ${midArc}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY} z`;\n}\n\nfunction makeArcStrokePathStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, arcEndY] = [center.x + endPosition.x, center.y + endPosition.y];\n\n\treturn `M${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY}`;\n}\n\nfunction makeStrokeCircleStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, midArc, arcEndY] = [center.x + endPosition.x, radius * 2 + arcStartY, center.y + startPosition.y];\n\n\treturn `M${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${midArc}\n\t\tM${arcStartX} ${midArc}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY}`;\n}\n\nfunction makeGradient(svgDefElem, color, lighter = false) {\n\tlet gradientId ='path-fill-gradient' + '-' + color + '-' +(lighter ? 'lighter' : 'default');\n\tlet gradientDef = renderVerticalGradient(svgDefElem, gradientId);\n\tlet opacities = [1, 0.6, 0.2];\n\tif(lighter) {\n\t\topacities = [0.4, 0.2, 0];\n\t}\n\n\tsetGradientStop(gradientDef, \"0%\", color, opacities[0]);\n\tsetGradientStop(gradientDef, \"50%\", color, opacities[1]);\n\tsetGradientStop(gradientDef, \"100%\", color, opacities[2]);\n\n\treturn gradientId;\n}\n\nfunction percentageBar(x, y, width, height,\n\tdepth=PERCENTAGE_BAR_DEFAULT_DEPTH, fill='none') {\n\n\tlet args = {\n\t\tclassName: 'percentage-bar',\n\t\tx: x,\n\t\ty: y,\n\t\twidth: width,\n\t\theight: height,\n\t\tfill: fill,\n\t\tstyles: {\n\t\t\t'stroke': lightenDarkenColor(fill, -25),\n\t\t\t// Diabolically good: https://stackoverflow.com/a/9000859\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray\n\t\t\t'stroke-dasharray': `0, ${height + width}, ${width}, ${height}`,\n\t\t\t'stroke-width': depth\n\t\t},\n\t};\n\n\treturn createSVG(\"rect\", args);\n}\n\nfunction heatSquare(className, x, y, size, radius, fill='none', data={}) {\n\tlet args = {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: size,\n\t\theight: size,\n\t\trx: radius,\n\t\tfill: fill\n\t};\n\n\tObject.keys(data).map(key => {\n\t\targs[key] = data[key];\n\t});\n\n\treturn createSVG(\"rect\", args);\n}\n\nfunction legendBar(x, y, size, fill='none', label, truncate=false) {\n\tlabel = truncate ? truncateString(label, LABEL_MAX_CHARS) : label;\n\n\tlet args = {\n\t\tclassName: 'legend-bar',\n\t\tx: 0,\n\t\ty: 0,\n\t\twidth: size,\n\t\theight: '2px',\n\t\tfill: fill\n\t};\n\tlet text = createSVG('text', {\n\t\tclassName: 'legend-dataset-text',\n\t\tx: 0,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE * 2) + 'px',\n\t\t'font-size': (FONT_SIZE * 1.2) + 'px',\n\t\t'text-anchor': 'start',\n\t\tfill: FONT_FILL,\n\t\tinnerHTML: label\n\t});\n\n\tlet group = createSVG('g', {\n\t\ttransform: `translate(${x}, ${y})`\n\t});\n\tgroup.appendChild(createSVG(\"rect\", args));\n\tgroup.appendChild(text);\n\n\treturn group;\n}\n\nfunction legendDot(x, y, size, fill='none', label, truncate=false) {\n\tlabel = truncate ? truncateString(label, LABEL_MAX_CHARS) : label;\n\n\tlet args = {\n\t\tclassName: 'legend-dot',\n\t\tcx: 0,\n\t\tcy: 0,\n\t\tr: size,\n\t\tfill: fill\n\t};\n\tlet text = createSVG('text', {\n\t\tclassName: 'legend-dataset-text',\n\t\tx: 0,\n\t\ty: 0,\n\t\tdx: (FONT_SIZE) + 'px',\n\t\tdy: (FONT_SIZE/3) + 'px',\n\t\t'font-size': (FONT_SIZE * 1.2) + 'px',\n\t\t'text-anchor': 'start',\n\t\tfill: FONT_FILL,\n\t\tinnerHTML: label\n\t});\n\n\tlet group = createSVG('g', {\n\t\ttransform: `translate(${x}, ${y})`\n\t});\n\tgroup.appendChild(createSVG(\"circle\", args));\n\tgroup.appendChild(text);\n\n\treturn group;\n}\n\nfunction makeText(className, x, y, content, options = {}) {\n\tlet fontSize = options.fontSize || FONT_SIZE;\n\tlet dy = options.dy !== undefined ? options.dy : (fontSize / 2);\n\tlet fill = options.fill || FONT_FILL;\n\tlet textAnchor = options.textAnchor || 'start';\n\treturn createSVG('text', {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\tdy: dy + 'px',\n\t\t'font-size': fontSize + 'px',\n\t\tfill: fill,\n\t\t'text-anchor': textAnchor,\n\t\tinnerHTML: content\n\t});\n}\n\nfunction makeVertLine(x, label, y1, y2, options={}) {\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tlet l = createSVG('line', {\n\t\tclassName: 'line-vertical ' + options.className,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: y1,\n\t\ty2: y2,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: 0,\n\t\ty: y1 > y2 ? y1 + LABEL_MARGIN : y1 - LABEL_MARGIN - FONT_SIZE,\n\t\tdy: FONT_SIZE + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'middle',\n\t\tinnerHTML: label + \"\"\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(${ x }, 0)`\n\t});\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nfunction makeHoriLine(y, label, x1, x2, options={}) {\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.lineType) options.lineType = '';\n\tif (options.shortenNumbers) label = shortenLargeNumber(label);\n\n\tlet className = 'line-horizontal ' + options.className +\n\t\t(options.lineType === \"dashed\" ? \"dashed\": \"\");\n\n\tlet l = createSVG('line', {\n\t\tclassName: className,\n\t\tx1: x1,\n\t\tx2: x2,\n\t\ty1: 0,\n\t\ty2: 0,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: x1 < x2 ? x1 - LABEL_MARGIN : x1 + LABEL_MARGIN,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / 2 - 2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': x1 < x2 ? 'end' : 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(0, ${y})`,\n\t\t'stroke-opacity': 1\n\t});\n\n\tif(text === 0 || text === '0') {\n\t\tline.style.stroke = \"rgba(27, 31, 35, 0.6)\";\n\t}\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nfunction yLine(y, label, width, options={}) {\n\tif (!isValidNumber(y)) y = 0;\n\n\tif(!options.pos) options.pos = 'left';\n\tif(!options.offset) options.offset = 0;\n\tif(!options.mode) options.mode = 'span';\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.className) options.className = '';\n\n\tlet x1 = -1 * AXIS_TICK_LENGTH;\n\tlet x2 = options.mode === 'span' ? width + AXIS_TICK_LENGTH : 0;\n\n\tif(options.mode === 'tick' && options.pos === 'right') {\n\t\tx1 = width + AXIS_TICK_LENGTH;\n\t\tx2 = width;\n\t}\n\n\t// let offset = options.pos === 'left' ? -1 * options.offset : options.offset;\n\n\tx1 += options.offset;\n\tx2 += options.offset;\n\n\treturn makeHoriLine(y, label, x1, x2, {\n\t\tstroke: options.stroke,\n\t\tclassName: options.className,\n\t\tlineType: options.lineType,\n\t\tshortenNumbers: options.shortenNumbers\n\t});\n}\n\nfunction xLine(x, label, height, options={}) {\n\tif (!isValidNumber(x)) x = 0;\n\n\tif(!options.pos) options.pos = 'bottom';\n\tif(!options.offset) options.offset = 0;\n\tif(!options.mode) options.mode = 'span';\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.className) options.className = '';\n\n\t// Draw X axis line in span/tick mode with optional label\n\t//                        \ty2(span)\n\t// \t\t\t\t\t\t|\n\t// \t\t\t\t\t\t|\n\t//\t\t\t\tx line\t|\n\t//\t\t\t\t\t\t|\n\t// \t\t\t\t\t   \t|\n\t// ---------------------+-- y2(tick)\n\t//\t\t\t\t\t\t|\n\t//\t\t\t\t\t\t\ty1\n\n\tlet y1 = height + AXIS_TICK_LENGTH;\n\tlet y2 = options.mode === 'span' ? -1 * AXIS_TICK_LENGTH : height;\n\n\tif(options.mode === 'tick' && options.pos === 'top') {\n\t\t// top axis ticks\n\t\ty1 = -1 * AXIS_TICK_LENGTH;\n\t\ty2 = 0;\n\t}\n\n\treturn makeVertLine(x, label, y1, y2, {\n\t\tstroke: options.stroke,\n\t\tclassName: options.className,\n\t\tlineType: options.lineType\n\t});\n}\n\nfunction yMarker(y, label, width, options={}) {\n\tif(!options.labelPos) options.labelPos = 'right';\n\tlet x = options.labelPos === 'left' ? LABEL_MARGIN\n\t\t: width - getStringWidth(label, 5) - LABEL_MARGIN;\n\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: x,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet line = makeHoriLine(y, '', 0, width, {\n\t\tstroke: options.stroke || BASE_LINE_COLOR,\n\t\tclassName: options.className || '',\n\t\tlineType: options.lineType\n\t});\n\n\tline.appendChild(labelSvg);\n\n\treturn line;\n}\n\nfunction yRegion(y1, y2, width, label, options={}) {\n\t// return a group\n\tlet height = y1 - y2;\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`, // remove class\n\t\tstyles: {\n\t\t\tfill: `rgba(228, 234, 239, 0.49)`,\n\t\t\tstroke: BASE_LINE_COLOR,\n\t\t\t'stroke-dasharray': `${width}, ${height}`\n\t\t},\n\t\t// 'data-point-index': index,\n\t\tx: 0,\n\t\ty: 0,\n\t\twidth: width,\n\t\theight: height\n\t});\n\n\tif(!options.labelPos) options.labelPos = 'right';\n\tlet x = options.labelPos === 'left' ? LABEL_MARGIN\n\t\t: width - getStringWidth(label+\"\", 4.5) - LABEL_MARGIN;\n\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: x,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet region = createSVG('g', {\n\t\ttransform: `translate(0, ${y2})`\n\t});\n\n\tregion.appendChild(rect);\n\tregion.appendChild(labelSvg);\n\n\treturn region;\n}\n\nfunction datasetBar(x, yTop, width, color, label='', index=0, offset=0, meta={}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\ty -= offset;\n\n\tif(height === 0) {\n\t\theight = meta.minHeight;\n\t\ty -= meta.minHeight;\n\t}\n\n\t// Preprocess numbers to avoid svg building errors\n\tif (!isValidNumber(x)) x = 0;\n\tif (!isValidNumber(y)) y = 0;\n\tif (!isValidNumber(height, true)) height = 0;\n\tif (!isValidNumber(width, true)) width = 0;\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`,\n\t\tstyle: `fill: ${color}`,\n\t\t'data-point-index': index,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: width,\n\t\theight: height\n\t});\n\n\tlabel += \"\";\n\n\tif(!label && !label.length) {\n\t\treturn rect;\n\t} else {\n\t\trect.setAttribute('y', 0);\n\t\trect.setAttribute('x', 0);\n\t\tlet text = createSVG('text', {\n\t\t\tclassName: 'data-point-value',\n\t\t\tx: width/2,\n\t\t\ty: 0,\n\t\t\tdy: (FONT_SIZE / 2 * -1) + 'px',\n\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t'text-anchor': 'middle',\n\t\t\tinnerHTML: label\n\t\t});\n\n\t\tlet group = createSVG('g', {\n\t\t\t'data-point-index': index,\n\t\t\ttransform: `translate(${x}, ${y})`\n\t\t});\n\t\tgroup.appendChild(rect);\n\t\tgroup.appendChild(text);\n\n\t\treturn group;\n\t}\n}\n\nfunction datasetDot(x, y, radius, color, label='', index=0) {\n\tlet dot = createSVG('circle', {\n\t\tstyle: `fill: ${color}`,\n\t\t'data-point-index': index,\n\t\tcx: x,\n\t\tcy: y,\n\t\tr: radius\n\t});\n\n\tlabel += \"\";\n\n\tif(!label && !label.length) {\n\t\treturn dot;\n\t} else {\n\t\tdot.setAttribute('cy', 0);\n\t\tdot.setAttribute('cx', 0);\n\n\t\tlet text = createSVG('text', {\n\t\t\tclassName: 'data-point-value',\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tdy: (FONT_SIZE / 2 * -1 - radius) + 'px',\n\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t'text-anchor': 'middle',\n\t\t\tinnerHTML: label\n\t\t});\n\n\t\tlet group = createSVG('g', {\n\t\t\t'data-point-index': index,\n\t\t\ttransform: `translate(${x}, ${y})`\n\t\t});\n\t\tgroup.appendChild(dot);\n\t\tgroup.appendChild(text);\n\n\t\treturn group;\n\t}\n}\n\nfunction getPaths(xList, yList, color, options={}, meta={}) {\n\tlet pointsList = yList.map((y, i) => (xList[i] + ',' + y));\n\tlet pointsStr = pointsList.join(\"L\");\n\n\t// Spline\n\tif (options.spline)\n\t\tpointsStr = getSplineCurvePointsStr(xList, yList);\n\n\tlet path = makePath(\"M\"+pointsStr, 'line-graph-path', color);\n\n\t// HeatLine\n\tif(options.heatline) {\n\t\tlet gradient_id = makeGradient(meta.svgDefs, color);\n\t\tpath.style.stroke = `url(#${gradient_id})`;\n\t}\n\n\tlet paths = {\n\t\tpath: path\n\t};\n\n\t// Region\n\tif(options.regionFill) {\n\t\tlet gradient_id_region = makeGradient(meta.svgDefs, color, true);\n\n\t\tlet pathStr = \"M\" + `${xList[0]},${meta.zeroLine}L` + pointsStr + `L${xList.slice(-1)[0]},${meta.zeroLine}`;\n\t\tpaths.region = makePath(pathStr, `region-fill`, 'none', `url(#${gradient_id_region})`);\n\t}\n\n\treturn paths;\n}\n\nlet makeOverlay = {\n\t'bar': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'rect') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\toverlay.style.fill = '#000000';\n\t\toverlay.style.opacity = '0.4';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t},\n\n\t'dot': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\tlet radius = unit.getAttribute('r');\n\t\tlet fill = unit.getAttribute('fill');\n\t\toverlay.setAttribute('r', parseInt(radius) + DOT_OVERLAY_SIZE_INCR);\n\t\toverlay.setAttribute('fill', fill);\n\t\toverlay.style.opacity = '0.6';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t},\n\n\t'heat_square': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\tlet radius = unit.getAttribute('r');\n\t\tlet fill = unit.getAttribute('fill');\n\t\toverlay.setAttribute('r', parseInt(radius) + DOT_OVERLAY_SIZE_INCR);\n\t\toverlay.setAttribute('fill', fill);\n\t\toverlay.style.opacity = '0.6';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t}\n};\n\nlet updateOverlay = {\n\t'bar': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'rect') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['x', 'y', 'width', 'height'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n\n\t'dot': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['cx', 'cy'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n\n\t'heat_square': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['cx', 'cy'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n};\n\nconst UNIT_ANIM_DUR = 350;\nconst PATH_ANIM_DUR = 350;\nconst MARKER_LINE_ANIM_DUR = UNIT_ANIM_DUR;\nconst REPLACE_ALL_NEW_DUR = 250;\n\nconst STD_EASING = 'easein';\n\nfunction translate(unit, oldCoord, newCoord, duration) {\n\tlet old = typeof oldCoord === 'string' ? oldCoord : oldCoord.join(', ');\n\treturn [\n\t\tunit,\n\t\t{transform: newCoord.join(', ')},\n\t\tduration,\n\t\tSTD_EASING,\n\t\t\"translate\",\n\t\t{transform: old}\n\t];\n}\n\nfunction translateVertLine(xLine, newX, oldX) {\n\treturn translate(xLine, [oldX, 0], [newX, 0], MARKER_LINE_ANIM_DUR);\n}\n\nfunction translateHoriLine(yLine, newY, oldY) {\n\treturn translate(yLine, [0, oldY], [0, newY], MARKER_LINE_ANIM_DUR);\n}\n\nfunction animateRegion(rectGroup, newY1, newY2, oldY2) {\n\tlet newHeight = newY1 - newY2;\n\tlet rect = rectGroup.childNodes[0];\n\tlet width = rect.getAttribute(\"width\");\n\tlet rectAnim = [\n\t\trect,\n\t\t{ height: newHeight, 'stroke-dasharray': `${width}, ${newHeight}` },\n\t\tMARKER_LINE_ANIM_DUR,\n\t\tSTD_EASING\n\t];\n\n\tlet groupAnim = translate(rectGroup, [0, oldY2], [0, newY2], MARKER_LINE_ANIM_DUR);\n\treturn [rectAnim, groupAnim];\n}\n\nfunction animateBar(bar, x, yTop, width, offset=0, meta={}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\ty -= offset;\n\tif(bar.nodeName !== 'rect') {\n\t\tlet rect = bar.childNodes[0];\n\t\tlet rectAnim = [\n\t\t\trect,\n\t\t\t{width: width, height: height},\n\t\t\tUNIT_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t];\n\n\t\tlet oldCoordStr = bar.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(bar, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [rectAnim, groupAnim];\n\t} else {\n\t\treturn [[bar, {width: width, height: height, x: x, y: y}, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// bar.animate({height: args.newHeight, y: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nfunction animateDot(dot, x, y) {\n\tif(dot.nodeName !== 'circle') {\n\t\tlet oldCoordStr = dot.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(dot, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [groupAnim];\n\t} else {\n\t\treturn [[dot, {cx: x, cy: y}, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// dot.animate({cy: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nfunction animatePath(paths, newXList, newYList, zeroLine, spline) {\n\tlet pathComponents = [];\n\tlet pointsStr = newYList.map((y, i) => (newXList[i] + ',' + y)).join(\"L\");\n\n\tif (spline)\n\t\tpointsStr = getSplineCurvePointsStr(newXList, newYList);\n\n\tconst animPath = [paths.path, {d:\"M\" + pointsStr}, PATH_ANIM_DUR, STD_EASING];\n\tpathComponents.push(animPath);\n\n\tif(paths.region) {\n\t\tlet regStartPt = `${newXList[0]},${zeroLine}L`;\n\t\tlet regEndPt = `L${newXList.slice(-1)[0]}, ${zeroLine}`;\n\n\t\tconst animRegion = [\n\t\t\tpaths.region,\n\t\t\t{d:\"M\" + regStartPt + pointsStr + regEndPt},\n\t\t\tPATH_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t];\n\t\tpathComponents.push(animRegion);\n\t}\n\n\treturn pathComponents;\n}\n\nfunction animatePathStr(oldPath, pathStr) {\n\treturn [oldPath, {d: pathStr}, UNIT_ANIM_DUR, STD_EASING];\n}\n\n// Leveraging SMIL Animations\n\nconst EASING = {\n\tease: \"0.25 0.1 0.25 1\",\n\tlinear: \"0 0 1 1\",\n\t// easein: \"0.42 0 1 1\",\n\teasein: \"0.1 0.8 0.2 1\",\n\teaseout: \"0 0 0.58 1\",\n\teaseinout: \"0.42 0 0.58 1\"\n};\n\nfunction animateSVGElement(element, props, dur, easingType=\"linear\", type=undefined, oldValues={}) {\n\n\tlet animElement = element.cloneNode(true);\n\tlet newElement = element.cloneNode(true);\n\n\tfor(var attributeName in props) {\n\t\tlet animateElement;\n\t\tif(attributeName === 'transform') {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animateTransform\");\n\t\t} else {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animate\");\n\t\t}\n\t\tlet currentValue = oldValues[attributeName] || element.getAttribute(attributeName);\n\t\tlet value = props[attributeName];\n\n\t\tlet animAttr = {\n\t\t\tattributeName: attributeName,\n\t\t\tfrom: currentValue,\n\t\t\tto: value,\n\t\t\tbegin: \"0s\",\n\t\t\tdur: dur/1000 + \"s\",\n\t\t\tvalues: currentValue + \";\" + value,\n\t\t\tkeySplines: EASING[easingType],\n\t\t\tkeyTimes: \"0;1\",\n\t\t\tcalcMode: \"spline\",\n\t\t\tfill: 'freeze'\n\t\t};\n\n\t\tif(type) {\n\t\t\tanimAttr[\"type\"] = type;\n\t\t}\n\n\t\tfor (var i in animAttr) {\n\t\t\tanimateElement.setAttribute(i, animAttr[i]);\n\t\t}\n\n\t\tanimElement.appendChild(animateElement);\n\n\t\tif(type) {\n\t\t\tnewElement.setAttribute(attributeName, `translate(${value})`);\n\t\t} else {\n\t\t\tnewElement.setAttribute(attributeName, value);\n\t\t}\n\t}\n\n\treturn [animElement, newElement];\n}\n\nfunction transform(element, style) { // eslint-disable-line no-unused-vars\n\telement.style.transform = style;\n\telement.style.webkitTransform = style;\n\telement.style.msTransform = style;\n\telement.style.mozTransform = style;\n\telement.style.oTransform = style;\n}\n\nfunction animateSVG(svgContainer, elements) {\n\tlet newElements = [];\n\tlet animElements = [];\n\n\telements.map(element => {\n\t\tlet unit = element[0];\n\t\tlet parent = unit.parentNode;\n\n\t\tlet animElement, newElement;\n\n\t\telement[0] = unit;\n\t\t[animElement, newElement] = animateSVGElement(...element);\n\n\t\tnewElements.push(newElement);\n\t\tanimElements.push([animElement, parent]);\n\t\t\n\t\tif (parent) {\n\t\t\tparent.replaceChild(animElement, unit);\n\t\t}\n\t});\n\n\tlet animSvg = svgContainer.cloneNode(true);\n\n\tanimElements.map((animElement, i) => {\n\t\tif (animElement[1]) {\n\t\t\tanimElement[1].replaceChild(newElements[i], animElement[0]);\n\t\t\telements[i][0] = newElements[i];\n\t\t}\n\t});\n\n\treturn animSvg;\n}\n\nfunction runSMILAnimation(parent, svgElement, elementsToAnimate) {\n\tif(elementsToAnimate.length === 0) return;\n\n\tlet animSvgElement = animateSVG(svgElement, elementsToAnimate);\n\tif(svgElement.parentNode == parent) {\n\t\tparent.removeChild(svgElement);\n\t\tparent.appendChild(animSvgElement);\n\n\t}\n\n\t// Replace the new svgElement (data has already been replaced)\n\tsetTimeout(() => {\n\t\tif(animSvgElement.parentNode == parent) {\n\t\t\tparent.removeChild(animSvgElement);\n\t\t\tparent.appendChild(svgElement);\n\t\t}\n\t}, REPLACE_ALL_NEW_DUR);\n}\n\nconst CSSTEXT = \".chart-container{position:relative;font-family:-apple-system,BlinkMacSystemFont,'Segoe UI','Roboto','Oxygen','Ubuntu','Cantarell','Fira Sans','Droid Sans','Helvetica Neue',sans-serif}.chart-container .axis,.chart-container .chart-label{fill:#555b51}.chart-container .axis line,.chart-container .chart-label line{stroke:#dadada}.chart-container .dataset-units circle{stroke:#fff;stroke-width:2}.chart-container .dataset-units path{fill:none;stroke-opacity:1;stroke-width:2px}.chart-container .dataset-path{stroke-width:2px}.chart-container .path-group path{fill:none;stroke-opacity:1;stroke-width:2px}.chart-container line.dashed{stroke-dasharray:5,3}.chart-container .axis-line .specific-value{text-anchor:start}.chart-container .axis-line .y-line{text-anchor:end}.chart-container .axis-line .x-line{text-anchor:middle}.chart-container .legend-dataset-text{fill:#6c7680;font-weight:600}.graph-svg-tip{position:absolute;z-index:99999;padding:10px;font-size:12px;color:#959da5;text-align:center;background:rgba(0,0,0,.8);border-radius:3px}.graph-svg-tip ul{padding-left:0;display:flex}.graph-svg-tip ol{padding-left:0;display:flex}.graph-svg-tip ul.data-point-list li{min-width:90px;flex:1;font-weight:600}.graph-svg-tip strong{color:#dfe2e5;font-weight:600}.graph-svg-tip .svg-pointer{position:absolute;height:5px;margin:0 0 0 -5px;content:' ';border:5px solid transparent;border-top-color:rgba(0,0,0,.8)}.graph-svg-tip.comparison{padding:0;text-align:left;pointer-events:none}.graph-svg-tip.comparison .title{display:block;padding:10px;margin:0;font-weight:600;line-height:1;pointer-events:none}.graph-svg-tip.comparison ul{margin:0;white-space:nowrap;list-style:none}.graph-svg-tip.comparison li{display:inline-block;padding:5px 10px}\";\n\nfunction downloadFile(filename, data) {\n\tvar a = document.createElement('a');\n\ta.style = \"display: none\";\n\tvar blob = new Blob(data, {type: \"image/svg+xml; charset=utf-8\"});\n\tvar url = window.URL.createObjectURL(blob);\n\ta.href = url;\n\ta.download = filename;\n\tdocument.body.appendChild(a);\n\ta.click();\n\tsetTimeout(function(){\n\t\tdocument.body.removeChild(a);\n\t\twindow.URL.revokeObjectURL(url);\n\t}, 300);\n}\n\nfunction prepareForExport(svg) {\n\tlet clone = svg.cloneNode(true);\n\tclone.classList.add('chart-container');\n\tclone.setAttribute('xmlns', \"http://www.w3.org/2000/svg\");\n\tclone.setAttribute('xmlns:xlink', \"http://www.w3.org/1999/xlink\");\n\tlet styleEl = $.create('style', {\n\t\t'innerHTML': CSSTEXT\n\t});\n\tclone.insertBefore(styleEl, clone.firstChild);\n\n\tlet container = $.create('div');\n\tcontainer.appendChild(clone);\n\n\treturn container.innerHTML;\n}\n\nclass BaseChart {\n\tconstructor(parent, options) {\n\t\t// deepclone options to avoid making changes to orignal object\n\t\toptions = deepClone(options);\n\n\t\tthis.parent = typeof parent === 'string'\n\t\t\t? document.querySelector(parent)\n\t\t\t: parent;\n\n\t\tif (!(this.parent instanceof HTMLElement)) {\n\t\t\tthrow new Error('No `parent` element to render on was provided.');\n\t\t}\n\n\t\tthis.rawChartArgs = options;\n\n\t\tthis.title = options.title || '';\n\t\tthis.type = options.type || '';\n\n\t\tthis.realData = this.prepareData(options.data);\n\t\tthis.data = this.prepareFirstData(this.realData);\n\n\t\tthis.colors = this.validateColors(options.colors, this.type);\n\n\t\tthis.config = {\n\t\t\tshowTooltip: 1, // calculate\n\t\t\tshowLegend: 1, // calculate\n\t\t\tisNavigable: options.isNavigable || 0,\n\t\t\tanimate: (typeof options.animate !== 'undefined') ? options.animate : 1,\n\t\t\ttruncateLegends: options.truncateLegends || 1\n\t\t};\n\n\t\tthis.measures = JSON.parse(JSON.stringify(BASE_MEASURES));\n\t\tlet m = this.measures;\n\t\tthis.setMeasures(options);\n\t\tif(!this.title.length) { m.titleHeight = 0; }\n\t\tif(!this.config.showLegend) m.legendHeight = 0;\n\t\tthis.argHeight = options.height || m.baseHeight;\n\n\t\tthis.state = {};\n\t\tthis.options = {};\n\n\t\tthis.initTimeout = INIT_CHART_UPDATE_TIMEOUT;\n\n\t\tif(this.config.isNavigable) {\n\t\t\tthis.overlays = [];\n\t\t}\n\n\t\tthis.configure(options);\n\t}\n\n\tprepareData(data) {\n\t\treturn data;\n\t}\n\n\tprepareFirstData(data) {\n\t\treturn data;\n\t}\n\n\tvalidateColors(colors, type) {\n\t\tconst validColors = [];\n\t\tcolors = (colors || []).concat(DEFAULT_COLORS[type]);\n\t\tcolors.forEach((string) => {\n\t\t\tconst color = getColor(string);\n\t\t\tif(!isValidColor(color)) {\n\t\t\t\tconsole.warn('\"' + string + '\" is not a valid color.');\n\t\t\t} else {\n\t\t\t\tvalidColors.push(color);\n\t\t\t}\n\t\t});\n\t\treturn validColors;\n\t}\n\n\tsetMeasures() {\n\t\t// Override measures, including those for title and legend\n\t\t// set config for legend and title\n\t}\n\n\tconfigure() {\n\t\tlet height = this.argHeight;\n\t\tthis.baseHeight = height;\n\t\tthis.height = height - getExtraHeight(this.measures);\n\n\t\t// Bind window events\n\t\tthis.boundDrawFn = () => this.draw(true);\n\t\tif (ResizeObserver) {\n\t\t\tthis.resizeObserver = new ResizeObserver(this.boundDrawFn);\n\t\t\tthis.resizeObserver.observe(this.parent);\n\t\t}\n\t\twindow.addEventListener('resize', this.boundDrawFn);\n\t\twindow.addEventListener('orientationchange', this.boundDrawFn);\n\t}\n\n\tdestroy() {\n\t\tif (this.resizeObserver) this.resizeObserver.disconnect();\n\t\twindow.removeEventListener('resize', this.boundDrawFn);\n\t\twindow.removeEventListener('orientationchange', this.boundDrawFn);\n\t}\n\n\t// Has to be called manually\n\tsetup() {\n\t\tthis.makeContainer();\n\t\tthis.updateWidth();\n\t\tthis.makeTooltip();\n\n\t\tthis.draw(false, true);\n\t}\n\n\tmakeContainer() {\n\t\t// Chart needs a dedicated parent element\n\t\tthis.parent.innerHTML = '';\n\n\t\tlet args = {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'chart-container'\n\t\t};\n\n\t\tif(this.independentWidth) {\n\t\t\targs.styles = { width: this.independentWidth + 'px' };\n\t\t}\n\n\t\tthis.container = $.create('div', args);\n\t}\n\n\tmakeTooltip() {\n\t\tthis.tip = new SvgTip({\n\t\t\tparent: this.container,\n\t\t\tcolors: this.colors\n\t\t});\n\t\tthis.bindTooltip();\n\t}\n\n\tbindTooltip() {}\n\n\tdraw(onlyWidthChange=false, init=false) {\n\t\tif (onlyWidthChange && isHidden(this.parent)) {\n\t\t\t// Don't update anything if the chart is hidden\n\t\t\treturn;\n\t\t}\n\t\tthis.updateWidth();\n\n\t\tthis.calc(onlyWidthChange);\n\t\tthis.makeChartArea();\n\t\tthis.setupComponents();\n\n\t\tthis.components.forEach(c => c.setup(this.drawArea));\n\t\t// this.components.forEach(c => c.make());\n\t\tthis.render(this.components, false);\n\n\t\tif(init) {\n\t\t\tthis.data = this.realData;\n\t\t\tsetTimeout(() => {this.update(this.data);}, this.initTimeout);\n\t\t}\n\n\t\tthis.renderLegend();\n\n\t\tthis.setupNavigation(init);\n\t}\n\n\tcalc() {} // builds state\n\n\tupdateWidth() {\n\t\tthis.baseWidth = getElementContentWidth(this.parent);\n\t\tthis.width = this.baseWidth - getExtraWidth(this.measures);\n\t}\n\n\tmakeChartArea() {\n\t\tif(this.svg) {\n\t\t\tthis.container.removeChild(this.svg);\n\t\t}\n\t\tlet m = this.measures;\n\n\t\tthis.svg = makeSVGContainer(\n\t\t\tthis.container,\n\t\t\t'frappe-chart chart',\n\t\t\tthis.baseWidth,\n\t\t\tthis.baseHeight\n\t\t);\n\t\tthis.svgDefs = makeSVGDefs(this.svg);\n\n\t\tif(this.title.length) {\n\t\t\tthis.titleEL = makeText(\n\t\t\t\t'title',\n\t\t\t\tm.margins.left,\n\t\t\t\tm.margins.top,\n\t\t\t\tthis.title,\n\t\t\t\t{\n\t\t\t\t\tfontSize: m.titleFontSize,\n\t\t\t\t\tfill: '#666666',\n\t\t\t\t\tdy: m.titleFontSize\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tlet top = getTopOffset(m);\n\t\tthis.drawArea = makeSVGGroup(\n\t\t\tthis.type + '-chart chart-draw-area',\n\t\t\t`translate(${getLeftOffset(m)}, ${top})`\n\t\t);\n\n\t\tif(this.config.showLegend) {\n\t\t\ttop += this.height + m.paddings.bottom;\n\t\t\tthis.legendArea = makeSVGGroup(\n\t\t\t\t'chart-legend',\n\t\t\t\t`translate(${getLeftOffset(m)}, ${top})`\n\t\t\t);\n\t\t}\n\n\t\tif(this.title.length) { this.svg.appendChild(this.titleEL); }\n\t\tthis.svg.appendChild(this.drawArea);\n\t\tif(this.config.showLegend) { this.svg.appendChild(this.legendArea); }\n\n\t\tthis.updateTipOffset(getLeftOffset(m), getTopOffset(m));\n\t}\n\n\tupdateTipOffset(x, y) {\n\t\tthis.tip.offset = {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n\n\tsetupComponents() { this.components = new Map(); }\n\n\tupdate(data) {\n\t\tif(!data) {\n\t\t\tconsole.error('No data to update.');\n\t\t}\n\t\tthis.data = this.prepareData(data);\n\t\tthis.calc(); // builds state\n\t\tthis.render(this.components, this.config.animate);\n\t\tthis.renderLegend();\n\t}\n\n\trender(components=this.components, animate=true) {\n\t\tif(this.config.isNavigable) {\n\t\t\t// Remove all existing overlays\n\t\t\tthis.overlays.map(o => o.parentNode.removeChild(o));\n\t\t\t// ref.parentNode.insertBefore(element, ref);\n\t\t}\n\t\tlet elementsToAnimate = [];\n\t\t// Can decouple to this.refreshComponents() first to save animation timeout\n\t\tcomponents.forEach(c => {\n\t\t\telementsToAnimate = elementsToAnimate.concat(c.update(animate));\n\t\t});\n\t\tif(elementsToAnimate.length > 0) {\n\t\t\trunSMILAnimation(this.container, this.svg, elementsToAnimate);\n\t\t\tsetTimeout(() => {\n\t\t\t\tcomponents.forEach(c => c.make());\n\t\t\t\tthis.updateNav();\n\t\t\t}, CHART_POST_ANIMATE_TIMEOUT);\n\t\t} else {\n\t\t\tcomponents.forEach(c => c.make());\n\t\t\tthis.updateNav();\n\t\t}\n\t}\n\n\tupdateNav() {\n\t\tif(this.config.isNavigable) {\n\t\t\tthis.makeOverlay();\n\t\t\tthis.bindUnits();\n\t\t}\n\t}\n\n\trenderLegend() {}\n\n\tsetupNavigation(init=false) {\n\t\tif(!this.config.isNavigable) return;\n\n\t\tif(init) {\n\t\t\tthis.bindOverlay();\n\n\t\t\tthis.keyActions = {\n\t\t\t\t'13': this.onEnterKey.bind(this),\n\t\t\t\t'37': this.onLeftArrow.bind(this),\n\t\t\t\t'38': this.onUpArrow.bind(this),\n\t\t\t\t'39': this.onRightArrow.bind(this),\n\t\t\t\t'40': this.onDownArrow.bind(this),\n\t\t\t};\n\n\t\t\tdocument.addEventListener('keydown', (e) => {\n\t\t\t\tif(isElementInViewport(this.container)) {\n\t\t\t\t\te = e || window.event;\n\t\t\t\t\tif(this.keyActions[e.keyCode]) {\n\t\t\t\t\t\tthis.keyActions[e.keyCode]();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tmakeOverlay() {}\n\tupdateOverlay() {}\n\tbindOverlay() {}\n\tbindUnits() {}\n\n\tonLeftArrow() {}\n\tonRightArrow() {}\n\tonUpArrow() {}\n\tonDownArrow() {}\n\tonEnterKey() {}\n\n\taddDataPoint() {}\n\tremoveDataPoint() {}\n\n\tgetDataPoint() {}\n\tsetCurrentDataPoint() {}\n\n\tupdateDataset() {}\n\n\texport() {\n\t\tlet chartSvg = prepareForExport(this.svg);\n\t\tdownloadFile(this.title || 'Chart', [chartSvg]);\n\t}\n}\n\nclass AggregationChart extends BaseChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\n\t\tthis.config.formatTooltipY = (args.tooltipOptions || {}).formatTooltipY;\n\t\tthis.config.maxSlices = args.maxSlices || 20;\n\t\tthis.config.maxLegendPoints = args.maxLegendPoints || 20;\n\t}\n\n\tcalc() {\n\t\tlet s = this.state;\n\t\tlet maxSlices = this.config.maxSlices;\n\t\ts.sliceTotals = [];\n\n\t\tlet allTotals = this.data.labels.map((label, i) => {\n\t\t\tlet total = 0;\n\t\t\tthis.data.datasets.map(e => {\n\t\t\t\ttotal += e.values[i];\n\t\t\t});\n\t\t\treturn [total, label];\n\t\t}).filter(d => { return d[0] >= 0; }); // keep only positive results\n\n\t\tlet totals = allTotals;\n\t\tif(allTotals.length > maxSlices) {\n\t\t\t// Prune and keep a grey area for rest as per maxSlices\n\t\t\tallTotals.sort((a, b) => { return b[0] - a[0]; });\n\n\t\t\ttotals = allTotals.slice(0, maxSlices-1);\n\t\t\tlet remaining = allTotals.slice(maxSlices-1);\n\n\t\t\tlet sumOfRemaining = 0;\n\t\t\tremaining.map(d => {sumOfRemaining += d[0];});\n\t\t\ttotals.push([sumOfRemaining, 'Rest']);\n\t\t\tthis.colors[maxSlices-1] = 'grey';\n\t\t}\n\n\t\ts.labels = [];\n\t\ttotals.map(d => {\n\t\t\ts.sliceTotals.push(round(d[0]));\n\t\t\ts.labels.push(d[1]);\n\t\t});\n\n\t\ts.grandTotal = s.sliceTotals.reduce((a, b) => a + b, 0);\n\n\t\tthis.center = {\n\t\t\tx: this.width / 2,\n\t\t\ty: this.height / 2\n\t\t};\n\t}\n\n\trenderLegend() {\n\t\tlet s = this.state;\n\t\tthis.legendArea.textContent = '';\n\t\tthis.legendTotals = s.sliceTotals.slice(0, this.config.maxLegendPoints);\n\n\t\tlet count = 0;\n\t\tlet y = 0;\n\t\tthis.legendTotals.map((d, i) => {\n\t\t\tlet barWidth = 150;\n\t\t\tlet divisor = Math.floor(\n\t\t\t\t(this.width - getExtraWidth(this.measures))/barWidth\n\t\t\t);\n\t\t\tif (this.legendTotals.length < divisor) {\n\t\t\t\tbarWidth = this.width/this.legendTotals.length;\n\t\t\t}\n\t\t\tif(count > divisor) {\n\t\t\t\tcount = 0;\n\t\t\t\ty += 20;\n\t\t\t}\n\t\t\tlet x = barWidth * count + 5;\n\t\t\tlet label = this.config.truncateLegends ? truncateString(s.labels[i], barWidth/10) : s.labels[i];\n\t\t\tlet formatted = this.config.formatTooltipY ? this.config.formatTooltipY(d) : d;\n\t\t\tlet dot = legendDot(\n\t\t\t\tx,\n\t\t\t\ty,\n\t\t\t\t5,\n\t\t\t\tthis.colors[i],\n\t\t\t\t`${label}: ${formatted}`,\n\t\t\t\tfalse\n\t\t\t);\n\t\t\tthis.legendArea.appendChild(dot);\n\t\t\tcount++;\n\t\t});\n\t}\n}\n\n// Playing around with dates\n\nconst NO_OF_YEAR_MONTHS = 12;\nconst NO_OF_DAYS_IN_WEEK = 7;\n\nconst NO_OF_MILLIS = 1000;\nconst SEC_IN_DAY = 86400;\n\nconst MONTH_NAMES = [\"January\", \"February\", \"March\", \"April\", \"May\",\n\t\"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n\nconst DAY_NAMES_SHORT = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\n\n// https://stackoverflow.com/a/11252167/6495043\nfunction treatAsUtc(date) {\n\tlet result = new Date(date);\n\tresult.setMinutes(result.getMinutes() - result.getTimezoneOffset());\n\treturn result;\n}\n\nfunction getYyyyMmDd(date) {\n\tlet dd = date.getDate();\n\tlet mm = date.getMonth() + 1; // getMonth() is zero-based\n\treturn [\n\t\tdate.getFullYear(),\n\t\t(mm>9 ? '' : '0') + mm,\n\t\t(dd>9 ? '' : '0') + dd\n\t].join('-');\n}\n\nfunction clone(date) {\n\treturn new Date(date.getTime());\n}\n\n\n\n\n\n// export function getMonthsBetween(startDate, endDate) {}\n\nfunction getWeeksBetween(startDate, endDate) {\n\tlet weekStartDate = setDayToSunday(startDate);\n\treturn Math.ceil(getDaysBetween(weekStartDate, endDate) / NO_OF_DAYS_IN_WEEK);\n}\n\nfunction getDaysBetween(startDate, endDate) {\n\tlet millisecondsPerDay = SEC_IN_DAY * NO_OF_MILLIS;\n\treturn (treatAsUtc(endDate) - treatAsUtc(startDate)) / millisecondsPerDay;\n}\n\nfunction areInSameMonth(startDate, endDate) {\n\treturn startDate.getMonth() === endDate.getMonth()\n\t\t&& startDate.getFullYear() === endDate.getFullYear();\n}\n\nfunction getMonthName(i, short=false) {\n\tlet monthName = MONTH_NAMES[i];\n\treturn short ? monthName.slice(0, 3) : monthName;\n}\n\nfunction getLastDateInMonth (month, year) {\n\treturn new Date(year, month + 1, 0); // 0: last day in previous month\n}\n\n// mutates\nfunction setDayToSunday(date) {\n\tlet newDate = clone(date);\n\tconst day = newDate.getDay();\n\tif(day !== 0) {\n\t\taddDays(newDate, (-1) * day);\n\t}\n\treturn newDate;\n}\n\n// mutates\nfunction addDays(date, numberOfDays) {\n\tdate.setDate(date.getDate() + numberOfDays);\n}\n\nclass ChartComponent {\n\tconstructor({\n\t\tlayerClass = '',\n\t\tlayerTransform = '',\n\t\tconstants,\n\n\t\tgetData,\n\t\tmakeElements,\n\t\tanimateElements\n\t}) {\n\t\tthis.layerTransform = layerTransform;\n\t\tthis.constants = constants;\n\n\t\tthis.makeElements = makeElements;\n\t\tthis.getData = getData;\n\n\t\tthis.animateElements = animateElements;\n\n\t\tthis.store = [];\n\t\tthis.labels = [];\n\n\t\tthis.layerClass = layerClass;\n\t\tthis.layerClass = typeof(this.layerClass) === 'function'\n\t\t\t? this.layerClass() : this.layerClass;\n\n\t\tthis.refresh();\n\t}\n\n\trefresh(data) {\n\t\tthis.data = data || this.getData();\n\t}\n\n\tsetup(parent) {\n\t\tthis.layer = makeSVGGroup(this.layerClass, this.layerTransform, parent);\n\t}\n\n\tmake() {\n\t\tthis.render(this.data);\n\t\tthis.oldData = this.data;\n\t}\n\n\trender(data) {\n\t\tthis.store = this.makeElements(data);\n\n\t\tthis.layer.textContent = '';\n\t\tthis.store.forEach(element => {\n\t\t\tthis.layer.appendChild(element);\n\t\t});\n\t\tthis.labels.forEach(element => {\n\t\t\tthis.layer.appendChild(element);\n\t\t});\n\t}\n\n\tupdate(animate = true) {\n\t\tthis.refresh();\n\t\tlet animateElements = [];\n\t\tif(animate) {\n\t\t\tanimateElements = this.animateElements(this.data) || [];\n\t\t}\n\t\treturn animateElements;\n\t}\n}\n\nlet componentConfigs = {\n\tdonutSlices: {\n\t\tlayerClass: 'donut-slices',\n\t\tmakeElements(data) {\n\t\t\treturn data.sliceStrings.map((s, i) => {\n\t\t\t\tlet slice = makePath(s, 'donut-path', data.colors[i], 'none', data.strokeWidth);\n\t\t\t\tslice.style.transition = 'transform .3s;';\n\t\t\t\treturn slice;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\treturn this.store.map((slice, i) => animatePathStr(slice, newData.sliceStrings[i]));\n\t\t},\n\t},\n\tpieSlices: {\n\t\tlayerClass: 'pie-slices',\n\t\tmakeElements(data) {\n\t\t\treturn data.sliceStrings.map((s, i) =>{\n\t\t\t\tlet slice = makePath(s, 'pie-path', 'none', data.colors[i]);\n\t\t\t\tslice.style.transition = 'transform .3s;';\n\t\t\t\treturn slice;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\treturn this.store.map((slice, i) =>\n\t\t\t\tanimatePathStr(slice, newData.sliceStrings[i])\n\t\t\t);\n\t\t}\n\t},\n\tpercentageBars: {\n\t\tlayerClass: 'percentage-bars',\n\t\tmakeElements(data) {\n\t\t\treturn data.xPositions.map((x, i) =>{\n\t\t\t\tlet y = 0;\n\t\t\t\tlet bar = percentageBar(x, y, data.widths[i],\n\t\t\t\t\tthis.constants.barHeight, this.constants.barDepth, data.colors[i]);\n\t\t\t\treturn bar;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tif(newData) return [];\n\t\t}\n\t},\n\tyAxis: {\n\t\tlayerClass: 'y axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\tyLine(position, data.labels[i], this.constants.width,\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos, shortenNumbers: this.constants.shortenNumbers})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos = newData.positions;\n\t\t\tlet newLabels = newData.labels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tlabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\txAxis: {\n\t\tlayerClass: 'x axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\txLine(position, data.calcLabels[i], this.constants.height,\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos = newData.positions;\n\t\t\tlet newLabels = newData.calcLabels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.calcLabels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tcalcLabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateVertLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyMarkers: {\n\t\tlayerClass: 'y-markers',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(m =>\n\t\t\t\tyMarker(m.position, m.label, this.constants.width,\n\t\t\t\t\t{labelPos: m.options.labelPos, mode: 'span', lineType: 'dashed'})\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.position);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\t\t\tlet newOptions = newData.map(d => d.options);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.position);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tposition: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i],\n\t\t\t\t\toptions: newOptions[i]\n\t\t\t\t};\n\t\t\t}));\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyRegions: {\n\t\tlayerClass: 'y-regions',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(r =>\n\t\t\t\tyRegion(r.startPos, r.endPos, this.constants.width,\n\t\t\t\t\tr.label, {labelPos: r.options.labelPos})\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.endPos);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\t\t\tlet newStarts = newData.map(d => d.startPos);\n\t\t\tlet newOptions = newData.map(d => d.options);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.endPos);\n\t\t\tlet oldStarts = this.oldData.map(d => d.startPos);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tstartPos: oldStarts[i],\n\t\t\t\t\tendPos: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i],\n\t\t\t\t\toptions: newOptions[i]\n\t\t\t\t};\n\t\t\t}));\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((rectGroup, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateRegion(\n\t\t\t\t\trectGroup, newStarts[i], newPos[i], oldPos[i]\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\theatDomain: {\n\t\tlayerClass: function() { return 'heat-domain domain-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet {index, colWidth, rowHeight, squareSize, radius, xTranslate} = this.constants;\n\t\t\tlet monthNameHeight = -12;\n\t\t\tlet x = xTranslate, y = 0;\n\n\t\t\tthis.serializedSubDomains = [];\n\n\t\t\tdata.cols.map((week, weekNo) => {\n\t\t\t\tif(weekNo === 1) {\n\t\t\t\t\tthis.labels.push(\n\t\t\t\t\t\tmakeText('domain-name', x, monthNameHeight, getMonthName(index, true).toUpperCase(),\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfontSize: 9\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tweek.map((day, i) => {\n\t\t\t\t\tif(day.fill) {\n\t\t\t\t\t\tlet data = {\n\t\t\t\t\t\t\t'data-date': day.yyyyMmDd,\n\t\t\t\t\t\t\t'data-value': day.dataValue,\n\t\t\t\t\t\t\t'data-day': i\n\t\t\t\t\t\t};\n\t\t\t\t\t\tlet square = heatSquare('day', x, y, squareSize, radius, day.fill, data);\n\t\t\t\t\t\tthis.serializedSubDomains.push(square);\n\t\t\t\t\t}\n\t\t\t\t\ty += rowHeight;\n\t\t\t\t});\n\t\t\t\ty = 0;\n\t\t\t\tx += colWidth;\n\t\t\t});\n\n\t\t\treturn this.serializedSubDomains;\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tif(newData) return [];\n\t\t}\n\t},\n\n\tbarGraph: {\n\t\tlayerClass: function() { return 'dataset-units dataset-bars dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\tthis.unitType = 'bar';\n\t\t\tthis.units = data.yPositions.map((y, j) => {\n\t\t\t\treturn datasetBar(\n\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\ty,\n\t\t\t\t\tdata.barWidth,\n\t\t\t\t\tc.color,\n\t\t\t\t\tdata.labels[j],\n\t\t\t\t\tj,\n\t\t\t\t\tdata.offsets[j],\n\t\t\t\t\t{\n\t\t\t\t\t\tzeroLine: data.zeroLine,\n\t\t\t\t\t\tbarsWidth: data.barsWidth,\n\t\t\t\t\t\tminHeight: c.minHeight\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t\t\treturn this.units;\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\tlet newXPos = newData.xPositions;\n\t\t\tlet newYPos = newData.yPositions;\n\t\t\tlet newOffsets = newData.offsets;\n\t\t\tlet newLabels = newData.labels;\n\n\t\t\tlet oldXPos = this.oldData.xPositions;\n\t\t\tlet oldYPos = this.oldData.yPositions;\n\t\t\tlet oldOffsets = this.oldData.offsets;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n\t\t\t[oldOffsets, newOffsets] = equilizeNoOfElements(oldOffsets, newOffsets);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\txPositions: oldXPos,\n\t\t\t\tyPositions: oldYPos,\n\t\t\t\toffsets: oldOffsets,\n\t\t\t\tlabels: newLabels,\n\n\t\t\t\tzeroLine: this.oldData.zeroLine,\n\t\t\t\tbarsWidth: this.oldData.barsWidth,\n\t\t\t\tbarWidth: this.oldData.barWidth,\n\t\t\t});\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((bar, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateBar(\n\t\t\t\t\tbar, newXPos[i], newYPos[i], newData.barWidth, newOffsets[i],\n\t\t\t\t\t{zeroLine: newData.zeroLine}\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\tlineGraph: {\n\t\tlayerClass: function() { return 'dataset-units dataset-line dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\tthis.unitType = 'dot';\n\t\t\tthis.paths = {};\n\t\t\tif(!c.hideLine) {\n\t\t\t\tthis.paths = getPaths(\n\t\t\t\t\tdata.xPositions,\n\t\t\t\t\tdata.yPositions,\n\t\t\t\t\tc.color,\n\t\t\t\t\t{\n\t\t\t\t\t\theatline: c.heatline,\n\t\t\t\t\t\tregionFill: c.regionFill,\n\t\t\t\t\t\tspline: c.spline\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tsvgDefs: c.svgDefs,\n\t\t\t\t\t\tzeroLine: data.zeroLine\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.units = [];\n\t\t\tif(!c.hideDots) {\n\t\t\t\tthis.units = data.yPositions.map((y, j) => {\n\t\t\t\t\treturn datasetDot(\n\t\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\t\ty,\n\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\tc.color,\n\t\t\t\t\t\t(c.valuesOverPoints ? data.values[j] : ''),\n\t\t\t\t\t\tj\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn Object.values(this.paths).concat(this.units);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\tlet newXPos = newData.xPositions;\n\t\t\tlet newYPos = newData.yPositions;\n\t\t\tlet newValues = newData.values;\n\n\t\t\tlet oldXPos = this.oldData.xPositions;\n\t\t\tlet oldYPos = this.oldData.yPositions;\n\t\t\tlet oldValues = this.oldData.values;\n\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n\t\t\t[oldValues, newValues] = equilizeNoOfElements(oldValues, newValues);\n\n\t\t\tthis.render({\n\t\t\t\txPositions: oldXPos,\n\t\t\t\tyPositions: oldYPos,\n\t\t\t\tvalues: newValues,\n\n\t\t\t\tzeroLine: this.oldData.zeroLine,\n\t\t\t\tradius: this.oldData.radius,\n\t\t\t});\n\n\t\t\tlet animateElements = [];\n\n\t\t\tif(Object.keys(this.paths).length) {\n\t\t\t\tanimateElements = animateElements.concat(animatePath(\n\t\t\t\t\tthis.paths, newXPos, newYPos, newData.zeroLine, this.constants.spline));\n\t\t\t}\n\n\t\t\tif(this.units.length) {\n\t\t\t\tthis.units.map((dot, i) => {\n\t\t\t\t\tanimateElements = animateElements.concat(animateDot(\n\t\t\t\t\t\tdot, newXPos[i], newYPos[i]));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn animateElements;\n\t\t}\n\t}\n};\n\nfunction getComponent(name, constants, getData) {\n\tlet keys = Object.keys(componentConfigs).filter(k => name.includes(k));\n\tlet config = componentConfigs[keys[0]];\n\tObject.assign(config, {\n\t\tconstants: constants,\n\t\tgetData: getData\n\t});\n\treturn new ChartComponent(config);\n}\n\nclass PercentageChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'percentage';\n\t\tthis.setup();\n\t}\n\n\tsetMeasures(options) {\n\t\tlet m = this.measures;\n\t\tthis.barOptions = options.barOptions || {};\n\n\t\tlet b = this.barOptions;\n\t\tb.height = b.height || PERCENTAGE_BAR_DEFAULT_HEIGHT;\n\t\tb.depth = b.depth || PERCENTAGE_BAR_DEFAULT_DEPTH;\n\n\t\tm.paddings.right = 30;\n\t\tm.legendHeight = 60;\n\t\tm.baseHeight = (b.height + b.depth * 0.5) * 8;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'percentageBars',\n\t\t\t\t{\n\t\t\t\t\tbarHeight: this.barOptions.height,\n\t\t\t\t\tbarDepth: this.barOptions.depth,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: s.xPositions,\n\t\t\t\t\t\twidths: s.widths,\n\t\t\t\t\t\tcolors: this.colors\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\n\t\ts.xPositions = [];\n\t\ts.widths = [];\n\n\t\tlet xPos = 0;\n\t\ts.sliceTotals.map((value) => {\n\t\t\tlet width = this.width * value / s.grandTotal;\n\t\t\ts.widths.push(width);\n\t\t\ts.xPositions.push(xPos);\n\t\t\txPos += width;\n\t\t});\n\t}\n\n\tmakeDataByIndex() { }\n\n\tbindTooltip() {\n\t\tlet s = this.state;\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tlet bars = this.components.get('percentageBars').store;\n\t\t\tlet bar = e.target;\n\t\t\tif(bars.includes(bar)) {\n\n\t\t\t\tlet i = bars.indexOf(bar);\n\t\t\t\tlet gOff = getOffset(this.container), pOff = getOffset(bar);\n\n\t\t\t\tlet x = pOff.left - gOff.left + parseInt(bar.getAttribute('width'))/2;\n\t\t\t\tlet y = pOff.top - gOff.top;\n\t\t\t\tlet title = (this.formattedLabels && this.formattedLabels.length>0\n\t\t\t\t\t? this.formattedLabels[i] : this.state.labels[i]) + ': ';\n\t\t\t\tlet fraction = s.sliceTotals[i]/s.grandTotal;\n\n\t\t\t\tthis.tip.setValues(x, y, {name: title, value: (fraction*100).toFixed(1) + \"%\"});\n\t\t\t\tthis.tip.showTip();\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass PieChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'pie';\n\t\tthis.initTimeout = 0;\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\t\tthis.mouseMove = this.mouseMove.bind(this);\n\t\tthis.mouseLeave = this.mouseLeave.bind(this);\n\n\t\tthis.hoverRadio = args.hoverRadio || 0.1;\n\t\tthis.config.startAngle = args.startAngle || 0;\n\n\t\tthis.clockWise = args.clockWise || false;\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\t\tthis.radius = (this.height > this.width ? this.center.x : this.center.y);\n\n\t\tconst { radius, clockWise } = this;\n\n\t\tconst prevSlicesProperties = s.slicesProperties || [];\n\t\ts.sliceStrings = [];\n\t\ts.slicesProperties = [];\n\t\tlet curAngle = 180 - this.config.startAngle;\n\t\ts.sliceTotals.map((total, i) => {\n\t\t\tconst startAngle = curAngle;\n\t\t\tconst originDiffAngle = (total / s.grandTotal) * FULL_ANGLE;\n\t\t\tconst largeArc = originDiffAngle > 180 ? 1: 0;\n\t\t\tconst diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\n\t\t\tconst endAngle = curAngle = curAngle + diffAngle;\n\t\t\tconst startPosition = getPositionByAngle(startAngle, radius);\n\t\t\tconst endPosition = getPositionByAngle(endAngle, radius);\n\n\t\t\tconst prevProperty = this.init && prevSlicesProperties[i];\n\n\t\t\tlet curStart,curEnd;\n\t\t\tif(this.init) {\n\t\t\t\tcurStart = prevProperty ? prevProperty.startPosition : startPosition;\n\t\t\t\tcurEnd = prevProperty ? prevProperty.endPosition : startPosition;\n\t\t\t} else {\n\t\t\t\tcurStart = startPosition;\n\t\t\t\tcurEnd = endPosition;\n\t\t\t}\n\t\t\tconst curPath =\n\t\t\t\toriginDiffAngle === 360\n\t\t\t\t\t? makeCircleStr(curStart, curEnd, this.center, this.radius, clockWise, largeArc)\n\t\t\t\t\t: makeArcPathStr(curStart, curEnd, this.center, this.radius, clockWise, largeArc);\n\n\t\t\ts.sliceStrings.push(curPath);\n\t\t\ts.slicesProperties.push({\n\t\t\t\tstartPosition,\n\t\t\t\tendPosition,\n\t\t\t\tvalue: total,\n\t\t\t\ttotal: s.grandTotal,\n\t\t\t\tstartAngle,\n\t\t\t\tendAngle,\n\t\t\t\tangle: diffAngle\n\t\t\t});\n\n\t\t});\n\t\tthis.init = 0;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'pieSlices',\n\t\t\t\t{ },\n\t\t\t\tfunction() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tsliceStrings: s.sliceStrings,\n\t\t\t\t\t\tcolors: this.colors\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalTranslateByAngle(property){\n\t\tconst{radius,hoverRadio} = this;\n\t\tconst position = getPositionByAngle(property.startAngle+(property.angle / 2),radius);\n\t\treturn `translate3d(${(position.x) * hoverRadio}px,${(position.y) * hoverRadio}px,0)`;\n\t}\n\n\thoverSlice(path,i,flag,e){\n\t\tif(!path) return;\n\t\tconst color = this.colors[i];\n\t\tif(flag) {\n\t\t\ttransform(path, this.calTranslateByAngle(this.state.slicesProperties[i]));\n\t\t\tpath.style.fill = lightenDarkenColor(color, 50);\n\t\t\tlet g_off = getOffset(this.svg);\n\t\t\tlet x = e.pageX - g_off.left + 10;\n\t\t\tlet y = e.pageY - g_off.top - 10;\n\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t\t? this.formatted_labels[i] : this.state.labels[i]) + ': ';\n\t\t\tlet percent = (this.state.sliceTotals[i] * 100 / this.state.grandTotal).toFixed(1);\n\t\t\tthis.tip.setValues(x, y, {name: title, value: percent + \"%\"});\n\t\t\tthis.tip.showTip();\n\t\t} else {\n\t\t\ttransform(path,'translate3d(0,0,0)');\n\t\t\tthis.tip.hideTip();\n\t\t\tpath.style.fill = color;\n\t\t}\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', this.mouseMove);\n\t\tthis.container.addEventListener('mouseleave', this.mouseLeave);\n\t}\n\n\tmouseMove(e){\n\t\tconst target = e.target;\n\t\tlet slices = this.components.get('pieSlices').store;\n\t\tlet prevIndex = this.curActiveSliceIndex;\n\t\tlet prevAcitve = this.curActiveSlice;\n\t\tif(slices.includes(target)) {\n\t\t\tlet i = slices.indexOf(target);\n\t\t\tthis.hoverSlice(prevAcitve, prevIndex,false);\n\t\t\tthis.curActiveSlice = target;\n\t\t\tthis.curActiveSliceIndex = i;\n\t\t\tthis.hoverSlice(target, i, true, e);\n\t\t} else {\n\t\t\tthis.mouseLeave();\n\t\t}\n\t}\n\n\tmouseLeave(){\n\t\tthis.hoverSlice(this.curActiveSlice,this.curActiveSliceIndex,false);\n\t}\n}\n\nfunction normalize(x) {\n\t// Calculates mantissa and exponent of a number\n\t// Returns normalized number and exponent\n\t// https://stackoverflow.com/q/9383593/6495043\n\n\tif(x===0) {\n\t\treturn [0, 0];\n\t}\n\tif(isNaN(x)) {\n\t\treturn {mantissa: -6755399441055744, exponent: 972};\n\t}\n\tvar sig = x > 0 ? 1 : -1;\n\tif(!isFinite(x)) {\n\t\treturn {mantissa: sig * 4503599627370496, exponent: 972};\n\t}\n\n\tx = Math.abs(x);\n\tvar exp = Math.floor(Math.log10(x));\n\tvar man = x/Math.pow(10, exp);\n\n\treturn [sig * man, exp];\n}\n\nfunction getChartRangeIntervals(max, min=0) {\n\tlet upperBound = Math.ceil(max);\n\tlet lowerBound = Math.floor(min);\n\tlet range = upperBound - lowerBound;\n\n\tlet noOfParts = range;\n\tlet partSize = 1;\n\n\t// To avoid too many partitions\n\tif(range > 5) {\n\t\tif(range % 2 !== 0) {\n\t\t\tupperBound++;\n\t\t\t// Recalc range\n\t\t\trange = upperBound - lowerBound;\n\t\t}\n\t\tnoOfParts = range/2;\n\t\tpartSize = 2;\n\t}\n\n\t// Special case: 1 and 2\n\tif(range <= 2) {\n\t\tnoOfParts = 4;\n\t\tpartSize = range/noOfParts;\n\t}\n\n\t// Special case: 0\n\tif(range === 0) {\n\t\tnoOfParts = 5;\n\t\tpartSize = 1;\n\t}\n\n\tlet intervals = [];\n\tfor(var i = 0; i <= noOfParts; i++){\n\t\tintervals.push(lowerBound + partSize * i);\n\t}\n\treturn intervals;\n}\n\nfunction getChartIntervals(maxValue, minValue=0) {\n\tlet [normalMaxValue, exponent] = normalize(maxValue);\n\tlet normalMinValue = minValue ? minValue/Math.pow(10, exponent): 0;\n\n\t// Allow only 7 significant digits\n\tnormalMaxValue = normalMaxValue.toFixed(6);\n\n\tlet intervals = getChartRangeIntervals(normalMaxValue, normalMinValue);\n\tintervals = intervals.map(value => value * Math.pow(10, exponent));\n\treturn intervals;\n}\n\nfunction calcChartIntervals(values, withMinimum=false) {\n\t//*** Where the magic happens ***\n\n\t// Calculates best-fit y intervals from given values\n\t// and returns the interval array\n\n\tlet maxValue = Math.max(...values);\n\tlet minValue = Math.min(...values);\n\n\t// Exponent to be used for pretty print\n\tlet exponent = 0, intervals = []; // eslint-disable-line no-unused-vars\n\n\tfunction getPositiveFirstIntervals(maxValue, absMinValue) {\n\t\tlet intervals = getChartIntervals(maxValue);\n\n\t\tlet intervalSize = intervals[1] - intervals[0];\n\n\t\t// Then unshift the negative values\n\t\tlet value = 0;\n\t\tfor(var i = 1; value < absMinValue; i++) {\n\t\t\tvalue += intervalSize;\n\t\t\tintervals.unshift((-1) * value);\n\t\t}\n\t\treturn intervals;\n\t}\n\n\t// CASE I: Both non-negative\n\n\tif(maxValue >= 0 && minValue >= 0) {\n\t\texponent = normalize(maxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(maxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(maxValue, minValue);\n\t\t}\n\t}\n\n\t// CASE II: Only minValue negative\n\n\telse if(maxValue > 0 && minValue < 0) {\n\t\t// `withMinimum` irrelevant in this case,\n\t\t// We'll be handling both sides of zero separately\n\t\t// (both starting from zero)\n\t\t// Because ceil() and floor() behave differently\n\t\t// in those two regions\n\n\t\tlet absMinValue = Math.abs(minValue);\n\n\t\tif(maxValue >= absMinValue) {\n\t\t\texponent = normalize(maxValue)[1];\n\t\t\tintervals = getPositiveFirstIntervals(maxValue, absMinValue);\n\t\t} else {\n\t\t\t// Mirror: maxValue => absMinValue, then change sign\n\t\t\texponent = normalize(absMinValue)[1];\n\t\t\tlet posIntervals = getPositiveFirstIntervals(absMinValue, maxValue);\n\t\t\tintervals = posIntervals.reverse().map(d => d * (-1));\n\t\t}\n\n\t}\n\n\t// CASE III: Both non-positive\n\n\telse if(maxValue <= 0 && minValue <= 0) {\n\t\t// Mirrored Case I:\n\t\t// Work with positives, then reverse the sign and array\n\n\t\tlet pseudoMaxValue = Math.abs(minValue);\n\t\tlet pseudoMinValue = Math.abs(maxValue);\n\n\t\texponent = normalize(pseudoMaxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue, pseudoMinValue);\n\t\t}\n\n\t\tintervals = intervals.reverse().map(d => d * (-1));\n\t}\n\n\treturn intervals;\n}\n\nfunction getZeroIndex(yPts) {\n\tlet zeroIndex;\n\tlet interval = getIntervalSize(yPts);\n\tif(yPts.indexOf(0) >= 0) {\n\t\t// the range has a given zero\n\t\t// zero-line on the chart\n\t\tzeroIndex = yPts.indexOf(0);\n\t} else if(yPts[0] > 0) {\n\t\t// Minimum value is positive\n\t\t// zero-line is off the chart: below\n\t\tlet min = yPts[0];\n\t\tzeroIndex = (-1) * min / interval;\n\t} else {\n\t\t// Maximum value is negative\n\t\t// zero-line is off the chart: above\n\t\tlet max = yPts[yPts.length - 1];\n\t\tzeroIndex = (-1) * max / interval + (yPts.length - 1);\n\t}\n\treturn zeroIndex;\n}\n\n\n\nfunction getIntervalSize(orderedArray) {\n\treturn orderedArray[1] - orderedArray[0];\n}\n\nfunction getValueRange(orderedArray) {\n\treturn orderedArray[orderedArray.length-1] - orderedArray[0];\n}\n\nfunction scale(val, yAxis) {\n\treturn floatTwo(yAxis.zeroLine - val * yAxis.scaleMultiplier);\n}\n\n\n\n\n\nfunction getClosestInArray(goal, arr, index = false) {\n\tlet closest = arr.reduce(function(prev, curr) {\n\t\treturn (Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev);\n\t}, []);\n\n\treturn index ? arr.indexOf(closest) : closest;\n}\n\nfunction calcDistribution(values, distributionSize) {\n\t// Assume non-negative values,\n\t// implying distribution minimum at zero\n\n\tlet dataMaxValue = Math.max(...values);\n\n\tlet distributionStep = 1 / (distributionSize - 1);\n\tlet distribution = [];\n\n\tfor(var i = 0; i < distributionSize; i++) {\n\t\tlet checkpoint = dataMaxValue * (distributionStep * i);\n\t\tdistribution.push(checkpoint);\n\t}\n\n\treturn distribution;\n}\n\nfunction getMaxCheckpoint(value, distribution) {\n\treturn distribution.filter(d => d < value).length;\n}\n\nconst COL_WIDTH = HEATMAP_SQUARE_SIZE + HEATMAP_GUTTER_SIZE;\nconst ROW_HEIGHT = COL_WIDTH;\n// const DAY_INCR = 1;\n\nclass Heatmap extends BaseChart {\n\tconstructor(parent, options) {\n\t\tsuper(parent, options);\n\t\tthis.type = 'heatmap';\n\n\t\tthis.countLabel = options.countLabel || '';\n\n\t\tlet validStarts = ['Sunday', 'Monday'];\n\t\tlet startSubDomain = validStarts.includes(options.startSubDomain)\n\t\t\t? options.startSubDomain : 'Sunday';\n\t\tthis.startSubDomainIndex = validStarts.indexOf(startSubDomain);\n\n\t\tthis.setup();\n\t}\n\n\tsetMeasures(options) {\n\t\tlet m = this.measures;\n\t\tthis.discreteDomains = options.discreteDomains === 0 ? 0 : 1;\n\n\t\tm.paddings.top = ROW_HEIGHT * 3;\n\t\tm.paddings.bottom = 0;\n\t\tm.legendHeight = ROW_HEIGHT * 2;\n\t\tm.baseHeight = ROW_HEIGHT * NO_OF_DAYS_IN_WEEK\n\t\t\t+ getExtraHeight(m);\n\n\t\tlet d = this.data;\n\t\tlet spacing = this.discreteDomains ? NO_OF_YEAR_MONTHS : 0;\n\t\tthis.independentWidth = (getWeeksBetween(d.start, d.end)\n\t\t\t+ spacing) * COL_WIDTH + getExtraWidth(m);\n\t}\n\n\tupdateWidth() {\n\t\tlet spacing = this.discreteDomains ? NO_OF_YEAR_MONTHS : 0;\n\t\tlet noOfWeeks = this.state.noOfWeeks ? this.state.noOfWeeks : 52;\n\t\tthis.baseWidth = (noOfWeeks + spacing) * COL_WIDTH\n\t\t\t+ getExtraWidth(this.measures);\n\t}\n\n\tprepareData(data=this.data) {\n\t\tif(data.start && data.end && data.start > data.end) {\n\t\t\tthrow new Error('Start date cannot be greater than end date.');\n\t\t}\n\n\t\tif(!data.start) {\n\t\t\tdata.start = new Date();\n\t\t\tdata.start.setFullYear( data.start.getFullYear() - 1 );\n\t\t}\n\t\tif(!data.end) { data.end = new Date(); }\n\t\tdata.dataPoints = data.dataPoints || {};\n\n\t\tif(parseInt(Object.keys(data.dataPoints)[0]) > 100000) {\n\t\t\tlet points = {};\n\t\t\tObject.keys(data.dataPoints).forEach(timestampSec$$1 => {\n\t\t\t\tlet date = new Date(timestampSec$$1 * NO_OF_MILLIS);\n\t\t\t\tpoints[getYyyyMmDd(date)] = data.dataPoints[timestampSec$$1];\n\t\t\t});\n\t\t\tdata.dataPoints = points;\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tcalc() {\n\t\tlet s = this.state;\n\n\t\ts.start = clone(this.data.start);\n\t\ts.end = clone(this.data.end);\n\n\t\ts.firstWeekStart = clone(s.start);\n\t\ts.noOfWeeks = getWeeksBetween(s.start, s.end);\n\t\ts.distribution = calcDistribution(\n\t\t\tObject.values(this.data.dataPoints), HEATMAP_DISTRIBUTION_SIZE);\n\n\t\ts.domainConfigs = this.getDomains();\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\t\tlet lessCol = this.discreteDomains ? 0 : 1;\n\n\t\tlet componentConfigs = s.domainConfigs.map((config, i) => [\n\t\t\t'heatDomain',\n\t\t\t{\n\t\t\t\tindex: config.index,\n\t\t\t\tcolWidth: COL_WIDTH,\n\t\t\t\trowHeight: ROW_HEIGHT,\n\t\t\t\tsquareSize: HEATMAP_SQUARE_SIZE,\n\t\t\t\tradius: this.rawChartArgs.radius || 0,\n\t\t\t\txTranslate: s.domainConfigs\n\t\t\t\t\t.filter((config, j) => j < i)\n\t\t\t\t\t.map(config => config.cols.length - lessCol)\n\t\t\t\t\t.reduce((a, b) => a + b, 0)\n\t\t\t\t\t* COL_WIDTH\n\t\t\t},\n\t\t\tfunction() {\n\t\t\t\treturn s.domainConfigs[i];\n\t\t\t}.bind(this)\n\n\t\t]);\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map((args, i) => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0] + '-' + i, component];\n\t\t\t})\n\t\t);\n\n\t\tlet y = 0;\n\t\tDAY_NAMES_SHORT.forEach((dayName, i) => {\n\t\t\tif([1, 3, 5].includes(i)) {\n\t\t\t\tlet dayText = makeText('subdomain-name', -COL_WIDTH/2, y, dayName,\n\t\t\t\t\t{\n\t\t\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE,\n\t\t\t\t\t\tdy: 8,\n\t\t\t\t\t\ttextAnchor: 'end'\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tthis.drawArea.appendChild(dayText);\n\t\t\t}\n\t\t\ty += ROW_HEIGHT;\n\t\t});\n\t}\n\n\tupdate(data) {\n\t\tif(!data) {\n\t\t\tconsole.error('No data to update.');\n\t\t}\n\n\t\tthis.data = this.prepareData(data);\n\t\tthis.draw();\n\t\tthis.bindTooltip();\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tthis.components.forEach(comp => {\n\t\t\t\tlet daySquares = comp.store;\n\t\t\t\tlet daySquare = e.target;\n\t\t\t\tif(daySquares.includes(daySquare)) {\n\n\t\t\t\t\tlet count = daySquare.getAttribute('data-value');\n\t\t\t\t\tlet dateParts = daySquare.getAttribute('data-date').split('-');\n\n\t\t\t\t\tlet month = getMonthName(parseInt(dateParts[1])-1, true);\n\n\t\t\t\t\tlet gOff = this.container.getBoundingClientRect(), pOff = daySquare.getBoundingClientRect();\n\n\t\t\t\t\tlet width = parseInt(e.target.getAttribute('width'));\n\t\t\t\t\tlet x = pOff.left - gOff.left + width/2;\n\t\t\t\t\tlet y = pOff.top - gOff.top;\n\t\t\t\t\tlet value = count + ' ' + this.countLabel;\n\t\t\t\t\tlet name = ' on ' + month + ' ' + dateParts[0] + ', ' + dateParts[2];\n\n\t\t\t\t\tthis.tip.setValues(x, y, {name: name, value: value, valueFirst: 1}, []);\n\t\t\t\t\tthis.tip.showTip();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\trenderLegend() {\n\t\tthis.legendArea.textContent = '';\n\t\tlet x = 0;\n\t\tlet y = ROW_HEIGHT;\n\t\tlet radius = this.rawChartArgs.radius || 0;\n\n\t\tlet lessText = makeText('subdomain-name', x, y, 'Less',\n\t\t\t{\n\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE + 1,\n\t\t\t\tdy: 9\n\t\t\t}\n\t\t);\n\t\tx = (COL_WIDTH * 2) + COL_WIDTH/2;\n\t\tthis.legendArea.appendChild(lessText);\n\n\t\tthis.colors.slice(0, HEATMAP_DISTRIBUTION_SIZE).map((color, i) => {\n\t\t\tconst square = heatSquare('heatmap-legend-unit', x + (COL_WIDTH + 3) * i,\n\t\t\t\ty, HEATMAP_SQUARE_SIZE, radius, color);\n\t\t\tthis.legendArea.appendChild(square);\n\t\t});\n\n\t\tlet moreTextX = x + HEATMAP_DISTRIBUTION_SIZE * (COL_WIDTH + 3) + COL_WIDTH/4;\n\t\tlet moreText = makeText('subdomain-name', moreTextX, y, 'More',\n\t\t\t{\n\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE + 1,\n\t\t\t\tdy: 9\n\t\t\t}\n\t\t);\n\t\tthis.legendArea.appendChild(moreText);\n\t}\n\n\tgetDomains() {\n\t\tlet s = this.state;\n\t\tconst [startMonth, startYear] = [s.start.getMonth(), s.start.getFullYear()];\n\t\tconst [endMonth, endYear] = [s.end.getMonth(), s.end.getFullYear()];\n\n\t\tconst noOfMonths = (endMonth - startMonth + 1) + (endYear - startYear) * 12;\n\n\t\tlet domainConfigs = [];\n\n\t\tlet startOfMonth = clone(s.start);\n\t\tfor(var i = 0; i < noOfMonths; i++) {\n\t\t\tlet endDate = s.end;\n\t\t\tif(!areInSameMonth(startOfMonth, s.end)) {\n\t\t\t\tlet [month, year] = [startOfMonth.getMonth(), startOfMonth.getFullYear()];\n\t\t\t\tendDate = getLastDateInMonth(month, year);\n\t\t\t}\n\t\t\tdomainConfigs.push(this.getDomainConfig(startOfMonth, endDate));\n\n\t\t\taddDays(endDate, 1);\n\t\t\tstartOfMonth = endDate;\n\t\t}\n\n\t\treturn domainConfigs;\n\t}\n\n\tgetDomainConfig(startDate, endDate='') {\n\t\tlet [month, year] = [startDate.getMonth(), startDate.getFullYear()];\n\t\tlet startOfWeek = setDayToSunday(startDate); // TODO: Monday as well\n\t\tendDate = clone(endDate) || getLastDateInMonth(month, year);\n\n\t\tlet domainConfig = {\n\t\t\tindex: month,\n\t\t\tcols: []\n\t\t};\n\n\t\taddDays(endDate, 1);\n\t\tlet noOfMonthWeeks = getWeeksBetween(startOfWeek, endDate);\n\n\t\tlet cols = [], col;\n\t\tfor(var i = 0; i < noOfMonthWeeks; i++) {\n\t\t\tcol = this.getCol(startOfWeek, month);\n\t\t\tcols.push(col);\n\n\t\t\tstartOfWeek = new Date(col[NO_OF_DAYS_IN_WEEK - 1].yyyyMmDd);\n\t\t\taddDays(startOfWeek, 1);\n\t\t}\n\n\t\tif(col[NO_OF_DAYS_IN_WEEK - 1].dataValue !== undefined) {\n\t\t\taddDays(startOfWeek, 1);\n\t\t\tcols.push(this.getCol(startOfWeek, month, true));\n\t\t}\n\n\t\tdomainConfig.cols = cols;\n\n\t\treturn domainConfig;\n\t}\n\n\tgetCol(startDate, month, empty = false) {\n\t\tlet s = this.state;\n\n\t\t// startDate is the start of week\n\t\tlet currentDate = clone(startDate);\n\t\tlet col = [];\n\n\t\tfor(var i = 0; i < NO_OF_DAYS_IN_WEEK; i++, addDays(currentDate, 1)) {\n\t\t\tlet config = {};\n\n\t\t\t// Non-generic adjustment for entire heatmap, needs state\n\t\t\tlet currentDateWithinData = currentDate >= s.start && currentDate <= s.end;\n\n\t\t\tif(empty || currentDate.getMonth() !== month || !currentDateWithinData) {\n\t\t\t\tconfig.yyyyMmDd = getYyyyMmDd(currentDate);\n\t\t\t} else {\n\t\t\t\tconfig = this.getSubDomainConfig(currentDate);\n\t\t\t}\n\t\t\tcol.push(config);\n\t\t}\n\n\t\treturn col;\n\t}\n\n\tgetSubDomainConfig(date) {\n\t\tlet yyyyMmDd = getYyyyMmDd(date);\n\t\tlet dataValue = this.data.dataPoints[yyyyMmDd];\n\t\tlet config = {\n\t\t\tyyyyMmDd: yyyyMmDd,\n\t\t\tdataValue: dataValue || 0,\n\t\t\tfill: this.colors[getMaxCheckpoint(dataValue, this.state.distribution)]\n\t\t};\n\t\treturn config;\n\t}\n}\n\nfunction dataPrep(data, type) {\n\tdata.labels = data.labels || [];\n\n\tlet datasetLength = data.labels.length;\n\n\t// Datasets\n\tlet datasets = data.datasets;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\tif(!datasets) {\n\t\t// default\n\t\tdatasets = [{\n\t\t\tvalues: zeroArray\n\t\t}];\n\t}\n\n\tdatasets.map(d=> {\n\t\t// Set values\n\t\tif(!d.values) {\n\t\t\td.values = zeroArray;\n\t\t} else {\n\t\t\t// Check for non values\n\t\t\tlet vals = d.values;\n\t\t\tvals = vals.map(val => (!isNaN(val) ? val : 0));\n\n\t\t\t// Trim or extend\n\t\t\tif(vals.length > datasetLength) {\n\t\t\t\tvals = vals.slice(0, datasetLength);\n\t\t\t} else {\n\t\t\t\tvals = fillArray(vals, datasetLength - vals.length, 0);\n\t\t\t}\n\t\t\td.values = vals;\n\t\t}\n\n\t\t// Set type\n\t\tif(!d.chartType ) {\n\t\t\tif(!AXIS_DATASET_CHART_TYPES.includes(type)) type === DEFAULT_AXIS_CHART_TYPE;\n\t\t\td.chartType = type;\n\t\t}\n\n\t});\n\n\t// Markers\n\n\t// Regions\n\t// data.yRegions = data.yRegions || [];\n\tif(data.yRegions) {\n\t\tdata.yRegions.map(d => {\n\t\t\tif(d.end < d.start) {\n\t\t\t\t[d.start, d.end] = [d.end, d.start];\n\t\t\t}\n\t\t});\n\t}\n\n\treturn data;\n}\n\nfunction zeroDataPrep(realData) {\n\tlet datasetLength = realData.labels.length;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\n\tlet zeroData = {\n\t\tlabels: realData.labels.slice(0, -1),\n\t\tdatasets: realData.datasets.map(d => {\n\t\t\treturn {\n\t\t\t\tname: '',\n\t\t\t\tvalues: zeroArray.slice(0, -1),\n\t\t\t\tchartType: d.chartType\n\t\t\t};\n\t\t}),\n\t};\n\n\tif(realData.yMarkers) {\n\t\tzeroData.yMarkers = [\n\t\t\t{\n\t\t\t\tvalue: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t];\n\t}\n\n\tif(realData.yRegions) {\n\t\tzeroData.yRegions = [\n\t\t\t{\n\t\t\t\tstart: 0,\n\t\t\t\tend: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t];\n\t}\n\n\treturn zeroData;\n}\n\nfunction getShortenedLabels(chartWidth, labels=[], isSeries=true) {\n\tlet allowedSpace = chartWidth / labels.length;\n\tif(allowedSpace <= 0) allowedSpace = 1;\n\tlet allowedLetters = allowedSpace / DEFAULT_CHAR_WIDTH;\n\n\tlet seriesMultiple;\n\tif(isSeries) {\n\t\t// Find the maximum label length for spacing calculations\n\t\tlet maxLabelLength = Math.max(...labels.map(label => label.length));\n\t\tseriesMultiple = Math.ceil(maxLabelLength/allowedLetters);\n\t}\n\n\tlet calcLabels = labels.map((label, i) => {\n\t\tlabel += \"\";\n\t\tif(label.length > allowedLetters) {\n\n\t\t\tif(!isSeries) {\n\t\t\t\tif(allowedLetters-3 > 0) {\n\t\t\t\t\tlabel = label.slice(0, allowedLetters-3) + \" ...\";\n\t\t\t\t} else {\n\t\t\t\t\tlabel = label.slice(0, allowedLetters) + '..';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif(i % seriesMultiple !== 0) {\n\t\t\t\t\tlabel = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn label;\n\t});\n\n\treturn calcLabels;\n}\n\nclass AxisChart extends BaseChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\n\t\tthis.barOptions = args.barOptions || {};\n\t\tthis.lineOptions = args.lineOptions || {};\n\n\t\tthis.type = args.type || 'line';\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tsetMeasures() {\n\t\tif(this.data.datasets.length <= 1) {\n\t\t\tthis.config.showLegend = 0;\n\t\t\tthis.measures.paddings.bottom = 30;\n\t\t}\n\t}\n\n\tconfigure(options) {\n\t\tsuper.configure(options);\n\n\t\toptions.axisOptions = options.axisOptions || {};\n\t\toptions.tooltipOptions = options.tooltipOptions || {};\n\n\t\tthis.config.xAxisMode = options.axisOptions.xAxisMode || 'span';\n\t\tthis.config.yAxisMode = options.axisOptions.yAxisMode || 'span';\n\t\tthis.config.xIsSeries = options.axisOptions.xIsSeries || 0;\n\t\tthis.config.shortenYAxisNumbers = options.axisOptions.shortenYAxisNumbers || 0;\n\n\t\tthis.config.formatTooltipX = options.tooltipOptions.formatTooltipX;\n\t\tthis.config.formatTooltipY = options.tooltipOptions.formatTooltipY;\n\n\t\tthis.config.valuesOverPoints = options.valuesOverPoints;\n\t}\n\n\tprepareData(data=this.data) {\n\t\treturn dataPrep(data, this.type);\n\t}\n\n\tprepareFirstData(data=this.data) {\n\t\treturn zeroDataPrep(data);\n\t}\n\n\tcalc(onlyWidthChange = false) {\n\t\tthis.calcXPositions();\n\t\tif(!onlyWidthChange) {\n\t\t\tthis.calcYAxisParameters(this.getAllYValues(), this.type === 'line');\n\t\t}\n\t\tthis.makeDataByIndex();\n\t}\n\n\tcalcXPositions() {\n\t\tlet s = this.state;\n\t\tlet labels = this.data.labels;\n\t\ts.datasetLength = labels.length;\n\n\t\ts.unitWidth = this.width/(s.datasetLength);\n\t\t// Default, as per bar, and mixed. Only line will be a special case\n\t\ts.xOffset = s.unitWidth/2;\n\n\t\t// // For a pure Line Chart\n\t\t// s.unitWidth = this.width/(s.datasetLength - 1);\n\t\t// s.xOffset = 0;\n\n\t\ts.xAxis = {\n\t\t\tlabels: labels,\n\t\t\tpositions: labels.map((d, i) =>\n\t\t\t\tfloatTwo(s.xOffset + i * s.unitWidth)\n\t\t\t)\n\t\t};\n\t}\n\n\tcalcYAxisParameters(dataValues, withMinimum = 'false') {\n\t\tconst yPts = calcChartIntervals(dataValues, withMinimum);\n\t\tconst scaleMultiplier = this.height / getValueRange(yPts);\n\t\tconst intervalHeight = getIntervalSize(yPts) * scaleMultiplier;\n\t\tconst zeroLine = this.height - (getZeroIndex(yPts) * intervalHeight);\n\n\t\tthis.state.yAxis = {\n\t\t\tlabels: yPts,\n\t\t\tpositions: yPts.map(d => zeroLine - d * scaleMultiplier),\n\t\t\tscaleMultiplier: scaleMultiplier,\n\t\t\tzeroLine: zeroLine,\n\t\t};\n\n\t\t// Dependent if above changes\n\t\tthis.calcDatasetPoints();\n\t\tthis.calcYExtremes();\n\t\tthis.calcYRegions();\n\t}\n\n\tcalcDatasetPoints() {\n\t\tlet s = this.state;\n\t\tlet scaleAll = values => values.map(val => scale(val, s.yAxis));\n\n\t\ts.datasets = this.data.datasets.map((d, i) => {\n\t\t\tlet values = d.values;\n\t\t\tlet cumulativeYs = d.cumulativeYs || [];\n\t\t\treturn {\n\t\t\t\tname: d.name && d.name.replace(/<|>|&/g, (char) => char == '&' ? '&amp;' : char == '<' ? '&lt;' : '&gt;'),\n\t\t\t\tindex: i,\n\t\t\t\tchartType: d.chartType,\n\n\t\t\t\tvalues: values,\n\t\t\t\tyPositions: scaleAll(values),\n\n\t\t\t\tcumulativeYs: cumulativeYs,\n\t\t\t\tcumulativeYPos: scaleAll(cumulativeYs),\n\t\t\t};\n\t\t});\n\t}\n\n\tcalcYExtremes() {\n\t\tlet s = this.state;\n\t\tif(this.barOptions.stacked) {\n\t\t\ts.yExtremes = s.datasets[s.datasets.length - 1].cumulativeYPos;\n\t\t\treturn;\n\t\t}\n\t\ts.yExtremes = new Array(s.datasetLength).fill(9999);\n\t\ts.datasets.map(d => {\n\t\t\td.yPositions.map((pos, j) => {\n\t\t\t\tif(pos < s.yExtremes[j]) {\n\t\t\t\t\ts.yExtremes[j] = pos;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tcalcYRegions() {\n\t\tlet s = this.state;\n\t\tif(this.data.yMarkers) {\n\t\t\tthis.state.yMarkers = this.data.yMarkers.map(d => {\n\t\t\t\td.position = scale(d.value, s.yAxis);\n\t\t\t\tif(!d.options) d.options = {};\n\t\t\t\t// if(!d.label.includes(':')) {\n\t\t\t\t// \td.label += ': ' + d.value;\n\t\t\t\t// }\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t\tif(this.data.yRegions) {\n\t\t\tthis.state.yRegions = this.data.yRegions.map(d => {\n\t\t\t\td.startPos = scale(d.start, s.yAxis);\n\t\t\t\td.endPos = scale(d.end, s.yAxis);\n\t\t\t\tif(!d.options) d.options = {};\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t}\n\n\tgetAllYValues() {\n\t\tlet key = 'values';\n\n\t\tif(this.barOptions.stacked) {\n\t\t\tkey = 'cumulativeYs';\n\t\t\tlet cumulative = new Array(this.state.datasetLength).fill(0);\n\t\t\tthis.data.datasets.map((d, i) => {\n\t\t\t\tlet values = this.data.datasets[i].values;\n\t\t\t\td[key] = cumulative = cumulative.map((c, i) => c + values[i]);\n\t\t\t});\n\t\t}\n\n\t\tlet allValueLists = this.data.datasets.map(d => d[key]);\n\t\tif(this.data.yMarkers) {\n\t\t\tallValueLists.push(this.data.yMarkers.map(d => d.value));\n\t\t}\n\t\tif(this.data.yRegions) {\n\t\t\tthis.data.yRegions.map(d => {\n\t\t\t\tallValueLists.push([d.end, d.start]);\n\t\t\t});\n\t\t}\n\n\t\treturn [].concat(...allValueLists);\n\t}\n\n\tsetupComponents() {\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'yAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.config.yAxisMode,\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tshortenNumbers: this.config.shortenYAxisNumbers\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yAxis;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'xAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.config.xAxisMode,\n\t\t\t\t\theight: this.height,\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\ts.xAxis.calcLabels = getShortenedLabels(this.width,\n\t\t\t\t\t\ts.xAxis.labels, this.config.xIsSeries);\n\n\t\t\t\t\treturn s.xAxis;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'yRegions',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yRegions;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\t\t];\n\n\t\tlet barDatasets = this.state.datasets.filter(d => d.chartType === 'bar');\n\t\tlet lineDatasets = this.state.datasets.filter(d => d.chartType === 'line');\n\n\t\tlet barsConfigs = barDatasets.map(d => {\n\t\t\tlet index = d.index;\n\t\t\treturn [\n\t\t\t\t'barGraph' + '-' + d.index,\n\t\t\t\t{\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcolor: this.colors[index],\n\t\t\t\t\tstacked: this.barOptions.stacked,\n\n\t\t\t\t\t// same for all datasets\n\t\t\t\t\tvaluesOverPoints: this.config.valuesOverPoints,\n\t\t\t\t\tminHeight: this.height * MIN_BAR_PERCENT_HEIGHT,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\tlet d = s.datasets[index];\n\t\t\t\t\tlet stacked = this.barOptions.stacked;\n\n\t\t\t\t\tlet spaceRatio = this.barOptions.spaceRatio || BAR_CHART_SPACE_RATIO;\n\t\t\t\t\tlet barsWidth = s.unitWidth * (1 - spaceRatio);\n\t\t\t\t\tlet barWidth = barsWidth/(stacked ? 1 : barDatasets.length);\n\n\t\t\t\t\tlet xPositions = s.xAxis.positions.map(x => x - barsWidth/2);\n\t\t\t\t\tif(!stacked) {\n\t\t\t\t\t\txPositions = xPositions.map(p => p + barWidth * index);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet labels = new Array(s.datasetLength).fill('');\n\t\t\t\t\tif(this.config.valuesOverPoints) {\n\t\t\t\t\t\tif(stacked && d.index === s.datasets.length - 1) {\n\t\t\t\t\t\t\tlabels = d.cumulativeYs;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlabels = d.values;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet offsets = new Array(s.datasetLength).fill(0);\n\t\t\t\t\tif(stacked) {\n\t\t\t\t\t\toffsets = d.yPositions.map((y, j) => y - d.cumulativeYPos[j]);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: xPositions,\n\t\t\t\t\t\tyPositions: d.yPositions,\n\t\t\t\t\t\toffsets: offsets,\n\t\t\t\t\t\t// values: d.values,\n\t\t\t\t\t\tlabels: labels,\n\n\t\t\t\t\t\tzeroLine: s.yAxis.zeroLine,\n\t\t\t\t\t\tbarsWidth: barsWidth,\n\t\t\t\t\t\tbarWidth: barWidth,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t];\n\t\t});\n\n\t\tlet lineConfigs = lineDatasets.map(d => {\n\t\t\tlet index = d.index;\n\t\t\treturn [\n\t\t\t\t'lineGraph' + '-' + d.index,\n\t\t\t\t{\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcolor: this.colors[index],\n\t\t\t\t\tsvgDefs: this.svgDefs,\n\t\t\t\t\theatline: this.lineOptions.heatline,\n\t\t\t\t\tregionFill: this.lineOptions.regionFill,\n\t\t\t\t\tspline: this.lineOptions.spline,\n\t\t\t\t\thideDots: this.lineOptions.hideDots,\n\t\t\t\t\thideLine: this.lineOptions.hideLine,\n\n\t\t\t\t\t// same for all datasets\n\t\t\t\t\tvaluesOverPoints: this.config.valuesOverPoints,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\tlet d = s.datasets[index];\n\t\t\t\t\tlet minLine = s.yAxis.positions[0] < s.yAxis.zeroLine\n\t\t\t\t\t\t? s.yAxis.positions[0] : s.yAxis.zeroLine;\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: s.xAxis.positions,\n\t\t\t\t\t\tyPositions: d.yPositions,\n\n\t\t\t\t\t\tvalues: d.values,\n\n\t\t\t\t\t\tzeroLine: minLine,\n\t\t\t\t\t\tradius: this.lineOptions.dotSize || LINE_CHART_DOT_SIZE,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t];\n\t\t});\n\n\t\tlet markerConfigs = [\n\t\t\t[\n\t\t\t\t'yMarkers',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yMarkers;\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tcomponentConfigs = componentConfigs.concat(barsConfigs, lineConfigs, markerConfigs);\n\n\t\tlet optionals = ['yMarkers', 'yRegions'];\n\t\tthis.dataUnitComponents = [];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.filter(args => !optionals.includes(args[0]) || this.state[args[0]])\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\tif(args[0].includes('lineGraph') || args[0].includes('barGraph')) {\n\t\t\t\t\tthis.dataUnitComponents.push(component);\n\t\t\t\t}\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tmakeDataByIndex() {\n\t\tthis.dataByIndex = {};\n\n\t\tlet s = this.state;\n\t\tlet formatX = this.config.formatTooltipX;\n\t\tlet formatY = this.config.formatTooltipY;\n\t\tlet titles = s.xAxis.labels;\n\n\t\ttitles.map((label, index) => {\n\t\t\tlet values = this.state.datasets.map((set, i) => {\n\t\t\t\tlet value = set.values[index];\n\t\t\t\treturn {\n\t\t\t\t\ttitle: set.name,\n\t\t\t\t\tvalue: value,\n\t\t\t\t\tyPos: set.yPositions[index],\n\t\t\t\t\tcolor: this.colors[i],\n\t\t\t\t\tformatted: formatY ? formatY(value) : value,\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tthis.dataByIndex[index] = {\n\t\t\t\tlabel: label,\n\t\t\t\tformattedLabel: formatX ? formatX(label) : label,\n\t\t\t\txPos: s.xAxis.positions[index],\n\t\t\t\tvalues: values,\n\t\t\t\tyExtreme: s.yExtremes[index],\n\t\t\t};\n\t\t});\n\t}\n\n\tbindTooltip() {\n\t\t// NOTE: could be in tooltip itself, as it is a given functionality for its parent\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tlet m = this.measures;\n\t\t\tlet o = getOffset(this.container);\n\t\t\tlet relX = e.pageX - o.left - getLeftOffset(m);\n\t\t\tlet relY = e.pageY - o.top;\n\n\t\t\tif(relY < this.height + getTopOffset(m)\n\t\t\t\t&& relY >  getTopOffset(m)) {\n\t\t\t\tthis.mapTooltipXPosition(relX);\n\t\t\t} else {\n\t\t\t\tthis.tip.hideTip();\n\t\t\t}\n\t\t});\n\t}\n\n\tmapTooltipXPosition(relX) {\n\t\tlet s = this.state;\n\t\tif(!s.yExtremes) return;\n\n\t\tlet index = getClosestInArray(relX, s.xAxis.positions, true);\n\t\tif (index >= 0) {\n\t\t\tlet dbi = this.dataByIndex[index];\n\n\t\t\tthis.tip.setValues(\n\t\t\t\tdbi.xPos + this.tip.offset.x,\n\t\t\t\tdbi.yExtreme + this.tip.offset.y,\n\t\t\t\t{name: dbi.formattedLabel, value: ''},\n\t\t\t\tdbi.values,\n\t\t\t\tindex\n\t\t\t);\n\n\t\t\tthis.tip.showTip();\n\t\t}\n\t}\n\n\trenderLegend() {\n\t\tlet s = this.data;\n\t\tif(s.datasets.length > 1) {\n\t\t\tthis.legendArea.textContent = '';\n\t\t\ts.datasets.map((d, i) => {\n\t\t\t\tlet barWidth = AXIS_LEGEND_BAR_SIZE;\n\t\t\t\t// let rightEndPoint = this.baseWidth - this.measures.margins.left - this.measures.margins.right;\n\t\t\t\t// let multiplier = s.datasets.length - i;\n\t\t\t\tlet rect = legendBar(\n\t\t\t\t\t// rightEndPoint - multiplier * barWidth,\t// To right align\n\t\t\t\t\tbarWidth * i,\n\t\t\t\t\t'0',\n\t\t\t\t\tbarWidth,\n\t\t\t\t\tthis.colors[i],\n\t\t\t\t\td.name,\n\t\t\t\t\tthis.config.truncateLegends);\n\t\t\t\tthis.legendArea.appendChild(rect);\n\t\t\t});\n\t\t}\n\t}\n\n\n\n\t// Overlay\n\tmakeOverlay() {\n\t\tif(this.init) {\n\t\t\tthis.init = 0;\n\t\t\treturn;\n\t\t}\n\t\tif(this.overlayGuides) {\n\t\t\tthis.overlayGuides.forEach(g => {\n\t\t\t\tlet o = g.overlay;\n\t\t\t\to.parentNode.removeChild(o);\n\t\t\t});\n\t\t}\n\n\t\tthis.overlayGuides = this.dataUnitComponents.map(c => {\n\t\t\treturn {\n\t\t\t\ttype: c.unitType,\n\t\t\t\toverlay: undefined,\n\t\t\t\tunits: c.units,\n\t\t\t};\n\t\t});\n\n\t\tif(this.state.currentIndex === undefined) {\n\t\t\tthis.state.currentIndex = this.state.datasetLength - 1;\n\t\t}\n\n\t\t// Render overlays\n\t\tthis.overlayGuides.map(d => {\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\n\n\t\t\td.overlay = makeOverlay[d.type](currentUnit);\n\t\t\tthis.drawArea.appendChild(d.overlay);\n\t\t});\n\t}\n\n\tupdateOverlayGuides() {\n\t\tif(this.overlayGuides) {\n\t\t\tthis.overlayGuides.forEach(g => {\n\t\t\t\tlet o = g.overlay;\n\t\t\t\to.parentNode.removeChild(o);\n\t\t\t});\n\t\t}\n\t}\n\n\tbindOverlay() {\n\t\tthis.parent.addEventListener('data-select', () => {\n\t\t\tthis.updateOverlay();\n\t\t});\n\t}\n\n\tbindUnits() {\n\t\tthis.dataUnitComponents.map(c => {\n\t\t\tc.units.map(unit => {\n\t\t\t\tunit.addEventListener('click', () => {\n\t\t\t\t\tlet index = unit.getAttribute('data-point-index');\n\t\t\t\t\tthis.setCurrentDataPoint(index);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\t// Note: Doesn't work as tooltip is absolutely positioned\n\t\tthis.tip.container.addEventListener('click', () => {\n\t\t\tlet index = this.tip.container.getAttribute('data-point-index');\n\t\t\tthis.setCurrentDataPoint(index);\n\t\t});\n\t}\n\n\tupdateOverlay() {\n\t\tthis.overlayGuides.map(d => {\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\n\t\t\tupdateOverlay[d.type](currentUnit, d.overlay);\n\t\t});\n\t}\n\n\tonLeftArrow() {\n\t\tthis.setCurrentDataPoint(this.state.currentIndex - 1);\n\t}\n\n\tonRightArrow() {\n\t\tthis.setCurrentDataPoint(this.state.currentIndex + 1);\n\t}\n\n\tgetDataPoint(index=this.state.currentIndex) {\n\t\tlet s = this.state;\n\t\tlet data_point = {\n\t\t\tindex: index,\n\t\t\tlabel: s.xAxis.labels[index],\n\t\t\tvalues: s.datasets.map(d => d.values[index])\n\t\t};\n\t\treturn data_point;\n\t}\n\n\tsetCurrentDataPoint(index) {\n\t\tlet s = this.state;\n\t\tindex = parseInt(index);\n\t\tif(index < 0) index = 0;\n\t\tif(index >= s.xAxis.labels.length) index = s.xAxis.labels.length - 1;\n\t\tif(index === s.currentIndex) return;\n\t\ts.currentIndex = index;\n\t\tfire(this.parent, \"data-select\", this.getDataPoint());\n\t}\n\n\n\n\t// API\n\taddDataPoint(label, datasetValues, index=this.state.datasetLength) {\n\t\tsuper.addDataPoint(label, datasetValues, index);\n\t\tthis.data.labels.splice(index, 0, label);\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\td.values.splice(index, 0, datasetValues[i]);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\tremoveDataPoint(index = this.state.datasetLength-1) {\n\t\tif (this.data.labels.length <= 1) {\n\t\t\treturn;\n\t\t}\n\t\tsuper.removeDataPoint(index);\n\t\tthis.data.labels.splice(index, 1);\n\t\tthis.data.datasets.map(d => {\n\t\t\td.values.splice(index, 1);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\tupdateDataset(datasetValues, index=0) {\n\t\tthis.data.datasets[index].values = datasetValues;\n\t\tthis.update(this.data);\n\t}\n\t// addDataset(dataset, index) {}\n\t// removeDataset(index = 0) {}\n\n\tupdateDatasets(datasets) {\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\tif(datasets[i]) {\n\t\t\t\td.values = datasets[i];\n\t\t\t}\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\t// updateDataPoint(dataPoint, index = 0) {}\n\t// addDataPoint(dataPoint, index = 0) {}\n\t// removeDataPoint(index = 0) {}\n}\n\nclass DonutChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'donut';\n\t\tthis.initTimeout = 0;\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\t\tthis.mouseMove = this.mouseMove.bind(this);\n\t\tthis.mouseLeave = this.mouseLeave.bind(this);\n\n\t\tthis.hoverRadio = args.hoverRadio || 0.1;\n\t\tthis.config.startAngle = args.startAngle || 0;\n\n\t\tthis.clockWise = args.clockWise || false;\n\t\tthis.strokeWidth = args.strokeWidth || 30;\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\t\tthis.radius =\n\t\t\tthis.height > this.width\n\t\t\t\t? this.center.x - this.strokeWidth / 2\n\t\t\t\t: this.center.y - this.strokeWidth / 2;\n\n\t\tconst { radius, clockWise } = this;\n\n\t\tconst prevSlicesProperties = s.slicesProperties || [];\n\t\ts.sliceStrings = [];\n\t\ts.slicesProperties = [];\n\t\tlet curAngle = 180 - this.config.startAngle;\n\n\t\ts.sliceTotals.map((total, i) => {\n\t\t\tconst startAngle = curAngle;\n\t\t\tconst originDiffAngle = (total / s.grandTotal) * FULL_ANGLE;\n\t\t\tconst largeArc = originDiffAngle > 180 ? 1: 0;\n\t\t\tconst diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\n\t\t\tconst endAngle = curAngle = curAngle + diffAngle;\n\t\t\tconst startPosition = getPositionByAngle(startAngle, radius);\n\t\t\tconst endPosition = getPositionByAngle(endAngle, radius);\n\n\t\t\tconst prevProperty = this.init && prevSlicesProperties[i];\n\n\t\t\tlet curStart,curEnd;\n\t\t\tif(this.init) {\n\t\t\t\tcurStart = prevProperty ? prevProperty.startPosition : startPosition;\n\t\t\t\tcurEnd = prevProperty ? prevProperty.endPosition : startPosition;\n\t\t\t} else {\n\t\t\t\tcurStart = startPosition;\n\t\t\t\tcurEnd = endPosition;\n\t\t\t}\n\t\t\tconst curPath =\n\t\t\t\toriginDiffAngle === 360\n\t\t\t\t\t? makeStrokeCircleStr(curStart, curEnd, this.center, this.radius, this.clockWise, largeArc)\n\t\t\t\t\t: makeArcStrokePathStr(curStart, curEnd, this.center, this.radius, this.clockWise, largeArc);\n\n\t\t\ts.sliceStrings.push(curPath);\n\t\t\ts.slicesProperties.push({\n\t\t\t\tstartPosition,\n\t\t\t\tendPosition,\n\t\t\t\tvalue: total,\n\t\t\t\ttotal: s.grandTotal,\n\t\t\t\tstartAngle,\n\t\t\t\tendAngle,\n\t\t\t\tangle: diffAngle\n\t\t\t});\n\n\t\t});\n\t\tthis.init = 0;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'donutSlices',\n\t\t\t\t{ },\n\t\t\t\tfunction() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tsliceStrings: s.sliceStrings,\n\t\t\t\t\t\tcolors: this.colors,\n\t\t\t\t\t\tstrokeWidth: this.strokeWidth,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalTranslateByAngle(property){\n\t\tconst{ radius, hoverRadio } = this;\n\t\tconst position = getPositionByAngle(property.startAngle+(property.angle / 2),radius);\n\t\treturn `translate3d(${(position.x) * hoverRadio}px,${(position.y) * hoverRadio}px,0)`;\n\t}\n\n\thoverSlice(path,i,flag,e){\n\t\tif(!path) return;\n\t\tconst color = this.colors[i];\n\t\tif(flag) {\n\t\t\ttransform(path, this.calTranslateByAngle(this.state.slicesProperties[i]));\n\t\t\tpath.style.stroke = lightenDarkenColor(color, 50);\n\t\t\tlet g_off = getOffset(this.svg);\n\t\t\tlet x = e.pageX - g_off.left + 10;\n\t\t\tlet y = e.pageY - g_off.top - 10;\n\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t\t? this.formatted_labels[i] : this.state.labels[i]) + ': ';\n\t\t\tlet percent = (this.state.sliceTotals[i] * 100 / this.state.grandTotal).toFixed(1);\n\t\t\tthis.tip.setValues(x, y, {name: title, value: percent + \"%\"});\n\t\t\tthis.tip.showTip();\n\t\t} else {\n\t\t\ttransform(path,'translate3d(0,0,0)');\n\t\t\tthis.tip.hideTip();\n\t\t\tpath.style.stroke = color;\n\t\t}\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', this.mouseMove);\n\t\tthis.container.addEventListener('mouseleave', this.mouseLeave);\n\t}\n\n\tmouseMove(e){\n\t\tconst target = e.target;\n\t\tlet slices = this.components.get('donutSlices').store;\n\t\tlet prevIndex = this.curActiveSliceIndex;\n\t\tlet prevAcitve = this.curActiveSlice;\n\t\tif(slices.includes(target)) {\n\t\t\tlet i = slices.indexOf(target);\n\t\t\tthis.hoverSlice(prevAcitve, prevIndex,false);\n\t\t\tthis.curActiveSlice = target;\n\t\t\tthis.curActiveSliceIndex = i;\n\t\t\tthis.hoverSlice(target, i, true, e);\n\t\t} else {\n\t\t\tthis.mouseLeave();\n\t\t}\n\t}\n\n\tmouseLeave(){\n\t\tthis.hoverSlice(this.curActiveSlice,this.curActiveSliceIndex,false);\n\t}\n}\n\n// import MultiAxisChart from './charts/MultiAxisChart';\nconst chartTypes = {\n\tbar: AxisChart,\n\tline: AxisChart,\n\t// multiaxis: MultiAxisChart,\n\tpercentage: PercentageChart,\n\theatmap: Heatmap,\n\tpie: PieChart,\n\tdonut: DonutChart,\n};\n\nfunction getChartByType(chartType = 'line', parent, options) {\n\tif (chartType === 'axis-mixed') {\n\t\toptions.type = 'line';\n\t\treturn new AxisChart(parent, options);\n\t}\n\n\tif (!chartTypes[chartType]) {\n\t\tconsole.error(\"Undefined chart type: \" + chartType);\n\t\treturn;\n\t}\n\n\treturn new chartTypes[chartType](parent, options);\n}\n\nclass Chart {\n\tconstructor(parent, options) {\n\t\treturn getChartByType(options.type, parent, options);\n\t}\n}\n\nexport { Chart, PercentageChart, PieChart, Heatmap, AxisChart };\n","/*\n * This file is part of Flarum.\n *\n * (c) Toby Zerner <toby.zerner@gmail.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport DashboardWidget from 'flarum/components/DashboardWidget';\nimport humanTime from 'flarum/utils/humanTime';\n\nimport {Chart} from 'frappe-charts/dist/frappe-charts.esm.js';\n\nexport default class StatisticsWidget extends DashboardWidget {\n\n  className() {\n    return 'WebsocketStatisticsWidget';\n  }\n\n  content() {\n\n    return (\n      <div className=\"WebsocketStatisticsWidget-table\">\n\n        <div className=\"WebsocketStatisticsWidget-chart\" oncreate={this.drawChart.bind(this)}\n             onupdate={this.drawChart.bind(this)}/>\n      </div>\n    );\n  }\n\n  drawChart(vnode) {\n\n    const stats = app.data.websocket_statistics;\n\n    if (!this.chart) {\n      this.chart = new Chart(vnode.dom, {\n        data: {\n          labels: stats.peak_connections.x.map(date => {\n            return humanTime(new Date(date + ' UTC'));\n          }),\n          datasets: [\n            {\n              name: \"Null\",\n              values: stats.null,\n              chartType: 'bar'\n            },\n            {\n              name: \"Peak Connections\",\n              values: stats.peak_connections.y,\n              chartType: 'bar'\n            },\n            {\n              name: \"Messages Count\",\n              values: stats.websocket_messages_count.y,\n              chartType: 'bar'\n            },\n          ]\n        },\n        title: app.translator.trans('kyrne-websocket.admin.chart.title'),\n        type: 'bar',\n        height: 300,\n        colors: [app.forum.attribute('themePrimaryColor'), app.forum.attribute('themeSecondaryColor')]\n      });\n    }\n  }\n}\n","import app from 'flarum/app';\nimport { extend } from 'flarum/extend';\n\nimport DashboardPage from 'flarum/components/DashboardPage';\n\nimport WebsocketPage from './components/WebsocketPage';\nimport WebsocketStatsWidget from \"./components/WebsocketStatsWidget\";\n\napp.initializers.add('kyrne-websocket', app => {\n\n  app.extensionData\n    .for('kyrne-websocket')\n    .registerPage(WebsocketPage);\n\n  extend(DashboardPage.prototype, 'availableWidgets', widgets => {\n    widgets.add('statistics', <WebsocketStatsWidget/>, 20);\n  });\n});\n\n"],"sourceRoot":""}