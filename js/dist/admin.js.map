{"version":3,"sources":["webpack://@kyrne/websocket/webpack/bootstrap","webpack://@kyrne/websocket/external \"flarum.core.compat['app']\"","webpack://@kyrne/websocket/external \"flarum.core.compat['utils/Stream']\"","webpack://@kyrne/websocket/external \"flarum.core.compat['extend']\"","webpack://@kyrne/websocket/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@kyrne/websocket/external \"flarum.core.compat['utils/stringToColor']\"","webpack://@kyrne/websocket/external \"flarum.core.compat['helpers/avatar']\"","webpack://@kyrne/websocket/external \"flarum.core.compat['extensions/afrux-forum-widgets-core/common/components/Widget']\"","webpack://@kyrne/websocket/external \"flarum.core.compat['components/Switch']\"","webpack://@kyrne/websocket/external \"flarum.core.compat['extensions/afrux-forum-widgets-core/common/extend/Widgets']\"","webpack://@kyrne/websocket/external \"flarum.core.compat['components/LoadingIndicator']\"","webpack://@kyrne/websocket/external \"flarum.core.compat['components/Tooltip']\"","webpack://@kyrne/websocket/external \"flarum.core.compat['components/Link']\"","webpack://@kyrne/websocket/./src/common/Widget/WebsocketOnlineUsersWidget.js","webpack://@kyrne/websocket/./src/common/Widget/RegisterWidget.js","webpack://@kyrne/websocket/external \"flarum.core.compat['components/DashboardPage']\"","webpack://@kyrne/websocket/external \"flarum.core.compat['components/ExtensionPage']\"","webpack://@kyrne/websocket/external \"flarum.core.compat['components/DashboardWidget']\"","webpack://@kyrne/websocket/external \"flarum.core.compat['utils/humanTime']\"","webpack://@kyrne/websocket/./src/admin/components/WebsocketPage.js","webpack://@kyrne/websocket/./node_modules/frappe-charts/dist/frappe-charts.esm.js","webpack://@kyrne/websocket/./src/admin/components/WebsocketStatsWidget.js","webpack://@kyrne/websocket/./src/admin/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_inheritsLoose","subClass","superClass","constructor","__proto__","__webpack_exports__","WebsocketWidget","Widget","_Widget","WebsocketOnlineUsersWidget","apply","this","arguments","inheritsLoose","_proto","oninit","vnode","users","loading","oncreate","_this","app","pusher","then","presence","channels","existingMembers","keys","members","length","map","member","myID","includes","id","pushMember","redraw","some","user","splice","info","push","Stream","color","stringToColor","username","displayName","avatarUrl","slug","className","icon","title","translator","trans","content","LoadingIndicator_default","a","slice","Link_default","href","route","Tooltip_default","text","avatar","Widgets","add","component","isDisabled","placement","position","extend","WebsocketPage","bidi","setting","placeholder","window","location","hostname","Switch_default","state","onchange","settings","submitButton","ExtensionPage","$","expr","con","document","querySelector","getOffset","element","rect","getBoundingClientRect","top","documentElement","scrollTop","body","left","scrollLeft","tag","createElement","val","appendChild","ref","parentNode","insertBefore","prop","style","setAttribute","BASE_MEASURES","margins","bottom","right","paddings","baseHeight","titleHeight","legendHeight","titleFontSize","getTopOffset","getLeftOffset","getExtraHeight","getExtraWidth","INIT_CHART_UPDATE_TIMEOUT","CHART_POST_ANIMATE_TIMEOUT","AXIS_DATASET_CHART_TYPES","AXIS_LEGEND_BAR_SIZE","BAR_CHART_SPACE_RATIO","MIN_BAR_PERCENT_HEIGHT","LINE_CHART_DOT_SIZE","PERCENTAGE_BAR_DEFAULT_HEIGHT","PERCENTAGE_BAR_DEFAULT_DEPTH","HEATMAP_DISTRIBUTION_SIZE","HEATMAP_SQUARE_SIZE","DEFAULT_CHAR_WIDTH","TOOLTIP_POINTER_TRIANGLE_HEIGHT","DEFAULT_CHART_COLORS","DEFAULT_COLORS","bar","line","pie","percentage","heatmap","donut","ANGLE_RATIO","Math","PI","FULL_ANGLE","SvgTip","[object Object]","parent","colors","titleName","titleValue","listValues","titleValueFirst","x","y","setup","makeTooltip","fill","calcPosition","container","inside","innerHTML","hideTip","dataPointList","addEventListener","index","set","formatted","li","styles","border-top","width","offsetWidth","offsetHeight","maxLeft","pointer","pointerOffset","valueFirst","refresh","opacity","floatTwo","parseFloat","toFixed","fillArray","array","count","start","fillerArray","Array","abs","concat","getStringWidth","string","charWidth","getPositionByAngle","angle","radius","sin","cos","isValidNumber","candidate","nonNegative","Number","isNaN","undefined","isFinite","getBarHeightAndYAttr","yTop","zeroLine","height","equilizeNoOfElements","array1","array2","extraCount","truncateString","txt","len","getSplineCurvePointsStr","xList","yList","points","controlPoint","current","previous","next","reverse","pointA","pointB","lengthX","lengthY","sqrt","pow","atan2","command","reduce","acc","point","pointStr","cps","cpe","PRESET_COLOR_MAP","light-blue","blue","violet","red","orange","yellow","green","light-green","purple","magenta","black","grey","light-grey","dark-grey","limitColor","lightenDarkenColor","amt","col","getColor","usePound","num","parseInt","b","toString","test","exec","ch","AXIS_TICK_LENGTH","LABEL_MARGIN","LABEL_MAX_CHARS","FONT_SIZE","BASE_LINE_COLOR","FONT_FILL","$$1","createSVG","createElementNS","setGradientStop","gradElem","offset","stop-opacity","makeSVGGroup","transform","args","makePath","pathStr","stroke","strokeWidth","stroke-width","makeGradient","svgDefElem","lighter","gradientId","gradientDef","x1","x2","y1","y2","renderVerticalGradient","opacities","heatSquare","size","data","rx","makeText","options","fontSize","dy","font-size","text-anchor","textAnchor","makeHoriLine","label","lineType","shortenNumbers","number","floor","log10","shortened","round","shortenLargeNumber","stroke-opacity","xLine","pos","makeVertLine","makeOverlay","unit","transformValue","nodeName","getAttribute","childNodes","overlay","cloneNode","dot","heat_square","updateOverlay","attributes","values","filter","attr","specified","nodeValue","UNIT_ANIM_DUR","PATH_ANIM_DUR","MARKER_LINE_ANIM_DUR","REPLACE_ALL_NEW_DUR","STD_EASING","translate","oldCoord","newCoord","duration","old","join","translateHoriLine","yLine","newY","oldY","animatePathStr","oldPath","EASING","ease","linear","easein","easeout","easeinout","webkitTransform","msTransform","mozTransform","oTransform","animateSVG","svgContainer","elements","newElements","animElements","animElement","newElement","props","dur","easingType","type","oldValues","attributeName","animateElement","currentValue","animAttr","from","to","begin","keySplines","keyTimes","calcMode","animateSVGElement","replaceChild","animSvg","CSSTEXT","BaseChart","deepClone","cloned","Date","getTime","isArray","HTMLElement","Error","rawChartArgs","realData","prepareData","prepareFirstData","validateColors","config","showTooltip","showLegend","isNavigable","animate","truncateLegends","measures","JSON","parse","stringify","setMeasures","argHeight","initTimeout","overlays","configure","validColors","forEach","isValidColor","console","warn","boundDrawFn","draw","ResizeObserver","resizeObserver","observe","disconnect","removeEventListener","makeContainer","updateWidth","independentWidth","tip","bindTooltip","onlyWidthChange","init","offsetParent","calc","makeChartArea","setupComponents","components","drawArea","render","setTimeout","update","renderLegend","setupNavigation","padding","baseWidth","getComputedStyle","paddingLeft","paddingRight","clientWidth","svg","removeChild","svgDefs","titleEL","legendArea","updateTipOffset","Map","error","elementsToAnimate","svgElement","animSvgElement","runSMILAnimation","make","updateNav","bindUnits","bindOverlay","keyActions","13","onEnterKey","37","onLeftArrow","38","onUpArrow","39","onRightArrow","40","onDownArrow","e","el","innerHeight","clientHeight","innerWidth","isElementInViewport","event","keyCode","chartSvg","clone","classList","styleEl","firstChild","prepareForExport","filename","blob","Blob","url","URL","createObjectURL","download","click","revokeObjectURL","downloadFile","AggregationChart","super","formatTooltipY","tooltipOptions","maxSlices","maxLegendPoints","sliceTotals","allTotals","labels","total","datasets","totals","sort","remaining","sumOfRemaining","grandTotal","center","textContent","legendTotals","barWidth","divisor","truncate","cx","cy","dx","group","legendDot","NO_OF_YEAR_MONTHS","NO_OF_DAYS_IN_WEEK","NO_OF_MILLIS","SEC_IN_DAY","MONTH_NAMES","DAY_NAMES_SHORT","treatAsUtc","date","result","setMinutes","getMinutes","getTimezoneOffset","getYyyyMmDd","dd","getDate","mm","getMonth","getFullYear","getWeeksBetween","startDate","endDate","weekStartDate","setDayToSunday","ceil","millisecondsPerDay","getDaysBetween","areInSameMonth","getMonthName","short","monthName","getLastDateInMonth","month","year","newDate","day","getDay","addDays","numberOfDays","setDate","ChartComponent","layerClass","layerTransform","constants","getData","makeElements","animateElements","store","layer","oldData","componentConfigs","donutSlices","sliceStrings","transition","newData","pieSlices","percentageBars","xPositions","depth","stroke-dasharray","percentageBar","widths","barHeight","barDepth","yAxis","positions","newPos","newLabels","oldPos","oldLabels","xAxis","calcLabels","newX","oldX","translateVertLine","yMarkers","labelPos","labelSvg","yMarker","newOptions","yRegions","region","yRegion","startPos","endPos","newStarts","oldStarts","rectGroup","newY1","newY2","oldY2","newHeight","animateRegion","heatDomain","colWidth","rowHeight","squareSize","xTranslate","serializedSubDomains","cols","week","weekNo","toUpperCase","data-date","yyyyMmDd","data-value","dataValue","data-day","square","barGraph","unitType","units","yPositions","j","meta","minHeight","data-point-index","datasetBar","offsets","barsWidth","newXPos","newYPos","newOffsets","oldXPos","oldYPos","oldOffsets","rectAnim","oldCoordStr","split","animateBar","lineGraph","paths","hideLine","pointsStr","spline","path","heatline","gradient_id","regionFill","gradient_id_region","getPaths","hideDots","datasetDot","valuesOverPoints","newValues","newXList","newYList","pathComponents","animPath","regStartPt","regEndPt","animRegion","animatePath","animateDot","getComponent","k","assign","normalize","mantissa","exponent","sig","exp","getChartIntervals","maxValue","minValue","normalMaxValue","normalMinValue","intervals","max","min","upperBound","lowerBound","range","noOfParts","partSize","getChartRangeIntervals","getIntervalSize","orderedArray","scale","scaleMultiplier","COL_WIDTH","ROW_HEIGHT","AxisChart","barOptions","lineOptions","axisOptions","xAxisMode","yAxisMode","xIsSeries","shortenYAxisNumbers","formatTooltipX","datasetLength","zeroArray","vals","chartType","end","dataPrep","zeroData","zeroDataPrep","calcXPositions","calcYAxisParameters","getAllYValues","makeDataByIndex","unitWidth","xOffset","dataValues","withMinimum","yPts","getPositiveFirstIntervals","absMinValue","intervalSize","unshift","pseudoMaxValue","pseudoMinValue","calcChartIntervals","intervalHeight","zeroIndex","interval","indexOf","getZeroIndex","calcDatasetPoints","calcYExtremes","calcYRegions","scaleAll","cumulativeYs","replace","char","cumulativeYPos","stacked","yExtremes","cumulative","allValueLists","chartWidth","isSeries","allowedSpace","seriesMultiple","allowedLetters","maxLabelLength","getShortenedLabels","barDatasets","lineDatasets","barsConfigs","spaceRatio","lineConfigs","minLine","dotSize","markerConfigs","optionals","dataUnitComponents","dataByIndex","formatX","formatY","yPos","formattedLabel","xPos","yExtreme","relX","pageX","relY","pageY","mapTooltipXPosition","goal","arr","closest","prev","curr","getClosestInArray","dbi","setValues","showTip","legendBar","overlayGuides","g","currentIndex","currentUnit","setCurrentDataPoint","target","properties","evt","createEvent","initEvent","dispatchEvent","fire","getDataPoint","datasetValues","addDataPoint","removeDataPoint","chartTypes","bars","gOff","pOff","formattedLabels","fraction","countLabel","validStarts","startSubDomain","startSubDomainIndex","discreteDomains","spacing","noOfWeeks","setFullYear","dataPoints","timestampSec$$1","firstWeekStart","distribution","distributionSize","dataMaxValue","distributionStep","checkpoint","calcDistribution","domainConfigs","getDomains","lessCol","dayName","dayText","comp","daySquares","daySquare","dateParts","lessText","moreText","startMonth","startYear","endMonth","endYear","noOfMonths","startOfMonth","getDomainConfig","startOfWeek","domainConfig","noOfMonthWeeks","getCol","empty","currentDate","currentDateWithinData","getSubDomainConfig","mouseMove","mouseLeave","hoverRadio","startAngle","clockWise","prevSlicesProperties","slicesProperties","curAngle","originDiffAngle","largeArc","diffAngle","endAngle","startPosition","endPosition","prevProperty","curStart","curEnd","curPath","arcStartX","arcStartY","arcEndX","midArc","arcEndY","makeCircleStr","makeArcPathStr","flag","calTranslateByAngle","g_off","formatted_labels","percent","slices","prevIndex","curActiveSliceIndex","prevAcitve","curActiveSlice","hoverSlice","makeStrokeCircleStr","makeArcStrokePathStr","Chart","getChartByType","StatisticsWidget","drawChart","onupdate","stats","websocket_statistics","chart","dom","peak_connections","humanTime","null","websocket_messages_count","forum","attribute","DashboardWidget","initializers","extensionData","for","registerPage","DashboardPage","widgets","WebsocketStatsWidget_StatisticsWidget","has","RegisterWidget"],"mappings":"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","file":"admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 28);\n","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['utils/Stream'];","module.exports = flarum.core.compat['extend'];","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","module.exports = flarum.core.compat['utils/stringToColor'];","module.exports = flarum.core.compat['helpers/avatar'];","module.exports = flarum.core.compat['extensions/afrux-forum-widgets-core/common/components/Widget'];","module.exports = flarum.core.compat['components/Switch'];","module.exports = flarum.core.compat['extensions/afrux-forum-widgets-core/common/extend/Widgets'];","module.exports = flarum.core.compat['components/LoadingIndicator'];","module.exports = flarum.core.compat['components/Tooltip'];","module.exports = flarum.core.compat['components/Link'];","import LoadingIndicator from 'flarum/components/LoadingIndicator';\nimport Tooltip from 'flarum/components/Tooltip';\nimport avatar from 'flarum/helpers/avatar';\nimport Link from 'flarum/components/Link';\nimport stringToColor from 'flarum/utils/stringToColor';\nimport Stream from 'flarum/utils/Stream';\n\nimport Widget from 'flarum/extensions/afrux-forum-widgets-core/common/components/Widget';\n\nlet WebsocketWidget = null;\n\nif (Widget) {\n  WebsocketWidget = class WebsocketOnlineUsersWidget extends Widget {\n    oninit(vnode) {\n      super.oninit(vnode);\n\n      this.users = [];\n      this.loading = true;\n    }\n\n    oncreate(vnode) {\n      super.oncreate(vnode);\n\n      app.pusher.then(object => {\n        const presence = object.channels.presence;\n\n        const existingMembers = Object.keys(presence.members.members);\n\n        if (existingMembers.length === 0) {\n\n          presence.bind(\"pusher:subscription_succeeded\", members => {\n            Object.keys(members.members).map(member => {\n              if (presence.members.myID != member && !member.includes('Guest')) {\n                members.members[member].id = member;\n                this.pushMember(members.members[member]);\n              }\n            })\n            this.loading = false;\n            m.redraw();\n          });\n        } else {\n          existingMembers.map(member => {\n            if (presence.members.myID != member && !member.includes('Guest')) {\n              presence.members.members[member].id = member;\n              this.pushMember(presence.members.members[member]);\n            }\n          })\n          this.loading = false;\n          m.redraw();\n        }\n\n        presence.bind(\"pusher:member_removed\", (member) => {\n          this.users.some((user, i) => {\n            if (user.id() == member.id) {\n              this.users.splice(i, 1);\n              m.redraw();\n              return true;\n            }\n          });\n        });\n\n        presence.bind(\"pusher:member_added\", (member) => {\n          if (presence.members.myID != member.id && typeof member.id !== 'string') {\n            member.info.id = member.id;\n            this.pushMember(member.info);\n            m.redraw();\n          }\n        });\n      });\n    }\n\n    pushMember(member) {\n      this.users.push({\n        id: Stream(member.id),\n        color: Stream('#' + stringToColor(member.username)),\n        displayName: Stream(member.username),\n        avatarUrl: Stream(member.avatarUrl),\n        slug: Stream(member.slug)\n      });\n    }\n\n    className() {\n      return 'WebsocketOnlineUsersWidget';\n    }\n\n    icon() {\n      return 'fas fa-user-friends';\n    }\n\n    title() {\n      return app.translator.trans('kyrne-websocket.forum.widget.title');\n    }\n\n    content() {\n      if (this.loading) {\n        return <LoadingIndicator/>;\n      }\n\n      const max = 15;\n      const users = this.users;\n\n      return (\n        <div className=\"WebsocketOnlineUsersWidget-users\">\n          <div className=\"WebsocketOnlineUsersWidget-users-message\">\n            {users.length === 0 ? app.translator.trans('kyrne-websocket.forum.widget.empty') : null}\n          </div>\n          <div className=\"WebsocketOnlineUsersWidget-users-list\">\n            {users.slice(0, max).map((user) => (\n              <Link href={app.route('user', {username: user.slug()})} className=\"WebsocketOnlineUsersWidget-users-item\">\n                <Tooltip text={user.displayName()}>{avatar(user)}</Tooltip>\n              </Link>\n            ))}\n            {users.length > max ? (\n              <span className=\"WebsocketOnlineUsersWidget-users-item WebsocketOnlineUsersWidget-users-item--plus\">\n              <span className=\"Avatar\">{`+${max}`}</span>\n            </span>\n            ) : null}\n          </div>\n        </div>\n      );\n    }\n  }\n} else {\n  WebsocketWidget = class WebsocketOnlineUsersWidget {};\n}\n\nexport default WebsocketWidget;\n","import Widgets from 'flarum/extensions/afrux-forum-widgets-core/common/extend/Widgets';\n\nimport WebsocketOnlineUsersWidget from './WebsocketOnlineUsersWidget';\n\nexport default function(app) {\n  (new Widgets).add({\n    key: 'WebsocketOnlineUsersWidget',\n    component: WebsocketOnlineUsersWidget,\n\n    isDisabled: false,\n\n    placement: 'end',\n    position: 1,\n  }).extend(app, 'kyrne-websocket');\n};\n","module.exports = flarum.core.compat['components/DashboardPage'];","module.exports = flarum.core.compat['components/ExtensionPage'];","module.exports = flarum.core.compat['components/DashboardWidget'];","module.exports = flarum.core.compat['utils/humanTime'];","import ExtensionPage from 'flarum/components/ExtensionPage';\nimport Switch from 'flarum/components/Switch';\n\nexport default class WebsocketPage extends ExtensionPage {\n  content() {\n    return (\n      <div className=\"ExtensionPage-settings\">\n        <div className=\"container\">\n          <div className=\"Form\">\n            <div className=\"Form-group\">\n              <label>{app.translator.trans('kyrne-websocket.admin.pusher_settings.app_id_label')}</label>\n              <div className='helpText'>{app.translator.trans('kyrne-websocket.admin.help.app_id')}</div>\n              <input className=\"FormControl\" bidi={this.setting('kyrne-websocket.app_id')}/>\n            </div>\n\n            <div className=\"Form-group\">\n\n              <label>{app.translator.trans('kyrne-websocket.admin.pusher_settings.app_key_label')}</label>\n              <div className='helpText'>{app.translator.trans('kyrne-websocket.admin.help.app_key')}</div>\n              <input className=\"FormControl\" bidi={this.setting('kyrne-websocket.app_key')}/>\n            </div>\n\n            <div className=\"Form-group\">\n              <label>{app.translator.trans('kyrne-websocket.admin.pusher_settings.app_secret_label')}</label>\n              <div className='helpText'>{app.translator.trans('kyrne-websocket.admin.help.secret')}</div>\n              <input className=\"FormControl\" bidi={this.setting('kyrne-websocket.app_secret')}/>\n            </div>\n\n            <div className=\"Form-group\">\n              <label>{app.translator.trans('kyrne-websocket.admin.pusher_settings.app_host_label')}</label>\n              <div className='helpText'>{app.translator.trans('kyrne-websocket.admin.help.host')}</div>\n              <input className=\"FormControl\" placeholder={window.location.hostname}\n                     bidi={this.setting('kyrne-websocket.app_host')}/>\n            </div>\n\n            <div className=\"Form-group\">\n              <label>{app.translator.trans('kyrne-websocket.admin.pusher_settings.app_port_label')}</label>\n              <div className='helpText'>{app.translator.trans('kyrne-websocket.admin.help.port')}</div>\n              <input className=\"FormControl\" placeholder=\"6001\" bidi={this.setting('kyrne-websocket.app_port')}/>\n            </div>\n\n            <div className=\"Form-group\">\n              <label>{app.translator.trans('kyrne-websocket.admin.pusher_settings.stats_label')}</label>\n              <div className='helpText'>{app.translator.trans('kyrne-websocket.admin.help.stats')}</div>\n              <input placeholder={7200} className=\"FormControl\" bidi={this.setting('kyrne-websocket.app_statistics-interval')}/>\n            </div>\n\n            <div className=\"Form-group\">\n              <Switch\n                state={!!this.setting('kyrne-websocket.reverse_proxy')() && this.setting('kyrne-websocket.reverse_proxy')() !== '0'}\n                onchange={this.settings['kyrne-websocket.reverse_proxy']}>\n                {app.translator.trans('kyrne-websocket.admin.pusher_settings.reverse_proxy')}\n              </Switch>\n              <div className='helpText'>{app.translator.trans('kyrne-websocket.admin.help.reverse_proxy')}</div>\n            </div>\n            <div className=\"Form-group\">\n              <label>{app.translator.trans('kyrne-websocket.admin.pusher_settings.local_cert_path')}</label>\n              <div className='helpText'>{app.translator.trans('kyrne-websocket.admin.help.cert_path')}</div>\n              <input className=\"FormControl\" placeholder=\"/etc/letsencrypt/live/your.domain/fullchain.pem\"\n                     bidi={this.setting('kyrne-websocket.local_cert')}/>\n            </div>\n\n            <div className=\"Form-group\">\n              <label>{app.translator.trans('kyrne-websocket.admin.pusher_settings.local_pk_path')}</label>\n              <div className='helpText'>{app.translator.trans('kyrne-websocket.admin.help.pk_path')}</div>\n              <input className=\"FormControl\" placeholder=\"/etc/letsencrypt/live/your.domain/privkey.pem\"\n                     bidi={this.setting('kyrne-websocket.local_pk')}/>\n            </div>\n\n            <div className=\"Form-group\">\n              <label>{app.translator.trans('kyrne-websocket.admin.pusher_settings.passphrase')}</label>\n              <div className='helpText'>{app.translator.trans('kyrne-websocket.admin.help.passphrase')}</div>\n              <input className=\"FormControl\" bidi={this.setting('kyrne-websocket.passphrase')}/>\n            </div>\n\n            <div className=\"Form-group\">\n              <Switch\n                state={!!this.setting('kyrne-websocket.cert_self_signed')() && this.setting('kyrne-websocket.cert_self_signed')() !== '0'}\n                onchange={this.settings['kyrne-websocket.cert_self_signed']}>\n                {app.translator.trans('kyrne-websocket.admin.pusher_settings.cert_self_signed')}\n              </Switch>\n              <div className='helpText'>{app.translator.trans('kyrne-websocket.admin.help.self_signed')}</div>\n            </div>\n\n            <div className=\"Form-group\">\n              <Switch\n                state={!!this.setting('kyrne-websocket.force_secure')() && this.setting('kyrne-websocket.force_secure')() !== '0'}\n                onchange={this.settings['kyrne-websocket.force_secure']}>\n                {app.translator.trans('kyrne-websocket.admin.pusher_settings.secure')}\n              </Switch>\n              <div className='helpText'>{app.translator.trans('kyrne-websocket.admin.help.secure')}</div>\n            </div>\n            <div className=\"Form-group\">\n              <Switch\n                state={!!this.setting('kyrne-websocket.auto_update')() && this.setting('kyrne-websocket.auto_update')() !== '0'}\n                onchange={this.settings['kyrne-websocket.auto_update']}>\n                {app.translator.trans('kyrne-websocket.admin.pusher_settings.auto_update')}\n              </Switch>\n              <div className='helpText'>{app.translator.trans('kyrne-websocket.admin.help.auto_update')}</div>\n            </div>\n            <div className=\"Form-group\">\n              <Switch\n                state={!!this.setting('kyrne-websocket.auth_only')() && this.setting('kyrne-websocket.auth_only')() !== '0'}\n                onchange={this.settings['kyrne-websocket.auth_only']}>\n                {app.translator.trans('kyrne-websocket.admin.pusher_settings.auth_only')}\n              </Switch>\n              <div className='helpText'>{app.translator.trans('kyrne-websocket.admin.help.auth_only')}</div>\n            </div>\n            <div className=\"Form-group\">{this.submitButton()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","function $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\n\n\n$.create = (tag, o) => {\n\tvar element = document.createElement(tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (i in element ) {\n\t\t\telement[i] = val;\n\t\t}\n\t\telse {\n\t\t\telement.setAttribute(i, val);\n\t\t}\n\t}\n\n\treturn element;\n};\n\nfunction getOffset(element) {\n\tlet rect = element.getBoundingClientRect();\n\treturn {\n\t\t// https://stackoverflow.com/a/7436602/6495043\n\t\t// rect.top varies with scroll, so we add whatever has been\n\t\t// scrolled to it to get absolute distance from actual page top\n\t\ttop: rect.top + (document.documentElement.scrollTop || document.body.scrollTop),\n\t\tleft: rect.left + (document.documentElement.scrollLeft || document.body.scrollLeft)\n\t};\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n// an element's offsetParent property will return null whenever it, or any of its parents,\n// is hidden via the display style property.\nfunction isHidden(el) {\n\treturn (el.offsetParent === null);\n}\n\nfunction isElementInViewport(el) {\n\t// Although straightforward: https://stackoverflow.com/a/7557433/6495043\n\tvar rect = el.getBoundingClientRect();\n\n\treturn (\n\t\trect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */\n\t);\n}\n\nfunction getElementContentWidth(element) {\n\tvar styles = window.getComputedStyle(element);\n\tvar padding = parseFloat(styles.paddingLeft) +\n\t\tparseFloat(styles.paddingRight);\n\n\treturn element.clientWidth - padding;\n}\n\n\n\n\n\nfunction fire(target, type, properties) {\n\tvar evt = document.createEvent(\"HTMLEvents\");\n\n\tevt.initEvent(type, true, true );\n\n\tfor (var j in properties) {\n\t\tevt[j] = properties[j];\n\t}\n\n\treturn target.dispatchEvent(evt);\n}\n\n// https://css-tricks.com/snippets/javascript/loop-queryselectorall-matches/\n\nconst BASE_MEASURES = {\n\tmargins: {\n\t\ttop: 10,\n\t\tbottom: 10,\n\t\tleft: 20,\n\t\tright: 20\n\t},\n\tpaddings: {\n\t\ttop: 20,\n\t\tbottom: 40,\n\t\tleft: 30,\n\t\tright: 10\n\t},\n\n\tbaseHeight: 240,\n\ttitleHeight: 20,\n\tlegendHeight: 30,\n\n\ttitleFontSize: 12,\n};\n\nfunction getTopOffset(m) {\n\treturn m.titleHeight + m.margins.top + m.paddings.top;\n}\n\nfunction getLeftOffset(m) {\n\treturn m.margins.left + m.paddings.left;\n}\n\nfunction getExtraHeight(m) {\n\tlet totalExtraHeight = m.margins.top + m.margins.bottom\n\t\t+ m.paddings.top + m.paddings.bottom\n\t\t+ m.titleHeight + m.legendHeight;\n\treturn totalExtraHeight;\n}\n\nfunction getExtraWidth(m) {\n\tlet totalExtraWidth = m.margins.left + m.margins.right\n\t\t+ m.paddings.left + m.paddings.right;\n\n\treturn totalExtraWidth;\n}\n\nconst INIT_CHART_UPDATE_TIMEOUT = 700;\nconst CHART_POST_ANIMATE_TIMEOUT = 400;\n\nconst DEFAULT_AXIS_CHART_TYPE = 'line';\nconst AXIS_DATASET_CHART_TYPES = ['line', 'bar'];\n\nconst AXIS_LEGEND_BAR_SIZE = 100;\n\nconst BAR_CHART_SPACE_RATIO = 0.5;\nconst MIN_BAR_PERCENT_HEIGHT = 0.00;\n\nconst LINE_CHART_DOT_SIZE = 4;\nconst DOT_OVERLAY_SIZE_INCR = 4;\n\nconst PERCENTAGE_BAR_DEFAULT_HEIGHT = 20;\nconst PERCENTAGE_BAR_DEFAULT_DEPTH = 2;\n\n// Fixed 5-color theme,\n// More colors are difficult to parse visually\nconst HEATMAP_DISTRIBUTION_SIZE = 5;\n\nconst HEATMAP_SQUARE_SIZE = 10;\nconst HEATMAP_GUTTER_SIZE = 2;\n\nconst DEFAULT_CHAR_WIDTH = 7;\n\nconst TOOLTIP_POINTER_TRIANGLE_HEIGHT = 5;\n\nconst DEFAULT_CHART_COLORS = ['light-blue', 'blue', 'violet', 'red', 'orange',\n\t'yellow', 'green', 'light-green', 'purple', 'magenta', 'light-grey', 'dark-grey'];\nconst HEATMAP_COLORS_GREEN = ['#ebedf0', '#c6e48b', '#7bc96f', '#239a3b', '#196127'];\n\n\n\nconst DEFAULT_COLORS = {\n\tbar: DEFAULT_CHART_COLORS,\n\tline: DEFAULT_CHART_COLORS,\n\tpie: DEFAULT_CHART_COLORS,\n\tpercentage: DEFAULT_CHART_COLORS,\n\theatmap: HEATMAP_COLORS_GREEN,\n\tdonut: DEFAULT_CHART_COLORS\n};\n\n// Universal constants\nconst ANGLE_RATIO = Math.PI / 180;\nconst FULL_ANGLE = 360;\n\nclass SvgTip {\n\tconstructor({\n\t\tparent = null,\n\t\tcolors = []\n\t}) {\n\t\tthis.parent = parent;\n\t\tthis.colors = colors;\n\t\tthis.titleName = '';\n\t\tthis.titleValue = '';\n\t\tthis.listValues = [];\n\t\tthis.titleValueFirst = 0;\n\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\n\t\tthis.top = 0;\n\t\tthis.left = 0;\n\n\t\tthis.setup();\n\t}\n\n\tsetup() {\n\t\tthis.makeTooltip();\n\t}\n\n\trefresh() {\n\t\tthis.fill();\n\t\tthis.calcPosition();\n\t}\n\n\tmakeTooltip() {\n\t\tthis.container = $.create('div', {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'graph-svg-tip comparison',\n\t\t\tinnerHTML: `<span class=\"title\"></span>\n\t\t\t\t<ul class=\"data-point-list\"></ul>\n\t\t\t\t<div class=\"svg-pointer\"></div>`\n\t\t});\n\t\tthis.hideTip();\n\n\t\tthis.title = this.container.querySelector('.title');\n\t\tthis.dataPointList = this.container.querySelector('.data-point-list');\n\n\t\tthis.parent.addEventListener('mouseleave', () => {\n\t\t\tthis.hideTip();\n\t\t});\n\t}\n\n\tfill() {\n\t\tlet title;\n\t\tif(this.index) {\n\t\t\tthis.container.setAttribute('data-point-index', this.index);\n\t\t}\n\t\tif(this.titleValueFirst) {\n\t\t\ttitle = `<strong>${this.titleValue}</strong>${this.titleName}`;\n\t\t} else {\n\t\t\ttitle = `${this.titleName}<strong>${this.titleValue}</strong>`;\n\t\t}\n\t\tthis.title.innerHTML = title;\n\t\tthis.dataPointList.innerHTML = '';\n\n\t\tthis.listValues.map((set, i) => {\n\t\t\tconst color = this.colors[i] || 'black';\n\t\t\tlet value = set.formatted === 0 || set.formatted ? set.formatted : set.value;\n\n\t\t\tlet li = $.create('li', {\n\t\t\t\tstyles: {\n\t\t\t\t\t'border-top': `3px solid ${color}`\n\t\t\t\t},\n\t\t\t\tinnerHTML: `<strong style=\"display: block;\">${ value === 0 || value ? value : '' }</strong>\n\t\t\t\t\t${set.title ? set.title : '' }`\n\t\t\t});\n\n\t\t\tthis.dataPointList.appendChild(li);\n\t\t});\n\t}\n\n\tcalcPosition() {\n\t\tlet width = this.container.offsetWidth;\n\n\t\tthis.top = this.y - this.container.offsetHeight\n\t\t\t- TOOLTIP_POINTER_TRIANGLE_HEIGHT;\n\t\tthis.left = this.x - width/2;\n\t\tlet maxLeft = this.parent.offsetWidth - width;\n\n\t\tlet pointer = this.container.querySelector('.svg-pointer');\n\n\t\tif(this.left < 0) {\n\t\t\tpointer.style.left = `calc(50% - ${-1 * this.left}px)`;\n\t\t\tthis.left = 0;\n\t\t} else if(this.left > maxLeft) {\n\t\t\tlet delta = this.left - maxLeft;\n\t\t\tlet pointerOffset = `calc(50% + ${delta}px)`;\n\t\t\tpointer.style.left = pointerOffset;\n\n\t\t\tthis.left = maxLeft;\n\t\t} else {\n\t\t\tpointer.style.left = `50%`;\n\t\t}\n\t}\n\n\tsetValues(x, y, title = {}, listValues = [], index = -1) {\n\t\tthis.titleName = title.name;\n\t\tthis.titleValue = title.value;\n\t\tthis.listValues = listValues;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.titleValueFirst = title.valueFirst || 0;\n\t\tthis.index = index;\n\t\tthis.refresh();\n\t}\n\n\thideTip() {\n\t\tthis.container.style.top = '0px';\n\t\tthis.container.style.left = '0px';\n\t\tthis.container.style.opacity = '0';\n\t}\n\n\tshowTip() {\n\t\tthis.container.style.top = this.top + 'px';\n\t\tthis.container.style.left = this.left + 'px';\n\t\tthis.container.style.opacity = '1';\n\t}\n}\n\n/**\n * Returns the value of a number upto 2 decimal places.\n * @param {Number} d Any number\n */\nfunction floatTwo(d) {\n\treturn parseFloat(d.toFixed(2));\n}\n\n/**\n * Returns whether or not two given arrays are equal.\n * @param {Array} arr1 First array\n * @param {Array} arr2 Second array\n */\n\n\n/**\n * Shuffles array in place. ES6 version\n * @param {Array} array An array containing the items.\n */\n\n\n/**\n * Fill an array with extra points\n * @param {Array} array Array\n * @param {Number} count number of filler elements\n * @param {Object} element element to fill with\n * @param {Boolean} start fill at start?\n */\nfunction fillArray(array, count, element, start=false) {\n\tif(!element) {\n\t\telement = start ? array[0] : array[array.length - 1];\n\t}\n\tlet fillerArray = new Array(Math.abs(count)).fill(element);\n\tarray = start ? fillerArray.concat(array) : array.concat(fillerArray);\n\treturn array;\n}\n\n/**\n * Returns pixel width of string.\n * @param {String} string\n * @param {Number} charWidth Width of single char in pixels\n */\nfunction getStringWidth(string, charWidth) {\n\treturn (string+\"\").length * charWidth;\n}\n\n\n\n// https://stackoverflow.com/a/29325222\n\n\nfunction getPositionByAngle(angle, radius) {\n\treturn {\n\t\tx: Math.sin(angle * ANGLE_RATIO) * radius,\n\t\ty: Math.cos(angle * ANGLE_RATIO) * radius,\n\t};\n}\n\n/**\n * Check if a number is valid for svg attributes\n * @param {object} candidate Candidate to test\n * @param {Boolean} nonNegative flag to treat negative number as invalid\n */\nfunction isValidNumber(candidate, nonNegative=false) {\n\tif (Number.isNaN(candidate)) return false;\n\telse if (candidate === undefined) return false;\n\telse if (!Number.isFinite(candidate)) return false;\n\telse if (nonNegative && candidate < 0) return false;\n\telse return true;\n}\n\n/**\n * Round a number to the closes precision, max max precision 4\n * @param {Number} d Any Number\n */\nfunction round(d) {\n\t// https://floating-point-gui.de/\n\t// https://www.jacklmoore.com/notes/rounding-in-javascript/\n\treturn Number(Math.round(d + 'e4') + 'e-4');\n}\n\n/**\n * Creates a deep clone of an object\n * @param {Object} candidate Any Object\n */\n function deepClone(candidate) {\n\tlet cloned, value, key;\n  \n\tif (candidate instanceof Date) {\n\t  return new Date(candidate.getTime());\n\t}\n  \n\tif (typeof candidate !== \"object\" || candidate === null) {\n\t  return candidate;\n\t}\n  \n\tcloned = Array.isArray(candidate) ? [] : {};\n  \n\tfor (key in candidate) {\n\t  value = candidate[key];\n  \n\t  cloned[key] = deepClone(value);\n\t}\n  \n\treturn cloned;\n  }\n\nfunction getBarHeightAndYAttr(yTop, zeroLine) {\n\tlet height, y;\n\tif (yTop <= zeroLine) {\n\t\theight = zeroLine - yTop;\n\t\ty = yTop;\n\t} else {\n\t\theight = yTop - zeroLine;\n\t\ty = zeroLine;\n\t}\n\n\treturn [height, y];\n}\n\nfunction equilizeNoOfElements(array1, array2,\n\textraCount = array2.length - array1.length) {\n\n\t// Doesn't work if either has zero elements.\n\tif(extraCount > 0) {\n\t\tarray1 = fillArray(array1, extraCount);\n\t} else {\n\t\tarray2 = fillArray(array2, extraCount);\n\t}\n\treturn [array1, array2];\n}\n\nfunction truncateString(txt, len) {\n\tif (!txt) {\n\t\treturn;\n\t}\n\tif (txt.length > len) {\n\t\treturn txt.slice(0, len-3) + '...';\n\t} else {\n\t\treturn txt;\n\t}\n}\n\nfunction shortenLargeNumber(label) {\n\tlet number;\n\tif (typeof label === 'number') number = label;\n\telse if (typeof label === 'string') {\n\t\tnumber = Number(label);\n\t\tif (Number.isNaN(number)) return label;\n\t}\n\n\t// Using absolute since log wont work for negative numbers\n\tlet p = Math.floor(Math.log10(Math.abs(number)));\n\tif (p <= 2) return number; // Return as is for a 3 digit number of less\n\tlet\tl = Math.floor(p / 3);\n\tlet shortened = (Math.pow(10, p - l * 3) * +(number / Math.pow(10, p)).toFixed(1));\n\n\t// Correct for floating point error upto 2 decimal places\n\treturn Math.round(shortened*100)/100 + ' ' + ['', 'K', 'M', 'B', 'T'][l];\n}\n\n// cubic bezier curve calculation (from example by François Romain)\nfunction getSplineCurvePointsStr(xList, yList) {\n\n\tlet points=[];\n\tfor(let i=0;i<xList.length;i++){\n\t\tpoints.push([xList[i], yList[i]]);\n\t}\n\n\tlet smoothing = 0.2;\n\tlet line = (pointA, pointB) => {\n\t\tlet lengthX = pointB[0] - pointA[0];\n\t\tlet lengthY = pointB[1] - pointA[1];\n\t\treturn {\n\t\t\tlength: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n\t\t\tangle: Math.atan2(lengthY, lengthX)\n\t\t};\n\t};\n    \n\tlet controlPoint = (current, previous, next, reverse) => {\n\t\tlet p = previous || current;\n\t\tlet n = next || current;\n\t\tlet o = line(p, n);\n\t\tlet angle = o.angle + (reverse ? Math.PI : 0);\n\t\tlet length = o.length * smoothing;\n\t\tlet x = current[0] + Math.cos(angle) * length;\n\t\tlet y = current[1] + Math.sin(angle) * length;\n\t\treturn [x, y];\n\t};\n    \n\tlet bezierCommand = (point, i, a) => {\n\t\tlet cps = controlPoint(a[i - 1], a[i - 2], point);\n\t\tlet cpe = controlPoint(point, a[i - 1], a[i + 1], true);\n\t\treturn `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[1]}`;\n\t};\n    \n\tlet pointStr = (points, command) => {\n\t\treturn points.reduce((acc, point, i, a) => i === 0\n\t\t\t? `${point[0]},${point[1]}`\n\t\t\t: `${acc} ${command(point, i, a)}`, '');\n\t};\n    \n\treturn pointStr(points, bezierCommand);\n}\n\nconst PRESET_COLOR_MAP = {\n\t'light-blue': '#7cd6fd',\n\t'blue': '#5e64ff',\n\t'violet': '#743ee2',\n\t'red': '#ff5858',\n\t'orange': '#ffa00a',\n\t'yellow': '#feef72',\n\t'green': '#28a745',\n\t'light-green': '#98d85b',\n\t'purple': '#b554ff',\n\t'magenta': '#ffa3ef',\n\t'black': '#36114C',\n\t'grey': '#bdd3e6',\n\t'light-grey': '#f0f4f7',\n\t'dark-grey': '#b8c2cc'\n};\n\nfunction limitColor(r){\n\tif (r > 255) return 255;\n\telse if (r < 0) return 0;\n\treturn r;\n}\n\nfunction lightenDarkenColor(color, amt) {\n\tlet col = getColor(color);\n\tlet usePound = false;\n\tif (col[0] == \"#\") {\n\t\tcol = col.slice(1);\n\t\tusePound = true;\n\t}\n\tlet num = parseInt(col,16);\n\tlet r = limitColor((num >> 16) + amt);\n\tlet b = limitColor(((num >> 8) & 0x00FF) + amt);\n\tlet g = limitColor((num & 0x0000FF) + amt);\n\treturn (usePound?\"#\":\"\") + (g | (b << 8) | (r << 16)).toString(16);\n}\n\nfunction isValidColor(string) {\n\t// https://stackoverflow.com/a/32685393\n\tlet HEX_RE = /(^\\s*)(#)((?:[A-Fa-f0-9]{3}){1,2})$/i;\n\tlet RGB_RE = /(^\\s*)(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/i;\n\treturn HEX_RE.test(string) || RGB_RE.test(string);\n}\n\nconst getColor = (color) => {\n\t// When RGB color, convert to hexadecimal (alpha value is omitted)\n\tif((/rgb[a]{0,1}\\([\\d, ]+\\)/gim).test(color)) {\n\t\treturn (/\\D+(\\d*)\\D+(\\d*)\\D+(\\d*)/gim).exec(color)\n\t\t\t.map((x, i) => (i !== 0 ? Number(x).toString(16) : '#'))\n\t\t\t.reduce((c, ch) => `${c}${ch}`);\n\t}\n\treturn PRESET_COLOR_MAP[color] || color;\n};\n\nconst AXIS_TICK_LENGTH = 6;\nconst LABEL_MARGIN = 4;\nconst LABEL_MAX_CHARS = 15;\nconst FONT_SIZE = 10;\nconst BASE_LINE_COLOR = '#dadada';\nconst FONT_FILL = '#555b51';\n\nfunction $$1(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nfunction createSVG(tag, o) {\n\tvar element = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$$1(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $$1(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif(i === \"className\") { i = \"class\"; }\n\t\t\tif(i === \"innerHTML\") {\n\t\t\t\telement['textContent'] = val;\n\t\t\t} else {\n\t\t\t\telement.setAttribute(i, val);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn element;\n}\n\nfunction renderVerticalGradient(svgDefElem, gradientId) {\n\treturn createSVG('linearGradient', {\n\t\tinside: svgDefElem,\n\t\tid: gradientId,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: 0,\n\t\ty2: 1\n\t});\n}\n\nfunction setGradientStop(gradElem, offset, color, opacity) {\n\treturn createSVG('stop', {\n\t\t'inside': gradElem,\n\t\t'style': `stop-color: ${color}`,\n\t\t'offset': offset,\n\t\t'stop-opacity': opacity\n\t});\n}\n\nfunction makeSVGContainer(parent, className, width, height) {\n\treturn createSVG('svg', {\n\t\tclassName: className,\n\t\tinside: parent,\n\t\twidth: width,\n\t\theight: height\n\t});\n}\n\nfunction makeSVGDefs(svgContainer) {\n\treturn createSVG('defs', {\n\t\tinside: svgContainer,\n\t});\n}\n\nfunction makeSVGGroup(className, transform='', parent=undefined) {\n\tlet args = {\n\t\tclassName: className,\n\t\ttransform: transform\n\t};\n\tif(parent) args.inside = parent;\n\treturn createSVG('g', args);\n}\n\n\n\nfunction makePath(pathStr, className='', stroke='none', fill='none', strokeWidth=2) {\n\treturn createSVG('path', {\n\t\tclassName: className,\n\t\td: pathStr,\n\t\tstyles: {\n\t\t\tstroke: stroke,\n\t\t\tfill: fill,\n\t\t\t'stroke-width': strokeWidth\n\t\t}\n\t});\n}\n\nfunction makeArcPathStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, arcEndY] = [center.x + endPosition.x, center.y + endPosition.y];\n\treturn `M${center.x} ${center.y}\n\t\tL${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY} z`;\n}\n\nfunction makeCircleStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, midArc, arcEndY] = [center.x + endPosition.x, center.y * 2, center.y + endPosition.y];\n\treturn `M${center.x} ${center.y}\n\t\tL${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${midArc} z\n\t\tL${arcStartX} ${midArc}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY} z`;\n}\n\nfunction makeArcStrokePathStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, arcEndY] = [center.x + endPosition.x, center.y + endPosition.y];\n\n\treturn `M${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY}`;\n}\n\nfunction makeStrokeCircleStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, midArc, arcEndY] = [center.x + endPosition.x, radius * 2 + arcStartY, center.y + startPosition.y];\n\n\treturn `M${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${midArc}\n\t\tM${arcStartX} ${midArc}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY}`;\n}\n\nfunction makeGradient(svgDefElem, color, lighter = false) {\n\tlet gradientId ='path-fill-gradient' + '-' + color + '-' +(lighter ? 'lighter' : 'default');\n\tlet gradientDef = renderVerticalGradient(svgDefElem, gradientId);\n\tlet opacities = [1, 0.6, 0.2];\n\tif(lighter) {\n\t\topacities = [0.4, 0.2, 0];\n\t}\n\n\tsetGradientStop(gradientDef, \"0%\", color, opacities[0]);\n\tsetGradientStop(gradientDef, \"50%\", color, opacities[1]);\n\tsetGradientStop(gradientDef, \"100%\", color, opacities[2]);\n\n\treturn gradientId;\n}\n\nfunction percentageBar(x, y, width, height,\n\tdepth=PERCENTAGE_BAR_DEFAULT_DEPTH, fill='none') {\n\n\tlet args = {\n\t\tclassName: 'percentage-bar',\n\t\tx: x,\n\t\ty: y,\n\t\twidth: width,\n\t\theight: height,\n\t\tfill: fill,\n\t\tstyles: {\n\t\t\t'stroke': lightenDarkenColor(fill, -25),\n\t\t\t// Diabolically good: https://stackoverflow.com/a/9000859\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray\n\t\t\t'stroke-dasharray': `0, ${height + width}, ${width}, ${height}`,\n\t\t\t'stroke-width': depth\n\t\t},\n\t};\n\n\treturn createSVG(\"rect\", args);\n}\n\nfunction heatSquare(className, x, y, size, radius, fill='none', data={}) {\n\tlet args = {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: size,\n\t\theight: size,\n\t\trx: radius,\n\t\tfill: fill\n\t};\n\n\tObject.keys(data).map(key => {\n\t\targs[key] = data[key];\n\t});\n\n\treturn createSVG(\"rect\", args);\n}\n\nfunction legendBar(x, y, size, fill='none', label, truncate=false) {\n\tlabel = truncate ? truncateString(label, LABEL_MAX_CHARS) : label;\n\n\tlet args = {\n\t\tclassName: 'legend-bar',\n\t\tx: 0,\n\t\ty: 0,\n\t\twidth: size,\n\t\theight: '2px',\n\t\tfill: fill\n\t};\n\tlet text = createSVG('text', {\n\t\tclassName: 'legend-dataset-text',\n\t\tx: 0,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE * 2) + 'px',\n\t\t'font-size': (FONT_SIZE * 1.2) + 'px',\n\t\t'text-anchor': 'start',\n\t\tfill: FONT_FILL,\n\t\tinnerHTML: label\n\t});\n\n\tlet group = createSVG('g', {\n\t\ttransform: `translate(${x}, ${y})`\n\t});\n\tgroup.appendChild(createSVG(\"rect\", args));\n\tgroup.appendChild(text);\n\n\treturn group;\n}\n\nfunction legendDot(x, y, size, fill='none', label, truncate=false) {\n\tlabel = truncate ? truncateString(label, LABEL_MAX_CHARS) : label;\n\n\tlet args = {\n\t\tclassName: 'legend-dot',\n\t\tcx: 0,\n\t\tcy: 0,\n\t\tr: size,\n\t\tfill: fill\n\t};\n\tlet text = createSVG('text', {\n\t\tclassName: 'legend-dataset-text',\n\t\tx: 0,\n\t\ty: 0,\n\t\tdx: (FONT_SIZE) + 'px',\n\t\tdy: (FONT_SIZE/3) + 'px',\n\t\t'font-size': (FONT_SIZE * 1.2) + 'px',\n\t\t'text-anchor': 'start',\n\t\tfill: FONT_FILL,\n\t\tinnerHTML: label\n\t});\n\n\tlet group = createSVG('g', {\n\t\ttransform: `translate(${x}, ${y})`\n\t});\n\tgroup.appendChild(createSVG(\"circle\", args));\n\tgroup.appendChild(text);\n\n\treturn group;\n}\n\nfunction makeText(className, x, y, content, options = {}) {\n\tlet fontSize = options.fontSize || FONT_SIZE;\n\tlet dy = options.dy !== undefined ? options.dy : (fontSize / 2);\n\tlet fill = options.fill || FONT_FILL;\n\tlet textAnchor = options.textAnchor || 'start';\n\treturn createSVG('text', {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\tdy: dy + 'px',\n\t\t'font-size': fontSize + 'px',\n\t\tfill: fill,\n\t\t'text-anchor': textAnchor,\n\t\tinnerHTML: content\n\t});\n}\n\nfunction makeVertLine(x, label, y1, y2, options={}) {\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tlet l = createSVG('line', {\n\t\tclassName: 'line-vertical ' + options.className,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: y1,\n\t\ty2: y2,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: 0,\n\t\ty: y1 > y2 ? y1 + LABEL_MARGIN : y1 - LABEL_MARGIN - FONT_SIZE,\n\t\tdy: FONT_SIZE + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'middle',\n\t\tinnerHTML: label + \"\"\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(${ x }, 0)`\n\t});\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nfunction makeHoriLine(y, label, x1, x2, options={}) {\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.lineType) options.lineType = '';\n\tif (options.shortenNumbers) label = shortenLargeNumber(label);\n\n\tlet className = 'line-horizontal ' + options.className +\n\t\t(options.lineType === \"dashed\" ? \"dashed\": \"\");\n\n\tlet l = createSVG('line', {\n\t\tclassName: className,\n\t\tx1: x1,\n\t\tx2: x2,\n\t\ty1: 0,\n\t\ty2: 0,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: x1 < x2 ? x1 - LABEL_MARGIN : x1 + LABEL_MARGIN,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / 2 - 2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': x1 < x2 ? 'end' : 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(0, ${y})`,\n\t\t'stroke-opacity': 1\n\t});\n\n\tif(text === 0 || text === '0') {\n\t\tline.style.stroke = \"rgba(27, 31, 35, 0.6)\";\n\t}\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nfunction yLine(y, label, width, options={}) {\n\tif (!isValidNumber(y)) y = 0;\n\n\tif(!options.pos) options.pos = 'left';\n\tif(!options.offset) options.offset = 0;\n\tif(!options.mode) options.mode = 'span';\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.className) options.className = '';\n\n\tlet x1 = -1 * AXIS_TICK_LENGTH;\n\tlet x2 = options.mode === 'span' ? width + AXIS_TICK_LENGTH : 0;\n\n\tif(options.mode === 'tick' && options.pos === 'right') {\n\t\tx1 = width + AXIS_TICK_LENGTH;\n\t\tx2 = width;\n\t}\n\n\t// let offset = options.pos === 'left' ? -1 * options.offset : options.offset;\n\n\tx1 += options.offset;\n\tx2 += options.offset;\n\n\treturn makeHoriLine(y, label, x1, x2, {\n\t\tstroke: options.stroke,\n\t\tclassName: options.className,\n\t\tlineType: options.lineType,\n\t\tshortenNumbers: options.shortenNumbers\n\t});\n}\n\nfunction xLine(x, label, height, options={}) {\n\tif (!isValidNumber(x)) x = 0;\n\n\tif(!options.pos) options.pos = 'bottom';\n\tif(!options.offset) options.offset = 0;\n\tif(!options.mode) options.mode = 'span';\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.className) options.className = '';\n\n\t// Draw X axis line in span/tick mode with optional label\n\t//                        \ty2(span)\n\t// \t\t\t\t\t\t|\n\t// \t\t\t\t\t\t|\n\t//\t\t\t\tx line\t|\n\t//\t\t\t\t\t\t|\n\t// \t\t\t\t\t   \t|\n\t// ---------------------+-- y2(tick)\n\t//\t\t\t\t\t\t|\n\t//\t\t\t\t\t\t\ty1\n\n\tlet y1 = height + AXIS_TICK_LENGTH;\n\tlet y2 = options.mode === 'span' ? -1 * AXIS_TICK_LENGTH : height;\n\n\tif(options.mode === 'tick' && options.pos === 'top') {\n\t\t// top axis ticks\n\t\ty1 = -1 * AXIS_TICK_LENGTH;\n\t\ty2 = 0;\n\t}\n\n\treturn makeVertLine(x, label, y1, y2, {\n\t\tstroke: options.stroke,\n\t\tclassName: options.className,\n\t\tlineType: options.lineType\n\t});\n}\n\nfunction yMarker(y, label, width, options={}) {\n\tif(!options.labelPos) options.labelPos = 'right';\n\tlet x = options.labelPos === 'left' ? LABEL_MARGIN\n\t\t: width - getStringWidth(label, 5) - LABEL_MARGIN;\n\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: x,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet line = makeHoriLine(y, '', 0, width, {\n\t\tstroke: options.stroke || BASE_LINE_COLOR,\n\t\tclassName: options.className || '',\n\t\tlineType: options.lineType\n\t});\n\n\tline.appendChild(labelSvg);\n\n\treturn line;\n}\n\nfunction yRegion(y1, y2, width, label, options={}) {\n\t// return a group\n\tlet height = y1 - y2;\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`, // remove class\n\t\tstyles: {\n\t\t\tfill: `rgba(228, 234, 239, 0.49)`,\n\t\t\tstroke: BASE_LINE_COLOR,\n\t\t\t'stroke-dasharray': `${width}, ${height}`\n\t\t},\n\t\t// 'data-point-index': index,\n\t\tx: 0,\n\t\ty: 0,\n\t\twidth: width,\n\t\theight: height\n\t});\n\n\tif(!options.labelPos) options.labelPos = 'right';\n\tlet x = options.labelPos === 'left' ? LABEL_MARGIN\n\t\t: width - getStringWidth(label+\"\", 4.5) - LABEL_MARGIN;\n\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: x,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet region = createSVG('g', {\n\t\ttransform: `translate(0, ${y2})`\n\t});\n\n\tregion.appendChild(rect);\n\tregion.appendChild(labelSvg);\n\n\treturn region;\n}\n\nfunction datasetBar(x, yTop, width, color, label='', index=0, offset=0, meta={}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\ty -= offset;\n\n\tif(height === 0) {\n\t\theight = meta.minHeight;\n\t\ty -= meta.minHeight;\n\t}\n\n\t// Preprocess numbers to avoid svg building errors\n\tif (!isValidNumber(x)) x = 0;\n\tif (!isValidNumber(y)) y = 0;\n\tif (!isValidNumber(height, true)) height = 0;\n\tif (!isValidNumber(width, true)) width = 0;\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`,\n\t\tstyle: `fill: ${color}`,\n\t\t'data-point-index': index,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: width,\n\t\theight: height\n\t});\n\n\tlabel += \"\";\n\n\tif(!label && !label.length) {\n\t\treturn rect;\n\t} else {\n\t\trect.setAttribute('y', 0);\n\t\trect.setAttribute('x', 0);\n\t\tlet text = createSVG('text', {\n\t\t\tclassName: 'data-point-value',\n\t\t\tx: width/2,\n\t\t\ty: 0,\n\t\t\tdy: (FONT_SIZE / 2 * -1) + 'px',\n\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t'text-anchor': 'middle',\n\t\t\tinnerHTML: label\n\t\t});\n\n\t\tlet group = createSVG('g', {\n\t\t\t'data-point-index': index,\n\t\t\ttransform: `translate(${x}, ${y})`\n\t\t});\n\t\tgroup.appendChild(rect);\n\t\tgroup.appendChild(text);\n\n\t\treturn group;\n\t}\n}\n\nfunction datasetDot(x, y, radius, color, label='', index=0) {\n\tlet dot = createSVG('circle', {\n\t\tstyle: `fill: ${color}`,\n\t\t'data-point-index': index,\n\t\tcx: x,\n\t\tcy: y,\n\t\tr: radius\n\t});\n\n\tlabel += \"\";\n\n\tif(!label && !label.length) {\n\t\treturn dot;\n\t} else {\n\t\tdot.setAttribute('cy', 0);\n\t\tdot.setAttribute('cx', 0);\n\n\t\tlet text = createSVG('text', {\n\t\t\tclassName: 'data-point-value',\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tdy: (FONT_SIZE / 2 * -1 - radius) + 'px',\n\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t'text-anchor': 'middle',\n\t\t\tinnerHTML: label\n\t\t});\n\n\t\tlet group = createSVG('g', {\n\t\t\t'data-point-index': index,\n\t\t\ttransform: `translate(${x}, ${y})`\n\t\t});\n\t\tgroup.appendChild(dot);\n\t\tgroup.appendChild(text);\n\n\t\treturn group;\n\t}\n}\n\nfunction getPaths(xList, yList, color, options={}, meta={}) {\n\tlet pointsList = yList.map((y, i) => (xList[i] + ',' + y));\n\tlet pointsStr = pointsList.join(\"L\");\n\n\t// Spline\n\tif (options.spline)\n\t\tpointsStr = getSplineCurvePointsStr(xList, yList);\n\n\tlet path = makePath(\"M\"+pointsStr, 'line-graph-path', color);\n\n\t// HeatLine\n\tif(options.heatline) {\n\t\tlet gradient_id = makeGradient(meta.svgDefs, color);\n\t\tpath.style.stroke = `url(#${gradient_id})`;\n\t}\n\n\tlet paths = {\n\t\tpath: path\n\t};\n\n\t// Region\n\tif(options.regionFill) {\n\t\tlet gradient_id_region = makeGradient(meta.svgDefs, color, true);\n\n\t\tlet pathStr = \"M\" + `${xList[0]},${meta.zeroLine}L` + pointsStr + `L${xList.slice(-1)[0]},${meta.zeroLine}`;\n\t\tpaths.region = makePath(pathStr, `region-fill`, 'none', `url(#${gradient_id_region})`);\n\t}\n\n\treturn paths;\n}\n\nlet makeOverlay = {\n\t'bar': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'rect') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\toverlay.style.fill = '#000000';\n\t\toverlay.style.opacity = '0.4';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t},\n\n\t'dot': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\tlet radius = unit.getAttribute('r');\n\t\tlet fill = unit.getAttribute('fill');\n\t\toverlay.setAttribute('r', parseInt(radius) + DOT_OVERLAY_SIZE_INCR);\n\t\toverlay.setAttribute('fill', fill);\n\t\toverlay.style.opacity = '0.6';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t},\n\n\t'heat_square': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\tlet radius = unit.getAttribute('r');\n\t\tlet fill = unit.getAttribute('fill');\n\t\toverlay.setAttribute('r', parseInt(radius) + DOT_OVERLAY_SIZE_INCR);\n\t\toverlay.setAttribute('fill', fill);\n\t\toverlay.style.opacity = '0.6';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t}\n};\n\nlet updateOverlay = {\n\t'bar': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'rect') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['x', 'y', 'width', 'height'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n\n\t'dot': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['cx', 'cy'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n\n\t'heat_square': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['cx', 'cy'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n};\n\nconst UNIT_ANIM_DUR = 350;\nconst PATH_ANIM_DUR = 350;\nconst MARKER_LINE_ANIM_DUR = UNIT_ANIM_DUR;\nconst REPLACE_ALL_NEW_DUR = 250;\n\nconst STD_EASING = 'easein';\n\nfunction translate(unit, oldCoord, newCoord, duration) {\n\tlet old = typeof oldCoord === 'string' ? oldCoord : oldCoord.join(', ');\n\treturn [\n\t\tunit,\n\t\t{transform: newCoord.join(', ')},\n\t\tduration,\n\t\tSTD_EASING,\n\t\t\"translate\",\n\t\t{transform: old}\n\t];\n}\n\nfunction translateVertLine(xLine, newX, oldX) {\n\treturn translate(xLine, [oldX, 0], [newX, 0], MARKER_LINE_ANIM_DUR);\n}\n\nfunction translateHoriLine(yLine, newY, oldY) {\n\treturn translate(yLine, [0, oldY], [0, newY], MARKER_LINE_ANIM_DUR);\n}\n\nfunction animateRegion(rectGroup, newY1, newY2, oldY2) {\n\tlet newHeight = newY1 - newY2;\n\tlet rect = rectGroup.childNodes[0];\n\tlet width = rect.getAttribute(\"width\");\n\tlet rectAnim = [\n\t\trect,\n\t\t{ height: newHeight, 'stroke-dasharray': `${width}, ${newHeight}` },\n\t\tMARKER_LINE_ANIM_DUR,\n\t\tSTD_EASING\n\t];\n\n\tlet groupAnim = translate(rectGroup, [0, oldY2], [0, newY2], MARKER_LINE_ANIM_DUR);\n\treturn [rectAnim, groupAnim];\n}\n\nfunction animateBar(bar, x, yTop, width, offset=0, meta={}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\ty -= offset;\n\tif(bar.nodeName !== 'rect') {\n\t\tlet rect = bar.childNodes[0];\n\t\tlet rectAnim = [\n\t\t\trect,\n\t\t\t{width: width, height: height},\n\t\t\tUNIT_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t];\n\n\t\tlet oldCoordStr = bar.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(bar, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [rectAnim, groupAnim];\n\t} else {\n\t\treturn [[bar, {width: width, height: height, x: x, y: y}, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// bar.animate({height: args.newHeight, y: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nfunction animateDot(dot, x, y) {\n\tif(dot.nodeName !== 'circle') {\n\t\tlet oldCoordStr = dot.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(dot, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [groupAnim];\n\t} else {\n\t\treturn [[dot, {cx: x, cy: y}, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// dot.animate({cy: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nfunction animatePath(paths, newXList, newYList, zeroLine, spline) {\n\tlet pathComponents = [];\n\tlet pointsStr = newYList.map((y, i) => (newXList[i] + ',' + y)).join(\"L\");\n\n\tif (spline)\n\t\tpointsStr = getSplineCurvePointsStr(newXList, newYList);\n\n\tconst animPath = [paths.path, {d:\"M\" + pointsStr}, PATH_ANIM_DUR, STD_EASING];\n\tpathComponents.push(animPath);\n\n\tif(paths.region) {\n\t\tlet regStartPt = `${newXList[0]},${zeroLine}L`;\n\t\tlet regEndPt = `L${newXList.slice(-1)[0]}, ${zeroLine}`;\n\n\t\tconst animRegion = [\n\t\t\tpaths.region,\n\t\t\t{d:\"M\" + regStartPt + pointsStr + regEndPt},\n\t\t\tPATH_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t];\n\t\tpathComponents.push(animRegion);\n\t}\n\n\treturn pathComponents;\n}\n\nfunction animatePathStr(oldPath, pathStr) {\n\treturn [oldPath, {d: pathStr}, UNIT_ANIM_DUR, STD_EASING];\n}\n\n// Leveraging SMIL Animations\n\nconst EASING = {\n\tease: \"0.25 0.1 0.25 1\",\n\tlinear: \"0 0 1 1\",\n\t// easein: \"0.42 0 1 1\",\n\teasein: \"0.1 0.8 0.2 1\",\n\teaseout: \"0 0 0.58 1\",\n\teaseinout: \"0.42 0 0.58 1\"\n};\n\nfunction animateSVGElement(element, props, dur, easingType=\"linear\", type=undefined, oldValues={}) {\n\n\tlet animElement = element.cloneNode(true);\n\tlet newElement = element.cloneNode(true);\n\n\tfor(var attributeName in props) {\n\t\tlet animateElement;\n\t\tif(attributeName === 'transform') {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animateTransform\");\n\t\t} else {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animate\");\n\t\t}\n\t\tlet currentValue = oldValues[attributeName] || element.getAttribute(attributeName);\n\t\tlet value = props[attributeName];\n\n\t\tlet animAttr = {\n\t\t\tattributeName: attributeName,\n\t\t\tfrom: currentValue,\n\t\t\tto: value,\n\t\t\tbegin: \"0s\",\n\t\t\tdur: dur/1000 + \"s\",\n\t\t\tvalues: currentValue + \";\" + value,\n\t\t\tkeySplines: EASING[easingType],\n\t\t\tkeyTimes: \"0;1\",\n\t\t\tcalcMode: \"spline\",\n\t\t\tfill: 'freeze'\n\t\t};\n\n\t\tif(type) {\n\t\t\tanimAttr[\"type\"] = type;\n\t\t}\n\n\t\tfor (var i in animAttr) {\n\t\t\tanimateElement.setAttribute(i, animAttr[i]);\n\t\t}\n\n\t\tanimElement.appendChild(animateElement);\n\n\t\tif(type) {\n\t\t\tnewElement.setAttribute(attributeName, `translate(${value})`);\n\t\t} else {\n\t\t\tnewElement.setAttribute(attributeName, value);\n\t\t}\n\t}\n\n\treturn [animElement, newElement];\n}\n\nfunction transform(element, style) { // eslint-disable-line no-unused-vars\n\telement.style.transform = style;\n\telement.style.webkitTransform = style;\n\telement.style.msTransform = style;\n\telement.style.mozTransform = style;\n\telement.style.oTransform = style;\n}\n\nfunction animateSVG(svgContainer, elements) {\n\tlet newElements = [];\n\tlet animElements = [];\n\n\telements.map(element => {\n\t\tlet unit = element[0];\n\t\tlet parent = unit.parentNode;\n\n\t\tlet animElement, newElement;\n\n\t\telement[0] = unit;\n\t\t[animElement, newElement] = animateSVGElement(...element);\n\n\t\tnewElements.push(newElement);\n\t\tanimElements.push([animElement, parent]);\n\t\t\n\t\tif (parent) {\n\t\t\tparent.replaceChild(animElement, unit);\n\t\t}\n\t});\n\n\tlet animSvg = svgContainer.cloneNode(true);\n\n\tanimElements.map((animElement, i) => {\n\t\tif (animElement[1]) {\n\t\t\tanimElement[1].replaceChild(newElements[i], animElement[0]);\n\t\t\telements[i][0] = newElements[i];\n\t\t}\n\t});\n\n\treturn animSvg;\n}\n\nfunction runSMILAnimation(parent, svgElement, elementsToAnimate) {\n\tif(elementsToAnimate.length === 0) return;\n\n\tlet animSvgElement = animateSVG(svgElement, elementsToAnimate);\n\tif(svgElement.parentNode == parent) {\n\t\tparent.removeChild(svgElement);\n\t\tparent.appendChild(animSvgElement);\n\n\t}\n\n\t// Replace the new svgElement (data has already been replaced)\n\tsetTimeout(() => {\n\t\tif(animSvgElement.parentNode == parent) {\n\t\t\tparent.removeChild(animSvgElement);\n\t\t\tparent.appendChild(svgElement);\n\t\t}\n\t}, REPLACE_ALL_NEW_DUR);\n}\n\nconst CSSTEXT = \".chart-container{position:relative;font-family:-apple-system,BlinkMacSystemFont,'Segoe UI','Roboto','Oxygen','Ubuntu','Cantarell','Fira Sans','Droid Sans','Helvetica Neue',sans-serif}.chart-container .axis,.chart-container .chart-label{fill:#555b51}.chart-container .axis line,.chart-container .chart-label line{stroke:#dadada}.chart-container .dataset-units circle{stroke:#fff;stroke-width:2}.chart-container .dataset-units path{fill:none;stroke-opacity:1;stroke-width:2px}.chart-container .dataset-path{stroke-width:2px}.chart-container .path-group path{fill:none;stroke-opacity:1;stroke-width:2px}.chart-container line.dashed{stroke-dasharray:5,3}.chart-container .axis-line .specific-value{text-anchor:start}.chart-container .axis-line .y-line{text-anchor:end}.chart-container .axis-line .x-line{text-anchor:middle}.chart-container .legend-dataset-text{fill:#6c7680;font-weight:600}.graph-svg-tip{position:absolute;z-index:99999;padding:10px;font-size:12px;color:#959da5;text-align:center;background:rgba(0,0,0,.8);border-radius:3px}.graph-svg-tip ul{padding-left:0;display:flex}.graph-svg-tip ol{padding-left:0;display:flex}.graph-svg-tip ul.data-point-list li{min-width:90px;flex:1;font-weight:600}.graph-svg-tip strong{color:#dfe2e5;font-weight:600}.graph-svg-tip .svg-pointer{position:absolute;height:5px;margin:0 0 0 -5px;content:' ';border:5px solid transparent;border-top-color:rgba(0,0,0,.8)}.graph-svg-tip.comparison{padding:0;text-align:left;pointer-events:none}.graph-svg-tip.comparison .title{display:block;padding:10px;margin:0;font-weight:600;line-height:1;pointer-events:none}.graph-svg-tip.comparison ul{margin:0;white-space:nowrap;list-style:none}.graph-svg-tip.comparison li{display:inline-block;padding:5px 10px}\";\n\nfunction downloadFile(filename, data) {\n\tvar a = document.createElement('a');\n\ta.style = \"display: none\";\n\tvar blob = new Blob(data, {type: \"image/svg+xml; charset=utf-8\"});\n\tvar url = window.URL.createObjectURL(blob);\n\ta.href = url;\n\ta.download = filename;\n\tdocument.body.appendChild(a);\n\ta.click();\n\tsetTimeout(function(){\n\t\tdocument.body.removeChild(a);\n\t\twindow.URL.revokeObjectURL(url);\n\t}, 300);\n}\n\nfunction prepareForExport(svg) {\n\tlet clone = svg.cloneNode(true);\n\tclone.classList.add('chart-container');\n\tclone.setAttribute('xmlns', \"http://www.w3.org/2000/svg\");\n\tclone.setAttribute('xmlns:xlink', \"http://www.w3.org/1999/xlink\");\n\tlet styleEl = $.create('style', {\n\t\t'innerHTML': CSSTEXT\n\t});\n\tclone.insertBefore(styleEl, clone.firstChild);\n\n\tlet container = $.create('div');\n\tcontainer.appendChild(clone);\n\n\treturn container.innerHTML;\n}\n\nclass BaseChart {\n\tconstructor(parent, options) {\n\t\t// deepclone options to avoid making changes to orignal object\n\t\toptions = deepClone(options);\n\n\t\tthis.parent = typeof parent === 'string'\n\t\t\t? document.querySelector(parent)\n\t\t\t: parent;\n\n\t\tif (!(this.parent instanceof HTMLElement)) {\n\t\t\tthrow new Error('No `parent` element to render on was provided.');\n\t\t}\n\n\t\tthis.rawChartArgs = options;\n\n\t\tthis.title = options.title || '';\n\t\tthis.type = options.type || '';\n\n\t\tthis.realData = this.prepareData(options.data);\n\t\tthis.data = this.prepareFirstData(this.realData);\n\n\t\tthis.colors = this.validateColors(options.colors, this.type);\n\n\t\tthis.config = {\n\t\t\tshowTooltip: 1, // calculate\n\t\t\tshowLegend: 1, // calculate\n\t\t\tisNavigable: options.isNavigable || 0,\n\t\t\tanimate: (typeof options.animate !== 'undefined') ? options.animate : 1,\n\t\t\ttruncateLegends: options.truncateLegends || 1\n\t\t};\n\n\t\tthis.measures = JSON.parse(JSON.stringify(BASE_MEASURES));\n\t\tlet m = this.measures;\n\t\tthis.setMeasures(options);\n\t\tif(!this.title.length) { m.titleHeight = 0; }\n\t\tif(!this.config.showLegend) m.legendHeight = 0;\n\t\tthis.argHeight = options.height || m.baseHeight;\n\n\t\tthis.state = {};\n\t\tthis.options = {};\n\n\t\tthis.initTimeout = INIT_CHART_UPDATE_TIMEOUT;\n\n\t\tif(this.config.isNavigable) {\n\t\t\tthis.overlays = [];\n\t\t}\n\n\t\tthis.configure(options);\n\t}\n\n\tprepareData(data) {\n\t\treturn data;\n\t}\n\n\tprepareFirstData(data) {\n\t\treturn data;\n\t}\n\n\tvalidateColors(colors, type) {\n\t\tconst validColors = [];\n\t\tcolors = (colors || []).concat(DEFAULT_COLORS[type]);\n\t\tcolors.forEach((string) => {\n\t\t\tconst color = getColor(string);\n\t\t\tif(!isValidColor(color)) {\n\t\t\t\tconsole.warn('\"' + string + '\" is not a valid color.');\n\t\t\t} else {\n\t\t\t\tvalidColors.push(color);\n\t\t\t}\n\t\t});\n\t\treturn validColors;\n\t}\n\n\tsetMeasures() {\n\t\t// Override measures, including those for title and legend\n\t\t// set config for legend and title\n\t}\n\n\tconfigure() {\n\t\tlet height = this.argHeight;\n\t\tthis.baseHeight = height;\n\t\tthis.height = height - getExtraHeight(this.measures);\n\n\t\t// Bind window events\n\t\tthis.boundDrawFn = () => this.draw(true);\n\t\tif (ResizeObserver) {\n\t\t\tthis.resizeObserver = new ResizeObserver(this.boundDrawFn);\n\t\t\tthis.resizeObserver.observe(this.parent);\n\t\t}\n\t\twindow.addEventListener('resize', this.boundDrawFn);\n\t\twindow.addEventListener('orientationchange', this.boundDrawFn);\n\t}\n\n\tdestroy() {\n\t\tif (this.resizeObserver) this.resizeObserver.disconnect();\n\t\twindow.removeEventListener('resize', this.boundDrawFn);\n\t\twindow.removeEventListener('orientationchange', this.boundDrawFn);\n\t}\n\n\t// Has to be called manually\n\tsetup() {\n\t\tthis.makeContainer();\n\t\tthis.updateWidth();\n\t\tthis.makeTooltip();\n\n\t\tthis.draw(false, true);\n\t}\n\n\tmakeContainer() {\n\t\t// Chart needs a dedicated parent element\n\t\tthis.parent.innerHTML = '';\n\n\t\tlet args = {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'chart-container'\n\t\t};\n\n\t\tif(this.independentWidth) {\n\t\t\targs.styles = { width: this.independentWidth + 'px' };\n\t\t}\n\n\t\tthis.container = $.create('div', args);\n\t}\n\n\tmakeTooltip() {\n\t\tthis.tip = new SvgTip({\n\t\t\tparent: this.container,\n\t\t\tcolors: this.colors\n\t\t});\n\t\tthis.bindTooltip();\n\t}\n\n\tbindTooltip() {}\n\n\tdraw(onlyWidthChange=false, init=false) {\n\t\tif (onlyWidthChange && isHidden(this.parent)) {\n\t\t\t// Don't update anything if the chart is hidden\n\t\t\treturn;\n\t\t}\n\t\tthis.updateWidth();\n\n\t\tthis.calc(onlyWidthChange);\n\t\tthis.makeChartArea();\n\t\tthis.setupComponents();\n\n\t\tthis.components.forEach(c => c.setup(this.drawArea));\n\t\t// this.components.forEach(c => c.make());\n\t\tthis.render(this.components, false);\n\n\t\tif(init) {\n\t\t\tthis.data = this.realData;\n\t\t\tsetTimeout(() => {this.update(this.data);}, this.initTimeout);\n\t\t}\n\n\t\tthis.renderLegend();\n\n\t\tthis.setupNavigation(init);\n\t}\n\n\tcalc() {} // builds state\n\n\tupdateWidth() {\n\t\tthis.baseWidth = getElementContentWidth(this.parent);\n\t\tthis.width = this.baseWidth - getExtraWidth(this.measures);\n\t}\n\n\tmakeChartArea() {\n\t\tif(this.svg) {\n\t\t\tthis.container.removeChild(this.svg);\n\t\t}\n\t\tlet m = this.measures;\n\n\t\tthis.svg = makeSVGContainer(\n\t\t\tthis.container,\n\t\t\t'frappe-chart chart',\n\t\t\tthis.baseWidth,\n\t\t\tthis.baseHeight\n\t\t);\n\t\tthis.svgDefs = makeSVGDefs(this.svg);\n\n\t\tif(this.title.length) {\n\t\t\tthis.titleEL = makeText(\n\t\t\t\t'title',\n\t\t\t\tm.margins.left,\n\t\t\t\tm.margins.top,\n\t\t\t\tthis.title,\n\t\t\t\t{\n\t\t\t\t\tfontSize: m.titleFontSize,\n\t\t\t\t\tfill: '#666666',\n\t\t\t\t\tdy: m.titleFontSize\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tlet top = getTopOffset(m);\n\t\tthis.drawArea = makeSVGGroup(\n\t\t\tthis.type + '-chart chart-draw-area',\n\t\t\t`translate(${getLeftOffset(m)}, ${top})`\n\t\t);\n\n\t\tif(this.config.showLegend) {\n\t\t\ttop += this.height + m.paddings.bottom;\n\t\t\tthis.legendArea = makeSVGGroup(\n\t\t\t\t'chart-legend',\n\t\t\t\t`translate(${getLeftOffset(m)}, ${top})`\n\t\t\t);\n\t\t}\n\n\t\tif(this.title.length) { this.svg.appendChild(this.titleEL); }\n\t\tthis.svg.appendChild(this.drawArea);\n\t\tif(this.config.showLegend) { this.svg.appendChild(this.legendArea); }\n\n\t\tthis.updateTipOffset(getLeftOffset(m), getTopOffset(m));\n\t}\n\n\tupdateTipOffset(x, y) {\n\t\tthis.tip.offset = {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n\n\tsetupComponents() { this.components = new Map(); }\n\n\tupdate(data) {\n\t\tif(!data) {\n\t\t\tconsole.error('No data to update.');\n\t\t}\n\t\tthis.data = this.prepareData(data);\n\t\tthis.calc(); // builds state\n\t\tthis.render(this.components, this.config.animate);\n\t\tthis.renderLegend();\n\t}\n\n\trender(components=this.components, animate=true) {\n\t\tif(this.config.isNavigable) {\n\t\t\t// Remove all existing overlays\n\t\t\tthis.overlays.map(o => o.parentNode.removeChild(o));\n\t\t\t// ref.parentNode.insertBefore(element, ref);\n\t\t}\n\t\tlet elementsToAnimate = [];\n\t\t// Can decouple to this.refreshComponents() first to save animation timeout\n\t\tcomponents.forEach(c => {\n\t\t\telementsToAnimate = elementsToAnimate.concat(c.update(animate));\n\t\t});\n\t\tif(elementsToAnimate.length > 0) {\n\t\t\trunSMILAnimation(this.container, this.svg, elementsToAnimate);\n\t\t\tsetTimeout(() => {\n\t\t\t\tcomponents.forEach(c => c.make());\n\t\t\t\tthis.updateNav();\n\t\t\t}, CHART_POST_ANIMATE_TIMEOUT);\n\t\t} else {\n\t\t\tcomponents.forEach(c => c.make());\n\t\t\tthis.updateNav();\n\t\t}\n\t}\n\n\tupdateNav() {\n\t\tif(this.config.isNavigable) {\n\t\t\tthis.makeOverlay();\n\t\t\tthis.bindUnits();\n\t\t}\n\t}\n\n\trenderLegend() {}\n\n\tsetupNavigation(init=false) {\n\t\tif(!this.config.isNavigable) return;\n\n\t\tif(init) {\n\t\t\tthis.bindOverlay();\n\n\t\t\tthis.keyActions = {\n\t\t\t\t'13': this.onEnterKey.bind(this),\n\t\t\t\t'37': this.onLeftArrow.bind(this),\n\t\t\t\t'38': this.onUpArrow.bind(this),\n\t\t\t\t'39': this.onRightArrow.bind(this),\n\t\t\t\t'40': this.onDownArrow.bind(this),\n\t\t\t};\n\n\t\t\tdocument.addEventListener('keydown', (e) => {\n\t\t\t\tif(isElementInViewport(this.container)) {\n\t\t\t\t\te = e || window.event;\n\t\t\t\t\tif(this.keyActions[e.keyCode]) {\n\t\t\t\t\t\tthis.keyActions[e.keyCode]();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tmakeOverlay() {}\n\tupdateOverlay() {}\n\tbindOverlay() {}\n\tbindUnits() {}\n\n\tonLeftArrow() {}\n\tonRightArrow() {}\n\tonUpArrow() {}\n\tonDownArrow() {}\n\tonEnterKey() {}\n\n\taddDataPoint() {}\n\tremoveDataPoint() {}\n\n\tgetDataPoint() {}\n\tsetCurrentDataPoint() {}\n\n\tupdateDataset() {}\n\n\texport() {\n\t\tlet chartSvg = prepareForExport(this.svg);\n\t\tdownloadFile(this.title || 'Chart', [chartSvg]);\n\t}\n}\n\nclass AggregationChart extends BaseChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\n\t\tthis.config.formatTooltipY = (args.tooltipOptions || {}).formatTooltipY;\n\t\tthis.config.maxSlices = args.maxSlices || 20;\n\t\tthis.config.maxLegendPoints = args.maxLegendPoints || 20;\n\t}\n\n\tcalc() {\n\t\tlet s = this.state;\n\t\tlet maxSlices = this.config.maxSlices;\n\t\ts.sliceTotals = [];\n\n\t\tlet allTotals = this.data.labels.map((label, i) => {\n\t\t\tlet total = 0;\n\t\t\tthis.data.datasets.map(e => {\n\t\t\t\ttotal += e.values[i];\n\t\t\t});\n\t\t\treturn [total, label];\n\t\t}).filter(d => { return d[0] >= 0; }); // keep only positive results\n\n\t\tlet totals = allTotals;\n\t\tif(allTotals.length > maxSlices) {\n\t\t\t// Prune and keep a grey area for rest as per maxSlices\n\t\t\tallTotals.sort((a, b) => { return b[0] - a[0]; });\n\n\t\t\ttotals = allTotals.slice(0, maxSlices-1);\n\t\t\tlet remaining = allTotals.slice(maxSlices-1);\n\n\t\t\tlet sumOfRemaining = 0;\n\t\t\tremaining.map(d => {sumOfRemaining += d[0];});\n\t\t\ttotals.push([sumOfRemaining, 'Rest']);\n\t\t\tthis.colors[maxSlices-1] = 'grey';\n\t\t}\n\n\t\ts.labels = [];\n\t\ttotals.map(d => {\n\t\t\ts.sliceTotals.push(round(d[0]));\n\t\t\ts.labels.push(d[1]);\n\t\t});\n\n\t\ts.grandTotal = s.sliceTotals.reduce((a, b) => a + b, 0);\n\n\t\tthis.center = {\n\t\t\tx: this.width / 2,\n\t\t\ty: this.height / 2\n\t\t};\n\t}\n\n\trenderLegend() {\n\t\tlet s = this.state;\n\t\tthis.legendArea.textContent = '';\n\t\tthis.legendTotals = s.sliceTotals.slice(0, this.config.maxLegendPoints);\n\n\t\tlet count = 0;\n\t\tlet y = 0;\n\t\tthis.legendTotals.map((d, i) => {\n\t\t\tlet barWidth = 150;\n\t\t\tlet divisor = Math.floor(\n\t\t\t\t(this.width - getExtraWidth(this.measures))/barWidth\n\t\t\t);\n\t\t\tif (this.legendTotals.length < divisor) {\n\t\t\t\tbarWidth = this.width/this.legendTotals.length;\n\t\t\t}\n\t\t\tif(count > divisor) {\n\t\t\t\tcount = 0;\n\t\t\t\ty += 20;\n\t\t\t}\n\t\t\tlet x = barWidth * count + 5;\n\t\t\tlet label = this.config.truncateLegends ? truncateString(s.labels[i], barWidth/10) : s.labels[i];\n\t\t\tlet formatted = this.config.formatTooltipY ? this.config.formatTooltipY(d) : d;\n\t\t\tlet dot = legendDot(\n\t\t\t\tx,\n\t\t\t\ty,\n\t\t\t\t5,\n\t\t\t\tthis.colors[i],\n\t\t\t\t`${label}: ${formatted}`,\n\t\t\t\tfalse\n\t\t\t);\n\t\t\tthis.legendArea.appendChild(dot);\n\t\t\tcount++;\n\t\t});\n\t}\n}\n\n// Playing around with dates\n\nconst NO_OF_YEAR_MONTHS = 12;\nconst NO_OF_DAYS_IN_WEEK = 7;\n\nconst NO_OF_MILLIS = 1000;\nconst SEC_IN_DAY = 86400;\n\nconst MONTH_NAMES = [\"January\", \"February\", \"March\", \"April\", \"May\",\n\t\"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n\nconst DAY_NAMES_SHORT = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\n\n// https://stackoverflow.com/a/11252167/6495043\nfunction treatAsUtc(date) {\n\tlet result = new Date(date);\n\tresult.setMinutes(result.getMinutes() - result.getTimezoneOffset());\n\treturn result;\n}\n\nfunction getYyyyMmDd(date) {\n\tlet dd = date.getDate();\n\tlet mm = date.getMonth() + 1; // getMonth() is zero-based\n\treturn [\n\t\tdate.getFullYear(),\n\t\t(mm>9 ? '' : '0') + mm,\n\t\t(dd>9 ? '' : '0') + dd\n\t].join('-');\n}\n\nfunction clone(date) {\n\treturn new Date(date.getTime());\n}\n\n\n\n\n\n// export function getMonthsBetween(startDate, endDate) {}\n\nfunction getWeeksBetween(startDate, endDate) {\n\tlet weekStartDate = setDayToSunday(startDate);\n\treturn Math.ceil(getDaysBetween(weekStartDate, endDate) / NO_OF_DAYS_IN_WEEK);\n}\n\nfunction getDaysBetween(startDate, endDate) {\n\tlet millisecondsPerDay = SEC_IN_DAY * NO_OF_MILLIS;\n\treturn (treatAsUtc(endDate) - treatAsUtc(startDate)) / millisecondsPerDay;\n}\n\nfunction areInSameMonth(startDate, endDate) {\n\treturn startDate.getMonth() === endDate.getMonth()\n\t\t&& startDate.getFullYear() === endDate.getFullYear();\n}\n\nfunction getMonthName(i, short=false) {\n\tlet monthName = MONTH_NAMES[i];\n\treturn short ? monthName.slice(0, 3) : monthName;\n}\n\nfunction getLastDateInMonth (month, year) {\n\treturn new Date(year, month + 1, 0); // 0: last day in previous month\n}\n\n// mutates\nfunction setDayToSunday(date) {\n\tlet newDate = clone(date);\n\tconst day = newDate.getDay();\n\tif(day !== 0) {\n\t\taddDays(newDate, (-1) * day);\n\t}\n\treturn newDate;\n}\n\n// mutates\nfunction addDays(date, numberOfDays) {\n\tdate.setDate(date.getDate() + numberOfDays);\n}\n\nclass ChartComponent {\n\tconstructor({\n\t\tlayerClass = '',\n\t\tlayerTransform = '',\n\t\tconstants,\n\n\t\tgetData,\n\t\tmakeElements,\n\t\tanimateElements\n\t}) {\n\t\tthis.layerTransform = layerTransform;\n\t\tthis.constants = constants;\n\n\t\tthis.makeElements = makeElements;\n\t\tthis.getData = getData;\n\n\t\tthis.animateElements = animateElements;\n\n\t\tthis.store = [];\n\t\tthis.labels = [];\n\n\t\tthis.layerClass = layerClass;\n\t\tthis.layerClass = typeof(this.layerClass) === 'function'\n\t\t\t? this.layerClass() : this.layerClass;\n\n\t\tthis.refresh();\n\t}\n\n\trefresh(data) {\n\t\tthis.data = data || this.getData();\n\t}\n\n\tsetup(parent) {\n\t\tthis.layer = makeSVGGroup(this.layerClass, this.layerTransform, parent);\n\t}\n\n\tmake() {\n\t\tthis.render(this.data);\n\t\tthis.oldData = this.data;\n\t}\n\n\trender(data) {\n\t\tthis.store = this.makeElements(data);\n\n\t\tthis.layer.textContent = '';\n\t\tthis.store.forEach(element => {\n\t\t\tthis.layer.appendChild(element);\n\t\t});\n\t\tthis.labels.forEach(element => {\n\t\t\tthis.layer.appendChild(element);\n\t\t});\n\t}\n\n\tupdate(animate = true) {\n\t\tthis.refresh();\n\t\tlet animateElements = [];\n\t\tif(animate) {\n\t\t\tanimateElements = this.animateElements(this.data) || [];\n\t\t}\n\t\treturn animateElements;\n\t}\n}\n\nlet componentConfigs = {\n\tdonutSlices: {\n\t\tlayerClass: 'donut-slices',\n\t\tmakeElements(data) {\n\t\t\treturn data.sliceStrings.map((s, i) => {\n\t\t\t\tlet slice = makePath(s, 'donut-path', data.colors[i], 'none', data.strokeWidth);\n\t\t\t\tslice.style.transition = 'transform .3s;';\n\t\t\t\treturn slice;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\treturn this.store.map((slice, i) => animatePathStr(slice, newData.sliceStrings[i]));\n\t\t},\n\t},\n\tpieSlices: {\n\t\tlayerClass: 'pie-slices',\n\t\tmakeElements(data) {\n\t\t\treturn data.sliceStrings.map((s, i) =>{\n\t\t\t\tlet slice = makePath(s, 'pie-path', 'none', data.colors[i]);\n\t\t\t\tslice.style.transition = 'transform .3s;';\n\t\t\t\treturn slice;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\treturn this.store.map((slice, i) =>\n\t\t\t\tanimatePathStr(slice, newData.sliceStrings[i])\n\t\t\t);\n\t\t}\n\t},\n\tpercentageBars: {\n\t\tlayerClass: 'percentage-bars',\n\t\tmakeElements(data) {\n\t\t\treturn data.xPositions.map((x, i) =>{\n\t\t\t\tlet y = 0;\n\t\t\t\tlet bar = percentageBar(x, y, data.widths[i],\n\t\t\t\t\tthis.constants.barHeight, this.constants.barDepth, data.colors[i]);\n\t\t\t\treturn bar;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tif(newData) return [];\n\t\t}\n\t},\n\tyAxis: {\n\t\tlayerClass: 'y axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\tyLine(position, data.labels[i], this.constants.width,\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos, shortenNumbers: this.constants.shortenNumbers})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos = newData.positions;\n\t\t\tlet newLabels = newData.labels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tlabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\txAxis: {\n\t\tlayerClass: 'x axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\txLine(position, data.calcLabels[i], this.constants.height,\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos = newData.positions;\n\t\t\tlet newLabels = newData.calcLabels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.calcLabels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tcalcLabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateVertLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyMarkers: {\n\t\tlayerClass: 'y-markers',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(m =>\n\t\t\t\tyMarker(m.position, m.label, this.constants.width,\n\t\t\t\t\t{labelPos: m.options.labelPos, mode: 'span', lineType: 'dashed'})\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.position);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\t\t\tlet newOptions = newData.map(d => d.options);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.position);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tposition: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i],\n\t\t\t\t\toptions: newOptions[i]\n\t\t\t\t};\n\t\t\t}));\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyRegions: {\n\t\tlayerClass: 'y-regions',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(r =>\n\t\t\t\tyRegion(r.startPos, r.endPos, this.constants.width,\n\t\t\t\t\tr.label, {labelPos: r.options.labelPos})\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.endPos);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\t\t\tlet newStarts = newData.map(d => d.startPos);\n\t\t\tlet newOptions = newData.map(d => d.options);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.endPos);\n\t\t\tlet oldStarts = this.oldData.map(d => d.startPos);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tstartPos: oldStarts[i],\n\t\t\t\t\tendPos: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i],\n\t\t\t\t\toptions: newOptions[i]\n\t\t\t\t};\n\t\t\t}));\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((rectGroup, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateRegion(\n\t\t\t\t\trectGroup, newStarts[i], newPos[i], oldPos[i]\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\theatDomain: {\n\t\tlayerClass: function() { return 'heat-domain domain-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet {index, colWidth, rowHeight, squareSize, radius, xTranslate} = this.constants;\n\t\t\tlet monthNameHeight = -12;\n\t\t\tlet x = xTranslate, y = 0;\n\n\t\t\tthis.serializedSubDomains = [];\n\n\t\t\tdata.cols.map((week, weekNo) => {\n\t\t\t\tif(weekNo === 1) {\n\t\t\t\t\tthis.labels.push(\n\t\t\t\t\t\tmakeText('domain-name', x, monthNameHeight, getMonthName(index, true).toUpperCase(),\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfontSize: 9\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tweek.map((day, i) => {\n\t\t\t\t\tif(day.fill) {\n\t\t\t\t\t\tlet data = {\n\t\t\t\t\t\t\t'data-date': day.yyyyMmDd,\n\t\t\t\t\t\t\t'data-value': day.dataValue,\n\t\t\t\t\t\t\t'data-day': i\n\t\t\t\t\t\t};\n\t\t\t\t\t\tlet square = heatSquare('day', x, y, squareSize, radius, day.fill, data);\n\t\t\t\t\t\tthis.serializedSubDomains.push(square);\n\t\t\t\t\t}\n\t\t\t\t\ty += rowHeight;\n\t\t\t\t});\n\t\t\t\ty = 0;\n\t\t\t\tx += colWidth;\n\t\t\t});\n\n\t\t\treturn this.serializedSubDomains;\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tif(newData) return [];\n\t\t}\n\t},\n\n\tbarGraph: {\n\t\tlayerClass: function() { return 'dataset-units dataset-bars dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\tthis.unitType = 'bar';\n\t\t\tthis.units = data.yPositions.map((y, j) => {\n\t\t\t\treturn datasetBar(\n\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\ty,\n\t\t\t\t\tdata.barWidth,\n\t\t\t\t\tc.color,\n\t\t\t\t\tdata.labels[j],\n\t\t\t\t\tj,\n\t\t\t\t\tdata.offsets[j],\n\t\t\t\t\t{\n\t\t\t\t\t\tzeroLine: data.zeroLine,\n\t\t\t\t\t\tbarsWidth: data.barsWidth,\n\t\t\t\t\t\tminHeight: c.minHeight\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t\t\treturn this.units;\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\tlet newXPos = newData.xPositions;\n\t\t\tlet newYPos = newData.yPositions;\n\t\t\tlet newOffsets = newData.offsets;\n\t\t\tlet newLabels = newData.labels;\n\n\t\t\tlet oldXPos = this.oldData.xPositions;\n\t\t\tlet oldYPos = this.oldData.yPositions;\n\t\t\tlet oldOffsets = this.oldData.offsets;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n\t\t\t[oldOffsets, newOffsets] = equilizeNoOfElements(oldOffsets, newOffsets);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\txPositions: oldXPos,\n\t\t\t\tyPositions: oldYPos,\n\t\t\t\toffsets: oldOffsets,\n\t\t\t\tlabels: newLabels,\n\n\t\t\t\tzeroLine: this.oldData.zeroLine,\n\t\t\t\tbarsWidth: this.oldData.barsWidth,\n\t\t\t\tbarWidth: this.oldData.barWidth,\n\t\t\t});\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((bar, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateBar(\n\t\t\t\t\tbar, newXPos[i], newYPos[i], newData.barWidth, newOffsets[i],\n\t\t\t\t\t{zeroLine: newData.zeroLine}\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\tlineGraph: {\n\t\tlayerClass: function() { return 'dataset-units dataset-line dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\tthis.unitType = 'dot';\n\t\t\tthis.paths = {};\n\t\t\tif(!c.hideLine) {\n\t\t\t\tthis.paths = getPaths(\n\t\t\t\t\tdata.xPositions,\n\t\t\t\t\tdata.yPositions,\n\t\t\t\t\tc.color,\n\t\t\t\t\t{\n\t\t\t\t\t\theatline: c.heatline,\n\t\t\t\t\t\tregionFill: c.regionFill,\n\t\t\t\t\t\tspline: c.spline\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tsvgDefs: c.svgDefs,\n\t\t\t\t\t\tzeroLine: data.zeroLine\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.units = [];\n\t\t\tif(!c.hideDots) {\n\t\t\t\tthis.units = data.yPositions.map((y, j) => {\n\t\t\t\t\treturn datasetDot(\n\t\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\t\ty,\n\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\tc.color,\n\t\t\t\t\t\t(c.valuesOverPoints ? data.values[j] : ''),\n\t\t\t\t\t\tj\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn Object.values(this.paths).concat(this.units);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\tlet newXPos = newData.xPositions;\n\t\t\tlet newYPos = newData.yPositions;\n\t\t\tlet newValues = newData.values;\n\n\t\t\tlet oldXPos = this.oldData.xPositions;\n\t\t\tlet oldYPos = this.oldData.yPositions;\n\t\t\tlet oldValues = this.oldData.values;\n\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n\t\t\t[oldValues, newValues] = equilizeNoOfElements(oldValues, newValues);\n\n\t\t\tthis.render({\n\t\t\t\txPositions: oldXPos,\n\t\t\t\tyPositions: oldYPos,\n\t\t\t\tvalues: newValues,\n\n\t\t\t\tzeroLine: this.oldData.zeroLine,\n\t\t\t\tradius: this.oldData.radius,\n\t\t\t});\n\n\t\t\tlet animateElements = [];\n\n\t\t\tif(Object.keys(this.paths).length) {\n\t\t\t\tanimateElements = animateElements.concat(animatePath(\n\t\t\t\t\tthis.paths, newXPos, newYPos, newData.zeroLine, this.constants.spline));\n\t\t\t}\n\n\t\t\tif(this.units.length) {\n\t\t\t\tthis.units.map((dot, i) => {\n\t\t\t\t\tanimateElements = animateElements.concat(animateDot(\n\t\t\t\t\t\tdot, newXPos[i], newYPos[i]));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn animateElements;\n\t\t}\n\t}\n};\n\nfunction getComponent(name, constants, getData) {\n\tlet keys = Object.keys(componentConfigs).filter(k => name.includes(k));\n\tlet config = componentConfigs[keys[0]];\n\tObject.assign(config, {\n\t\tconstants: constants,\n\t\tgetData: getData\n\t});\n\treturn new ChartComponent(config);\n}\n\nclass PercentageChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'percentage';\n\t\tthis.setup();\n\t}\n\n\tsetMeasures(options) {\n\t\tlet m = this.measures;\n\t\tthis.barOptions = options.barOptions || {};\n\n\t\tlet b = this.barOptions;\n\t\tb.height = b.height || PERCENTAGE_BAR_DEFAULT_HEIGHT;\n\t\tb.depth = b.depth || PERCENTAGE_BAR_DEFAULT_DEPTH;\n\n\t\tm.paddings.right = 30;\n\t\tm.legendHeight = 60;\n\t\tm.baseHeight = (b.height + b.depth * 0.5) * 8;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'percentageBars',\n\t\t\t\t{\n\t\t\t\t\tbarHeight: this.barOptions.height,\n\t\t\t\t\tbarDepth: this.barOptions.depth,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: s.xPositions,\n\t\t\t\t\t\twidths: s.widths,\n\t\t\t\t\t\tcolors: this.colors\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\n\t\ts.xPositions = [];\n\t\ts.widths = [];\n\n\t\tlet xPos = 0;\n\t\ts.sliceTotals.map((value) => {\n\t\t\tlet width = this.width * value / s.grandTotal;\n\t\t\ts.widths.push(width);\n\t\t\ts.xPositions.push(xPos);\n\t\t\txPos += width;\n\t\t});\n\t}\n\n\tmakeDataByIndex() { }\n\n\tbindTooltip() {\n\t\tlet s = this.state;\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tlet bars = this.components.get('percentageBars').store;\n\t\t\tlet bar = e.target;\n\t\t\tif(bars.includes(bar)) {\n\n\t\t\t\tlet i = bars.indexOf(bar);\n\t\t\t\tlet gOff = getOffset(this.container), pOff = getOffset(bar);\n\n\t\t\t\tlet x = pOff.left - gOff.left + parseInt(bar.getAttribute('width'))/2;\n\t\t\t\tlet y = pOff.top - gOff.top;\n\t\t\t\tlet title = (this.formattedLabels && this.formattedLabels.length>0\n\t\t\t\t\t? this.formattedLabels[i] : this.state.labels[i]) + ': ';\n\t\t\t\tlet fraction = s.sliceTotals[i]/s.grandTotal;\n\n\t\t\t\tthis.tip.setValues(x, y, {name: title, value: (fraction*100).toFixed(1) + \"%\"});\n\t\t\t\tthis.tip.showTip();\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass PieChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'pie';\n\t\tthis.initTimeout = 0;\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\t\tthis.mouseMove = this.mouseMove.bind(this);\n\t\tthis.mouseLeave = this.mouseLeave.bind(this);\n\n\t\tthis.hoverRadio = args.hoverRadio || 0.1;\n\t\tthis.config.startAngle = args.startAngle || 0;\n\n\t\tthis.clockWise = args.clockWise || false;\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\t\tthis.radius = (this.height > this.width ? this.center.x : this.center.y);\n\n\t\tconst { radius, clockWise } = this;\n\n\t\tconst prevSlicesProperties = s.slicesProperties || [];\n\t\ts.sliceStrings = [];\n\t\ts.slicesProperties = [];\n\t\tlet curAngle = 180 - this.config.startAngle;\n\t\ts.sliceTotals.map((total, i) => {\n\t\t\tconst startAngle = curAngle;\n\t\t\tconst originDiffAngle = (total / s.grandTotal) * FULL_ANGLE;\n\t\t\tconst largeArc = originDiffAngle > 180 ? 1: 0;\n\t\t\tconst diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\n\t\t\tconst endAngle = curAngle = curAngle + diffAngle;\n\t\t\tconst startPosition = getPositionByAngle(startAngle, radius);\n\t\t\tconst endPosition = getPositionByAngle(endAngle, radius);\n\n\t\t\tconst prevProperty = this.init && prevSlicesProperties[i];\n\n\t\t\tlet curStart,curEnd;\n\t\t\tif(this.init) {\n\t\t\t\tcurStart = prevProperty ? prevProperty.startPosition : startPosition;\n\t\t\t\tcurEnd = prevProperty ? prevProperty.endPosition : startPosition;\n\t\t\t} else {\n\t\t\t\tcurStart = startPosition;\n\t\t\t\tcurEnd = endPosition;\n\t\t\t}\n\t\t\tconst curPath =\n\t\t\t\toriginDiffAngle === 360\n\t\t\t\t\t? makeCircleStr(curStart, curEnd, this.center, this.radius, clockWise, largeArc)\n\t\t\t\t\t: makeArcPathStr(curStart, curEnd, this.center, this.radius, clockWise, largeArc);\n\n\t\t\ts.sliceStrings.push(curPath);\n\t\t\ts.slicesProperties.push({\n\t\t\t\tstartPosition,\n\t\t\t\tendPosition,\n\t\t\t\tvalue: total,\n\t\t\t\ttotal: s.grandTotal,\n\t\t\t\tstartAngle,\n\t\t\t\tendAngle,\n\t\t\t\tangle: diffAngle\n\t\t\t});\n\n\t\t});\n\t\tthis.init = 0;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'pieSlices',\n\t\t\t\t{ },\n\t\t\t\tfunction() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tsliceStrings: s.sliceStrings,\n\t\t\t\t\t\tcolors: this.colors\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalTranslateByAngle(property){\n\t\tconst{radius,hoverRadio} = this;\n\t\tconst position = getPositionByAngle(property.startAngle+(property.angle / 2),radius);\n\t\treturn `translate3d(${(position.x) * hoverRadio}px,${(position.y) * hoverRadio}px,0)`;\n\t}\n\n\thoverSlice(path,i,flag,e){\n\t\tif(!path) return;\n\t\tconst color = this.colors[i];\n\t\tif(flag) {\n\t\t\ttransform(path, this.calTranslateByAngle(this.state.slicesProperties[i]));\n\t\t\tpath.style.fill = lightenDarkenColor(color, 50);\n\t\t\tlet g_off = getOffset(this.svg);\n\t\t\tlet x = e.pageX - g_off.left + 10;\n\t\t\tlet y = e.pageY - g_off.top - 10;\n\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t\t? this.formatted_labels[i] : this.state.labels[i]) + ': ';\n\t\t\tlet percent = (this.state.sliceTotals[i] * 100 / this.state.grandTotal).toFixed(1);\n\t\t\tthis.tip.setValues(x, y, {name: title, value: percent + \"%\"});\n\t\t\tthis.tip.showTip();\n\t\t} else {\n\t\t\ttransform(path,'translate3d(0,0,0)');\n\t\t\tthis.tip.hideTip();\n\t\t\tpath.style.fill = color;\n\t\t}\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', this.mouseMove);\n\t\tthis.container.addEventListener('mouseleave', this.mouseLeave);\n\t}\n\n\tmouseMove(e){\n\t\tconst target = e.target;\n\t\tlet slices = this.components.get('pieSlices').store;\n\t\tlet prevIndex = this.curActiveSliceIndex;\n\t\tlet prevAcitve = this.curActiveSlice;\n\t\tif(slices.includes(target)) {\n\t\t\tlet i = slices.indexOf(target);\n\t\t\tthis.hoverSlice(prevAcitve, prevIndex,false);\n\t\t\tthis.curActiveSlice = target;\n\t\t\tthis.curActiveSliceIndex = i;\n\t\t\tthis.hoverSlice(target, i, true, e);\n\t\t} else {\n\t\t\tthis.mouseLeave();\n\t\t}\n\t}\n\n\tmouseLeave(){\n\t\tthis.hoverSlice(this.curActiveSlice,this.curActiveSliceIndex,false);\n\t}\n}\n\nfunction normalize(x) {\n\t// Calculates mantissa and exponent of a number\n\t// Returns normalized number and exponent\n\t// https://stackoverflow.com/q/9383593/6495043\n\n\tif(x===0) {\n\t\treturn [0, 0];\n\t}\n\tif(isNaN(x)) {\n\t\treturn {mantissa: -6755399441055744, exponent: 972};\n\t}\n\tvar sig = x > 0 ? 1 : -1;\n\tif(!isFinite(x)) {\n\t\treturn {mantissa: sig * 4503599627370496, exponent: 972};\n\t}\n\n\tx = Math.abs(x);\n\tvar exp = Math.floor(Math.log10(x));\n\tvar man = x/Math.pow(10, exp);\n\n\treturn [sig * man, exp];\n}\n\nfunction getChartRangeIntervals(max, min=0) {\n\tlet upperBound = Math.ceil(max);\n\tlet lowerBound = Math.floor(min);\n\tlet range = upperBound - lowerBound;\n\n\tlet noOfParts = range;\n\tlet partSize = 1;\n\n\t// To avoid too many partitions\n\tif(range > 5) {\n\t\tif(range % 2 !== 0) {\n\t\t\tupperBound++;\n\t\t\t// Recalc range\n\t\t\trange = upperBound - lowerBound;\n\t\t}\n\t\tnoOfParts = range/2;\n\t\tpartSize = 2;\n\t}\n\n\t// Special case: 1 and 2\n\tif(range <= 2) {\n\t\tnoOfParts = 4;\n\t\tpartSize = range/noOfParts;\n\t}\n\n\t// Special case: 0\n\tif(range === 0) {\n\t\tnoOfParts = 5;\n\t\tpartSize = 1;\n\t}\n\n\tlet intervals = [];\n\tfor(var i = 0; i <= noOfParts; i++){\n\t\tintervals.push(lowerBound + partSize * i);\n\t}\n\treturn intervals;\n}\n\nfunction getChartIntervals(maxValue, minValue=0) {\n\tlet [normalMaxValue, exponent] = normalize(maxValue);\n\tlet normalMinValue = minValue ? minValue/Math.pow(10, exponent): 0;\n\n\t// Allow only 7 significant digits\n\tnormalMaxValue = normalMaxValue.toFixed(6);\n\n\tlet intervals = getChartRangeIntervals(normalMaxValue, normalMinValue);\n\tintervals = intervals.map(value => value * Math.pow(10, exponent));\n\treturn intervals;\n}\n\nfunction calcChartIntervals(values, withMinimum=false) {\n\t//*** Where the magic happens ***\n\n\t// Calculates best-fit y intervals from given values\n\t// and returns the interval array\n\n\tlet maxValue = Math.max(...values);\n\tlet minValue = Math.min(...values);\n\n\t// Exponent to be used for pretty print\n\tlet exponent = 0, intervals = []; // eslint-disable-line no-unused-vars\n\n\tfunction getPositiveFirstIntervals(maxValue, absMinValue) {\n\t\tlet intervals = getChartIntervals(maxValue);\n\n\t\tlet intervalSize = intervals[1] - intervals[0];\n\n\t\t// Then unshift the negative values\n\t\tlet value = 0;\n\t\tfor(var i = 1; value < absMinValue; i++) {\n\t\t\tvalue += intervalSize;\n\t\t\tintervals.unshift((-1) * value);\n\t\t}\n\t\treturn intervals;\n\t}\n\n\t// CASE I: Both non-negative\n\n\tif(maxValue >= 0 && minValue >= 0) {\n\t\texponent = normalize(maxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(maxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(maxValue, minValue);\n\t\t}\n\t}\n\n\t// CASE II: Only minValue negative\n\n\telse if(maxValue > 0 && minValue < 0) {\n\t\t// `withMinimum` irrelevant in this case,\n\t\t// We'll be handling both sides of zero separately\n\t\t// (both starting from zero)\n\t\t// Because ceil() and floor() behave differently\n\t\t// in those two regions\n\n\t\tlet absMinValue = Math.abs(minValue);\n\n\t\tif(maxValue >= absMinValue) {\n\t\t\texponent = normalize(maxValue)[1];\n\t\t\tintervals = getPositiveFirstIntervals(maxValue, absMinValue);\n\t\t} else {\n\t\t\t// Mirror: maxValue => absMinValue, then change sign\n\t\t\texponent = normalize(absMinValue)[1];\n\t\t\tlet posIntervals = getPositiveFirstIntervals(absMinValue, maxValue);\n\t\t\tintervals = posIntervals.reverse().map(d => d * (-1));\n\t\t}\n\n\t}\n\n\t// CASE III: Both non-positive\n\n\telse if(maxValue <= 0 && minValue <= 0) {\n\t\t// Mirrored Case I:\n\t\t// Work with positives, then reverse the sign and array\n\n\t\tlet pseudoMaxValue = Math.abs(minValue);\n\t\tlet pseudoMinValue = Math.abs(maxValue);\n\n\t\texponent = normalize(pseudoMaxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue, pseudoMinValue);\n\t\t}\n\n\t\tintervals = intervals.reverse().map(d => d * (-1));\n\t}\n\n\treturn intervals;\n}\n\nfunction getZeroIndex(yPts) {\n\tlet zeroIndex;\n\tlet interval = getIntervalSize(yPts);\n\tif(yPts.indexOf(0) >= 0) {\n\t\t// the range has a given zero\n\t\t// zero-line on the chart\n\t\tzeroIndex = yPts.indexOf(0);\n\t} else if(yPts[0] > 0) {\n\t\t// Minimum value is positive\n\t\t// zero-line is off the chart: below\n\t\tlet min = yPts[0];\n\t\tzeroIndex = (-1) * min / interval;\n\t} else {\n\t\t// Maximum value is negative\n\t\t// zero-line is off the chart: above\n\t\tlet max = yPts[yPts.length - 1];\n\t\tzeroIndex = (-1) * max / interval + (yPts.length - 1);\n\t}\n\treturn zeroIndex;\n}\n\n\n\nfunction getIntervalSize(orderedArray) {\n\treturn orderedArray[1] - orderedArray[0];\n}\n\nfunction getValueRange(orderedArray) {\n\treturn orderedArray[orderedArray.length-1] - orderedArray[0];\n}\n\nfunction scale(val, yAxis) {\n\treturn floatTwo(yAxis.zeroLine - val * yAxis.scaleMultiplier);\n}\n\n\n\n\n\nfunction getClosestInArray(goal, arr, index = false) {\n\tlet closest = arr.reduce(function(prev, curr) {\n\t\treturn (Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev);\n\t}, []);\n\n\treturn index ? arr.indexOf(closest) : closest;\n}\n\nfunction calcDistribution(values, distributionSize) {\n\t// Assume non-negative values,\n\t// implying distribution minimum at zero\n\n\tlet dataMaxValue = Math.max(...values);\n\n\tlet distributionStep = 1 / (distributionSize - 1);\n\tlet distribution = [];\n\n\tfor(var i = 0; i < distributionSize; i++) {\n\t\tlet checkpoint = dataMaxValue * (distributionStep * i);\n\t\tdistribution.push(checkpoint);\n\t}\n\n\treturn distribution;\n}\n\nfunction getMaxCheckpoint(value, distribution) {\n\treturn distribution.filter(d => d < value).length;\n}\n\nconst COL_WIDTH = HEATMAP_SQUARE_SIZE + HEATMAP_GUTTER_SIZE;\nconst ROW_HEIGHT = COL_WIDTH;\n// const DAY_INCR = 1;\n\nclass Heatmap extends BaseChart {\n\tconstructor(parent, options) {\n\t\tsuper(parent, options);\n\t\tthis.type = 'heatmap';\n\n\t\tthis.countLabel = options.countLabel || '';\n\n\t\tlet validStarts = ['Sunday', 'Monday'];\n\t\tlet startSubDomain = validStarts.includes(options.startSubDomain)\n\t\t\t? options.startSubDomain : 'Sunday';\n\t\tthis.startSubDomainIndex = validStarts.indexOf(startSubDomain);\n\n\t\tthis.setup();\n\t}\n\n\tsetMeasures(options) {\n\t\tlet m = this.measures;\n\t\tthis.discreteDomains = options.discreteDomains === 0 ? 0 : 1;\n\n\t\tm.paddings.top = ROW_HEIGHT * 3;\n\t\tm.paddings.bottom = 0;\n\t\tm.legendHeight = ROW_HEIGHT * 2;\n\t\tm.baseHeight = ROW_HEIGHT * NO_OF_DAYS_IN_WEEK\n\t\t\t+ getExtraHeight(m);\n\n\t\tlet d = this.data;\n\t\tlet spacing = this.discreteDomains ? NO_OF_YEAR_MONTHS : 0;\n\t\tthis.independentWidth = (getWeeksBetween(d.start, d.end)\n\t\t\t+ spacing) * COL_WIDTH + getExtraWidth(m);\n\t}\n\n\tupdateWidth() {\n\t\tlet spacing = this.discreteDomains ? NO_OF_YEAR_MONTHS : 0;\n\t\tlet noOfWeeks = this.state.noOfWeeks ? this.state.noOfWeeks : 52;\n\t\tthis.baseWidth = (noOfWeeks + spacing) * COL_WIDTH\n\t\t\t+ getExtraWidth(this.measures);\n\t}\n\n\tprepareData(data=this.data) {\n\t\tif(data.start && data.end && data.start > data.end) {\n\t\t\tthrow new Error('Start date cannot be greater than end date.');\n\t\t}\n\n\t\tif(!data.start) {\n\t\t\tdata.start = new Date();\n\t\t\tdata.start.setFullYear( data.start.getFullYear() - 1 );\n\t\t}\n\t\tif(!data.end) { data.end = new Date(); }\n\t\tdata.dataPoints = data.dataPoints || {};\n\n\t\tif(parseInt(Object.keys(data.dataPoints)[0]) > 100000) {\n\t\t\tlet points = {};\n\t\t\tObject.keys(data.dataPoints).forEach(timestampSec$$1 => {\n\t\t\t\tlet date = new Date(timestampSec$$1 * NO_OF_MILLIS);\n\t\t\t\tpoints[getYyyyMmDd(date)] = data.dataPoints[timestampSec$$1];\n\t\t\t});\n\t\t\tdata.dataPoints = points;\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tcalc() {\n\t\tlet s = this.state;\n\n\t\ts.start = clone(this.data.start);\n\t\ts.end = clone(this.data.end);\n\n\t\ts.firstWeekStart = clone(s.start);\n\t\ts.noOfWeeks = getWeeksBetween(s.start, s.end);\n\t\ts.distribution = calcDistribution(\n\t\t\tObject.values(this.data.dataPoints), HEATMAP_DISTRIBUTION_SIZE);\n\n\t\ts.domainConfigs = this.getDomains();\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\t\tlet lessCol = this.discreteDomains ? 0 : 1;\n\n\t\tlet componentConfigs = s.domainConfigs.map((config, i) => [\n\t\t\t'heatDomain',\n\t\t\t{\n\t\t\t\tindex: config.index,\n\t\t\t\tcolWidth: COL_WIDTH,\n\t\t\t\trowHeight: ROW_HEIGHT,\n\t\t\t\tsquareSize: HEATMAP_SQUARE_SIZE,\n\t\t\t\tradius: this.rawChartArgs.radius || 0,\n\t\t\t\txTranslate: s.domainConfigs\n\t\t\t\t\t.filter((config, j) => j < i)\n\t\t\t\t\t.map(config => config.cols.length - lessCol)\n\t\t\t\t\t.reduce((a, b) => a + b, 0)\n\t\t\t\t\t* COL_WIDTH\n\t\t\t},\n\t\t\tfunction() {\n\t\t\t\treturn s.domainConfigs[i];\n\t\t\t}.bind(this)\n\n\t\t]);\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map((args, i) => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0] + '-' + i, component];\n\t\t\t})\n\t\t);\n\n\t\tlet y = 0;\n\t\tDAY_NAMES_SHORT.forEach((dayName, i) => {\n\t\t\tif([1, 3, 5].includes(i)) {\n\t\t\t\tlet dayText = makeText('subdomain-name', -COL_WIDTH/2, y, dayName,\n\t\t\t\t\t{\n\t\t\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE,\n\t\t\t\t\t\tdy: 8,\n\t\t\t\t\t\ttextAnchor: 'end'\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tthis.drawArea.appendChild(dayText);\n\t\t\t}\n\t\t\ty += ROW_HEIGHT;\n\t\t});\n\t}\n\n\tupdate(data) {\n\t\tif(!data) {\n\t\t\tconsole.error('No data to update.');\n\t\t}\n\n\t\tthis.data = this.prepareData(data);\n\t\tthis.draw();\n\t\tthis.bindTooltip();\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tthis.components.forEach(comp => {\n\t\t\t\tlet daySquares = comp.store;\n\t\t\t\tlet daySquare = e.target;\n\t\t\t\tif(daySquares.includes(daySquare)) {\n\n\t\t\t\t\tlet count = daySquare.getAttribute('data-value');\n\t\t\t\t\tlet dateParts = daySquare.getAttribute('data-date').split('-');\n\n\t\t\t\t\tlet month = getMonthName(parseInt(dateParts[1])-1, true);\n\n\t\t\t\t\tlet gOff = this.container.getBoundingClientRect(), pOff = daySquare.getBoundingClientRect();\n\n\t\t\t\t\tlet width = parseInt(e.target.getAttribute('width'));\n\t\t\t\t\tlet x = pOff.left - gOff.left + width/2;\n\t\t\t\t\tlet y = pOff.top - gOff.top;\n\t\t\t\t\tlet value = count + ' ' + this.countLabel;\n\t\t\t\t\tlet name = ' on ' + month + ' ' + dateParts[0] + ', ' + dateParts[2];\n\n\t\t\t\t\tthis.tip.setValues(x, y, {name: name, value: value, valueFirst: 1}, []);\n\t\t\t\t\tthis.tip.showTip();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\trenderLegend() {\n\t\tthis.legendArea.textContent = '';\n\t\tlet x = 0;\n\t\tlet y = ROW_HEIGHT;\n\t\tlet radius = this.rawChartArgs.radius || 0;\n\n\t\tlet lessText = makeText('subdomain-name', x, y, 'Less',\n\t\t\t{\n\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE + 1,\n\t\t\t\tdy: 9\n\t\t\t}\n\t\t);\n\t\tx = (COL_WIDTH * 2) + COL_WIDTH/2;\n\t\tthis.legendArea.appendChild(lessText);\n\n\t\tthis.colors.slice(0, HEATMAP_DISTRIBUTION_SIZE).map((color, i) => {\n\t\t\tconst square = heatSquare('heatmap-legend-unit', x + (COL_WIDTH + 3) * i,\n\t\t\t\ty, HEATMAP_SQUARE_SIZE, radius, color);\n\t\t\tthis.legendArea.appendChild(square);\n\t\t});\n\n\t\tlet moreTextX = x + HEATMAP_DISTRIBUTION_SIZE * (COL_WIDTH + 3) + COL_WIDTH/4;\n\t\tlet moreText = makeText('subdomain-name', moreTextX, y, 'More',\n\t\t\t{\n\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE + 1,\n\t\t\t\tdy: 9\n\t\t\t}\n\t\t);\n\t\tthis.legendArea.appendChild(moreText);\n\t}\n\n\tgetDomains() {\n\t\tlet s = this.state;\n\t\tconst [startMonth, startYear] = [s.start.getMonth(), s.start.getFullYear()];\n\t\tconst [endMonth, endYear] = [s.end.getMonth(), s.end.getFullYear()];\n\n\t\tconst noOfMonths = (endMonth - startMonth + 1) + (endYear - startYear) * 12;\n\n\t\tlet domainConfigs = [];\n\n\t\tlet startOfMonth = clone(s.start);\n\t\tfor(var i = 0; i < noOfMonths; i++) {\n\t\t\tlet endDate = s.end;\n\t\t\tif(!areInSameMonth(startOfMonth, s.end)) {\n\t\t\t\tlet [month, year] = [startOfMonth.getMonth(), startOfMonth.getFullYear()];\n\t\t\t\tendDate = getLastDateInMonth(month, year);\n\t\t\t}\n\t\t\tdomainConfigs.push(this.getDomainConfig(startOfMonth, endDate));\n\n\t\t\taddDays(endDate, 1);\n\t\t\tstartOfMonth = endDate;\n\t\t}\n\n\t\treturn domainConfigs;\n\t}\n\n\tgetDomainConfig(startDate, endDate='') {\n\t\tlet [month, year] = [startDate.getMonth(), startDate.getFullYear()];\n\t\tlet startOfWeek = setDayToSunday(startDate); // TODO: Monday as well\n\t\tendDate = clone(endDate) || getLastDateInMonth(month, year);\n\n\t\tlet domainConfig = {\n\t\t\tindex: month,\n\t\t\tcols: []\n\t\t};\n\n\t\taddDays(endDate, 1);\n\t\tlet noOfMonthWeeks = getWeeksBetween(startOfWeek, endDate);\n\n\t\tlet cols = [], col;\n\t\tfor(var i = 0; i < noOfMonthWeeks; i++) {\n\t\t\tcol = this.getCol(startOfWeek, month);\n\t\t\tcols.push(col);\n\n\t\t\tstartOfWeek = new Date(col[NO_OF_DAYS_IN_WEEK - 1].yyyyMmDd);\n\t\t\taddDays(startOfWeek, 1);\n\t\t}\n\n\t\tif(col[NO_OF_DAYS_IN_WEEK - 1].dataValue !== undefined) {\n\t\t\taddDays(startOfWeek, 1);\n\t\t\tcols.push(this.getCol(startOfWeek, month, true));\n\t\t}\n\n\t\tdomainConfig.cols = cols;\n\n\t\treturn domainConfig;\n\t}\n\n\tgetCol(startDate, month, empty = false) {\n\t\tlet s = this.state;\n\n\t\t// startDate is the start of week\n\t\tlet currentDate = clone(startDate);\n\t\tlet col = [];\n\n\t\tfor(var i = 0; i < NO_OF_DAYS_IN_WEEK; i++, addDays(currentDate, 1)) {\n\t\t\tlet config = {};\n\n\t\t\t// Non-generic adjustment for entire heatmap, needs state\n\t\t\tlet currentDateWithinData = currentDate >= s.start && currentDate <= s.end;\n\n\t\t\tif(empty || currentDate.getMonth() !== month || !currentDateWithinData) {\n\t\t\t\tconfig.yyyyMmDd = getYyyyMmDd(currentDate);\n\t\t\t} else {\n\t\t\t\tconfig = this.getSubDomainConfig(currentDate);\n\t\t\t}\n\t\t\tcol.push(config);\n\t\t}\n\n\t\treturn col;\n\t}\n\n\tgetSubDomainConfig(date) {\n\t\tlet yyyyMmDd = getYyyyMmDd(date);\n\t\tlet dataValue = this.data.dataPoints[yyyyMmDd];\n\t\tlet config = {\n\t\t\tyyyyMmDd: yyyyMmDd,\n\t\t\tdataValue: dataValue || 0,\n\t\t\tfill: this.colors[getMaxCheckpoint(dataValue, this.state.distribution)]\n\t\t};\n\t\treturn config;\n\t}\n}\n\nfunction dataPrep(data, type) {\n\tdata.labels = data.labels || [];\n\n\tlet datasetLength = data.labels.length;\n\n\t// Datasets\n\tlet datasets = data.datasets;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\tif(!datasets) {\n\t\t// default\n\t\tdatasets = [{\n\t\t\tvalues: zeroArray\n\t\t}];\n\t}\n\n\tdatasets.map(d=> {\n\t\t// Set values\n\t\tif(!d.values) {\n\t\t\td.values = zeroArray;\n\t\t} else {\n\t\t\t// Check for non values\n\t\t\tlet vals = d.values;\n\t\t\tvals = vals.map(val => (!isNaN(val) ? val : 0));\n\n\t\t\t// Trim or extend\n\t\t\tif(vals.length > datasetLength) {\n\t\t\t\tvals = vals.slice(0, datasetLength);\n\t\t\t} else {\n\t\t\t\tvals = fillArray(vals, datasetLength - vals.length, 0);\n\t\t\t}\n\t\t\td.values = vals;\n\t\t}\n\n\t\t// Set type\n\t\tif(!d.chartType ) {\n\t\t\tif(!AXIS_DATASET_CHART_TYPES.includes(type)) type === DEFAULT_AXIS_CHART_TYPE;\n\t\t\td.chartType = type;\n\t\t}\n\n\t});\n\n\t// Markers\n\n\t// Regions\n\t// data.yRegions = data.yRegions || [];\n\tif(data.yRegions) {\n\t\tdata.yRegions.map(d => {\n\t\t\tif(d.end < d.start) {\n\t\t\t\t[d.start, d.end] = [d.end, d.start];\n\t\t\t}\n\t\t});\n\t}\n\n\treturn data;\n}\n\nfunction zeroDataPrep(realData) {\n\tlet datasetLength = realData.labels.length;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\n\tlet zeroData = {\n\t\tlabels: realData.labels.slice(0, -1),\n\t\tdatasets: realData.datasets.map(d => {\n\t\t\treturn {\n\t\t\t\tname: '',\n\t\t\t\tvalues: zeroArray.slice(0, -1),\n\t\t\t\tchartType: d.chartType\n\t\t\t};\n\t\t}),\n\t};\n\n\tif(realData.yMarkers) {\n\t\tzeroData.yMarkers = [\n\t\t\t{\n\t\t\t\tvalue: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t];\n\t}\n\n\tif(realData.yRegions) {\n\t\tzeroData.yRegions = [\n\t\t\t{\n\t\t\t\tstart: 0,\n\t\t\t\tend: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t];\n\t}\n\n\treturn zeroData;\n}\n\nfunction getShortenedLabels(chartWidth, labels=[], isSeries=true) {\n\tlet allowedSpace = chartWidth / labels.length;\n\tif(allowedSpace <= 0) allowedSpace = 1;\n\tlet allowedLetters = allowedSpace / DEFAULT_CHAR_WIDTH;\n\n\tlet seriesMultiple;\n\tif(isSeries) {\n\t\t// Find the maximum label length for spacing calculations\n\t\tlet maxLabelLength = Math.max(...labels.map(label => label.length));\n\t\tseriesMultiple = Math.ceil(maxLabelLength/allowedLetters);\n\t}\n\n\tlet calcLabels = labels.map((label, i) => {\n\t\tlabel += \"\";\n\t\tif(label.length > allowedLetters) {\n\n\t\t\tif(!isSeries) {\n\t\t\t\tif(allowedLetters-3 > 0) {\n\t\t\t\t\tlabel = label.slice(0, allowedLetters-3) + \" ...\";\n\t\t\t\t} else {\n\t\t\t\t\tlabel = label.slice(0, allowedLetters) + '..';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif(i % seriesMultiple !== 0) {\n\t\t\t\t\tlabel = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn label;\n\t});\n\n\treturn calcLabels;\n}\n\nclass AxisChart extends BaseChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\n\t\tthis.barOptions = args.barOptions || {};\n\t\tthis.lineOptions = args.lineOptions || {};\n\n\t\tthis.type = args.type || 'line';\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tsetMeasures() {\n\t\tif(this.data.datasets.length <= 1) {\n\t\t\tthis.config.showLegend = 0;\n\t\t\tthis.measures.paddings.bottom = 30;\n\t\t}\n\t}\n\n\tconfigure(options) {\n\t\tsuper.configure(options);\n\n\t\toptions.axisOptions = options.axisOptions || {};\n\t\toptions.tooltipOptions = options.tooltipOptions || {};\n\n\t\tthis.config.xAxisMode = options.axisOptions.xAxisMode || 'span';\n\t\tthis.config.yAxisMode = options.axisOptions.yAxisMode || 'span';\n\t\tthis.config.xIsSeries = options.axisOptions.xIsSeries || 0;\n\t\tthis.config.shortenYAxisNumbers = options.axisOptions.shortenYAxisNumbers || 0;\n\n\t\tthis.config.formatTooltipX = options.tooltipOptions.formatTooltipX;\n\t\tthis.config.formatTooltipY = options.tooltipOptions.formatTooltipY;\n\n\t\tthis.config.valuesOverPoints = options.valuesOverPoints;\n\t}\n\n\tprepareData(data=this.data) {\n\t\treturn dataPrep(data, this.type);\n\t}\n\n\tprepareFirstData(data=this.data) {\n\t\treturn zeroDataPrep(data);\n\t}\n\n\tcalc(onlyWidthChange = false) {\n\t\tthis.calcXPositions();\n\t\tif(!onlyWidthChange) {\n\t\t\tthis.calcYAxisParameters(this.getAllYValues(), this.type === 'line');\n\t\t}\n\t\tthis.makeDataByIndex();\n\t}\n\n\tcalcXPositions() {\n\t\tlet s = this.state;\n\t\tlet labels = this.data.labels;\n\t\ts.datasetLength = labels.length;\n\n\t\ts.unitWidth = this.width/(s.datasetLength);\n\t\t// Default, as per bar, and mixed. Only line will be a special case\n\t\ts.xOffset = s.unitWidth/2;\n\n\t\t// // For a pure Line Chart\n\t\t// s.unitWidth = this.width/(s.datasetLength - 1);\n\t\t// s.xOffset = 0;\n\n\t\ts.xAxis = {\n\t\t\tlabels: labels,\n\t\t\tpositions: labels.map((d, i) =>\n\t\t\t\tfloatTwo(s.xOffset + i * s.unitWidth)\n\t\t\t)\n\t\t};\n\t}\n\n\tcalcYAxisParameters(dataValues, withMinimum = 'false') {\n\t\tconst yPts = calcChartIntervals(dataValues, withMinimum);\n\t\tconst scaleMultiplier = this.height / getValueRange(yPts);\n\t\tconst intervalHeight = getIntervalSize(yPts) * scaleMultiplier;\n\t\tconst zeroLine = this.height - (getZeroIndex(yPts) * intervalHeight);\n\n\t\tthis.state.yAxis = {\n\t\t\tlabels: yPts,\n\t\t\tpositions: yPts.map(d => zeroLine - d * scaleMultiplier),\n\t\t\tscaleMultiplier: scaleMultiplier,\n\t\t\tzeroLine: zeroLine,\n\t\t};\n\n\t\t// Dependent if above changes\n\t\tthis.calcDatasetPoints();\n\t\tthis.calcYExtremes();\n\t\tthis.calcYRegions();\n\t}\n\n\tcalcDatasetPoints() {\n\t\tlet s = this.state;\n\t\tlet scaleAll = values => values.map(val => scale(val, s.yAxis));\n\n\t\ts.datasets = this.data.datasets.map((d, i) => {\n\t\t\tlet values = d.values;\n\t\t\tlet cumulativeYs = d.cumulativeYs || [];\n\t\t\treturn {\n\t\t\t\tname: d.name && d.name.replace(/<|>|&/g, (char) => char == '&' ? '&amp;' : char == '<' ? '&lt;' : '&gt;'),\n\t\t\t\tindex: i,\n\t\t\t\tchartType: d.chartType,\n\n\t\t\t\tvalues: values,\n\t\t\t\tyPositions: scaleAll(values),\n\n\t\t\t\tcumulativeYs: cumulativeYs,\n\t\t\t\tcumulativeYPos: scaleAll(cumulativeYs),\n\t\t\t};\n\t\t});\n\t}\n\n\tcalcYExtremes() {\n\t\tlet s = this.state;\n\t\tif(this.barOptions.stacked) {\n\t\t\ts.yExtremes = s.datasets[s.datasets.length - 1].cumulativeYPos;\n\t\t\treturn;\n\t\t}\n\t\ts.yExtremes = new Array(s.datasetLength).fill(9999);\n\t\ts.datasets.map(d => {\n\t\t\td.yPositions.map((pos, j) => {\n\t\t\t\tif(pos < s.yExtremes[j]) {\n\t\t\t\t\ts.yExtremes[j] = pos;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tcalcYRegions() {\n\t\tlet s = this.state;\n\t\tif(this.data.yMarkers) {\n\t\t\tthis.state.yMarkers = this.data.yMarkers.map(d => {\n\t\t\t\td.position = scale(d.value, s.yAxis);\n\t\t\t\tif(!d.options) d.options = {};\n\t\t\t\t// if(!d.label.includes(':')) {\n\t\t\t\t// \td.label += ': ' + d.value;\n\t\t\t\t// }\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t\tif(this.data.yRegions) {\n\t\t\tthis.state.yRegions = this.data.yRegions.map(d => {\n\t\t\t\td.startPos = scale(d.start, s.yAxis);\n\t\t\t\td.endPos = scale(d.end, s.yAxis);\n\t\t\t\tif(!d.options) d.options = {};\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t}\n\n\tgetAllYValues() {\n\t\tlet key = 'values';\n\n\t\tif(this.barOptions.stacked) {\n\t\t\tkey = 'cumulativeYs';\n\t\t\tlet cumulative = new Array(this.state.datasetLength).fill(0);\n\t\t\tthis.data.datasets.map((d, i) => {\n\t\t\t\tlet values = this.data.datasets[i].values;\n\t\t\t\td[key] = cumulative = cumulative.map((c, i) => c + values[i]);\n\t\t\t});\n\t\t}\n\n\t\tlet allValueLists = this.data.datasets.map(d => d[key]);\n\t\tif(this.data.yMarkers) {\n\t\t\tallValueLists.push(this.data.yMarkers.map(d => d.value));\n\t\t}\n\t\tif(this.data.yRegions) {\n\t\t\tthis.data.yRegions.map(d => {\n\t\t\t\tallValueLists.push([d.end, d.start]);\n\t\t\t});\n\t\t}\n\n\t\treturn [].concat(...allValueLists);\n\t}\n\n\tsetupComponents() {\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'yAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.config.yAxisMode,\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tshortenNumbers: this.config.shortenYAxisNumbers\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yAxis;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'xAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.config.xAxisMode,\n\t\t\t\t\theight: this.height,\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\ts.xAxis.calcLabels = getShortenedLabels(this.width,\n\t\t\t\t\t\ts.xAxis.labels, this.config.xIsSeries);\n\n\t\t\t\t\treturn s.xAxis;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'yRegions',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yRegions;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\t\t];\n\n\t\tlet barDatasets = this.state.datasets.filter(d => d.chartType === 'bar');\n\t\tlet lineDatasets = this.state.datasets.filter(d => d.chartType === 'line');\n\n\t\tlet barsConfigs = barDatasets.map(d => {\n\t\t\tlet index = d.index;\n\t\t\treturn [\n\t\t\t\t'barGraph' + '-' + d.index,\n\t\t\t\t{\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcolor: this.colors[index],\n\t\t\t\t\tstacked: this.barOptions.stacked,\n\n\t\t\t\t\t// same for all datasets\n\t\t\t\t\tvaluesOverPoints: this.config.valuesOverPoints,\n\t\t\t\t\tminHeight: this.height * MIN_BAR_PERCENT_HEIGHT,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\tlet d = s.datasets[index];\n\t\t\t\t\tlet stacked = this.barOptions.stacked;\n\n\t\t\t\t\tlet spaceRatio = this.barOptions.spaceRatio || BAR_CHART_SPACE_RATIO;\n\t\t\t\t\tlet barsWidth = s.unitWidth * (1 - spaceRatio);\n\t\t\t\t\tlet barWidth = barsWidth/(stacked ? 1 : barDatasets.length);\n\n\t\t\t\t\tlet xPositions = s.xAxis.positions.map(x => x - barsWidth/2);\n\t\t\t\t\tif(!stacked) {\n\t\t\t\t\t\txPositions = xPositions.map(p => p + barWidth * index);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet labels = new Array(s.datasetLength).fill('');\n\t\t\t\t\tif(this.config.valuesOverPoints) {\n\t\t\t\t\t\tif(stacked && d.index === s.datasets.length - 1) {\n\t\t\t\t\t\t\tlabels = d.cumulativeYs;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlabels = d.values;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet offsets = new Array(s.datasetLength).fill(0);\n\t\t\t\t\tif(stacked) {\n\t\t\t\t\t\toffsets = d.yPositions.map((y, j) => y - d.cumulativeYPos[j]);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: xPositions,\n\t\t\t\t\t\tyPositions: d.yPositions,\n\t\t\t\t\t\toffsets: offsets,\n\t\t\t\t\t\t// values: d.values,\n\t\t\t\t\t\tlabels: labels,\n\n\t\t\t\t\t\tzeroLine: s.yAxis.zeroLine,\n\t\t\t\t\t\tbarsWidth: barsWidth,\n\t\t\t\t\t\tbarWidth: barWidth,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t];\n\t\t});\n\n\t\tlet lineConfigs = lineDatasets.map(d => {\n\t\t\tlet index = d.index;\n\t\t\treturn [\n\t\t\t\t'lineGraph' + '-' + d.index,\n\t\t\t\t{\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcolor: this.colors[index],\n\t\t\t\t\tsvgDefs: this.svgDefs,\n\t\t\t\t\theatline: this.lineOptions.heatline,\n\t\t\t\t\tregionFill: this.lineOptions.regionFill,\n\t\t\t\t\tspline: this.lineOptions.spline,\n\t\t\t\t\thideDots: this.lineOptions.hideDots,\n\t\t\t\t\thideLine: this.lineOptions.hideLine,\n\n\t\t\t\t\t// same for all datasets\n\t\t\t\t\tvaluesOverPoints: this.config.valuesOverPoints,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\tlet d = s.datasets[index];\n\t\t\t\t\tlet minLine = s.yAxis.positions[0] < s.yAxis.zeroLine\n\t\t\t\t\t\t? s.yAxis.positions[0] : s.yAxis.zeroLine;\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: s.xAxis.positions,\n\t\t\t\t\t\tyPositions: d.yPositions,\n\n\t\t\t\t\t\tvalues: d.values,\n\n\t\t\t\t\t\tzeroLine: minLine,\n\t\t\t\t\t\tradius: this.lineOptions.dotSize || LINE_CHART_DOT_SIZE,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t];\n\t\t});\n\n\t\tlet markerConfigs = [\n\t\t\t[\n\t\t\t\t'yMarkers',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yMarkers;\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tcomponentConfigs = componentConfigs.concat(barsConfigs, lineConfigs, markerConfigs);\n\n\t\tlet optionals = ['yMarkers', 'yRegions'];\n\t\tthis.dataUnitComponents = [];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.filter(args => !optionals.includes(args[0]) || this.state[args[0]])\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\tif(args[0].includes('lineGraph') || args[0].includes('barGraph')) {\n\t\t\t\t\tthis.dataUnitComponents.push(component);\n\t\t\t\t}\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tmakeDataByIndex() {\n\t\tthis.dataByIndex = {};\n\n\t\tlet s = this.state;\n\t\tlet formatX = this.config.formatTooltipX;\n\t\tlet formatY = this.config.formatTooltipY;\n\t\tlet titles = s.xAxis.labels;\n\n\t\ttitles.map((label, index) => {\n\t\t\tlet values = this.state.datasets.map((set, i) => {\n\t\t\t\tlet value = set.values[index];\n\t\t\t\treturn {\n\t\t\t\t\ttitle: set.name,\n\t\t\t\t\tvalue: value,\n\t\t\t\t\tyPos: set.yPositions[index],\n\t\t\t\t\tcolor: this.colors[i],\n\t\t\t\t\tformatted: formatY ? formatY(value) : value,\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tthis.dataByIndex[index] = {\n\t\t\t\tlabel: label,\n\t\t\t\tformattedLabel: formatX ? formatX(label) : label,\n\t\t\t\txPos: s.xAxis.positions[index],\n\t\t\t\tvalues: values,\n\t\t\t\tyExtreme: s.yExtremes[index],\n\t\t\t};\n\t\t});\n\t}\n\n\tbindTooltip() {\n\t\t// NOTE: could be in tooltip itself, as it is a given functionality for its parent\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tlet m = this.measures;\n\t\t\tlet o = getOffset(this.container);\n\t\t\tlet relX = e.pageX - o.left - getLeftOffset(m);\n\t\t\tlet relY = e.pageY - o.top;\n\n\t\t\tif(relY < this.height + getTopOffset(m)\n\t\t\t\t&& relY >  getTopOffset(m)) {\n\t\t\t\tthis.mapTooltipXPosition(relX);\n\t\t\t} else {\n\t\t\t\tthis.tip.hideTip();\n\t\t\t}\n\t\t});\n\t}\n\n\tmapTooltipXPosition(relX) {\n\t\tlet s = this.state;\n\t\tif(!s.yExtremes) return;\n\n\t\tlet index = getClosestInArray(relX, s.xAxis.positions, true);\n\t\tif (index >= 0) {\n\t\t\tlet dbi = this.dataByIndex[index];\n\n\t\t\tthis.tip.setValues(\n\t\t\t\tdbi.xPos + this.tip.offset.x,\n\t\t\t\tdbi.yExtreme + this.tip.offset.y,\n\t\t\t\t{name: dbi.formattedLabel, value: ''},\n\t\t\t\tdbi.values,\n\t\t\t\tindex\n\t\t\t);\n\n\t\t\tthis.tip.showTip();\n\t\t}\n\t}\n\n\trenderLegend() {\n\t\tlet s = this.data;\n\t\tif(s.datasets.length > 1) {\n\t\t\tthis.legendArea.textContent = '';\n\t\t\ts.datasets.map((d, i) => {\n\t\t\t\tlet barWidth = AXIS_LEGEND_BAR_SIZE;\n\t\t\t\t// let rightEndPoint = this.baseWidth - this.measures.margins.left - this.measures.margins.right;\n\t\t\t\t// let multiplier = s.datasets.length - i;\n\t\t\t\tlet rect = legendBar(\n\t\t\t\t\t// rightEndPoint - multiplier * barWidth,\t// To right align\n\t\t\t\t\tbarWidth * i,\n\t\t\t\t\t'0',\n\t\t\t\t\tbarWidth,\n\t\t\t\t\tthis.colors[i],\n\t\t\t\t\td.name,\n\t\t\t\t\tthis.config.truncateLegends);\n\t\t\t\tthis.legendArea.appendChild(rect);\n\t\t\t});\n\t\t}\n\t}\n\n\n\n\t// Overlay\n\tmakeOverlay() {\n\t\tif(this.init) {\n\t\t\tthis.init = 0;\n\t\t\treturn;\n\t\t}\n\t\tif(this.overlayGuides) {\n\t\t\tthis.overlayGuides.forEach(g => {\n\t\t\t\tlet o = g.overlay;\n\t\t\t\to.parentNode.removeChild(o);\n\t\t\t});\n\t\t}\n\n\t\tthis.overlayGuides = this.dataUnitComponents.map(c => {\n\t\t\treturn {\n\t\t\t\ttype: c.unitType,\n\t\t\t\toverlay: undefined,\n\t\t\t\tunits: c.units,\n\t\t\t};\n\t\t});\n\n\t\tif(this.state.currentIndex === undefined) {\n\t\t\tthis.state.currentIndex = this.state.datasetLength - 1;\n\t\t}\n\n\t\t// Render overlays\n\t\tthis.overlayGuides.map(d => {\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\n\n\t\t\td.overlay = makeOverlay[d.type](currentUnit);\n\t\t\tthis.drawArea.appendChild(d.overlay);\n\t\t});\n\t}\n\n\tupdateOverlayGuides() {\n\t\tif(this.overlayGuides) {\n\t\t\tthis.overlayGuides.forEach(g => {\n\t\t\t\tlet o = g.overlay;\n\t\t\t\to.parentNode.removeChild(o);\n\t\t\t});\n\t\t}\n\t}\n\n\tbindOverlay() {\n\t\tthis.parent.addEventListener('data-select', () => {\n\t\t\tthis.updateOverlay();\n\t\t});\n\t}\n\n\tbindUnits() {\n\t\tthis.dataUnitComponents.map(c => {\n\t\t\tc.units.map(unit => {\n\t\t\t\tunit.addEventListener('click', () => {\n\t\t\t\t\tlet index = unit.getAttribute('data-point-index');\n\t\t\t\t\tthis.setCurrentDataPoint(index);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\t// Note: Doesn't work as tooltip is absolutely positioned\n\t\tthis.tip.container.addEventListener('click', () => {\n\t\t\tlet index = this.tip.container.getAttribute('data-point-index');\n\t\t\tthis.setCurrentDataPoint(index);\n\t\t});\n\t}\n\n\tupdateOverlay() {\n\t\tthis.overlayGuides.map(d => {\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\n\t\t\tupdateOverlay[d.type](currentUnit, d.overlay);\n\t\t});\n\t}\n\n\tonLeftArrow() {\n\t\tthis.setCurrentDataPoint(this.state.currentIndex - 1);\n\t}\n\n\tonRightArrow() {\n\t\tthis.setCurrentDataPoint(this.state.currentIndex + 1);\n\t}\n\n\tgetDataPoint(index=this.state.currentIndex) {\n\t\tlet s = this.state;\n\t\tlet data_point = {\n\t\t\tindex: index,\n\t\t\tlabel: s.xAxis.labels[index],\n\t\t\tvalues: s.datasets.map(d => d.values[index])\n\t\t};\n\t\treturn data_point;\n\t}\n\n\tsetCurrentDataPoint(index) {\n\t\tlet s = this.state;\n\t\tindex = parseInt(index);\n\t\tif(index < 0) index = 0;\n\t\tif(index >= s.xAxis.labels.length) index = s.xAxis.labels.length - 1;\n\t\tif(index === s.currentIndex) return;\n\t\ts.currentIndex = index;\n\t\tfire(this.parent, \"data-select\", this.getDataPoint());\n\t}\n\n\n\n\t// API\n\taddDataPoint(label, datasetValues, index=this.state.datasetLength) {\n\t\tsuper.addDataPoint(label, datasetValues, index);\n\t\tthis.data.labels.splice(index, 0, label);\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\td.values.splice(index, 0, datasetValues[i]);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\tremoveDataPoint(index = this.state.datasetLength-1) {\n\t\tif (this.data.labels.length <= 1) {\n\t\t\treturn;\n\t\t}\n\t\tsuper.removeDataPoint(index);\n\t\tthis.data.labels.splice(index, 1);\n\t\tthis.data.datasets.map(d => {\n\t\t\td.values.splice(index, 1);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\tupdateDataset(datasetValues, index=0) {\n\t\tthis.data.datasets[index].values = datasetValues;\n\t\tthis.update(this.data);\n\t}\n\t// addDataset(dataset, index) {}\n\t// removeDataset(index = 0) {}\n\n\tupdateDatasets(datasets) {\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\tif(datasets[i]) {\n\t\t\t\td.values = datasets[i];\n\t\t\t}\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\t// updateDataPoint(dataPoint, index = 0) {}\n\t// addDataPoint(dataPoint, index = 0) {}\n\t// removeDataPoint(index = 0) {}\n}\n\nclass DonutChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'donut';\n\t\tthis.initTimeout = 0;\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\t\tthis.mouseMove = this.mouseMove.bind(this);\n\t\tthis.mouseLeave = this.mouseLeave.bind(this);\n\n\t\tthis.hoverRadio = args.hoverRadio || 0.1;\n\t\tthis.config.startAngle = args.startAngle || 0;\n\n\t\tthis.clockWise = args.clockWise || false;\n\t\tthis.strokeWidth = args.strokeWidth || 30;\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\t\tthis.radius =\n\t\t\tthis.height > this.width\n\t\t\t\t? this.center.x - this.strokeWidth / 2\n\t\t\t\t: this.center.y - this.strokeWidth / 2;\n\n\t\tconst { radius, clockWise } = this;\n\n\t\tconst prevSlicesProperties = s.slicesProperties || [];\n\t\ts.sliceStrings = [];\n\t\ts.slicesProperties = [];\n\t\tlet curAngle = 180 - this.config.startAngle;\n\n\t\ts.sliceTotals.map((total, i) => {\n\t\t\tconst startAngle = curAngle;\n\t\t\tconst originDiffAngle = (total / s.grandTotal) * FULL_ANGLE;\n\t\t\tconst largeArc = originDiffAngle > 180 ? 1: 0;\n\t\t\tconst diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\n\t\t\tconst endAngle = curAngle = curAngle + diffAngle;\n\t\t\tconst startPosition = getPositionByAngle(startAngle, radius);\n\t\t\tconst endPosition = getPositionByAngle(endAngle, radius);\n\n\t\t\tconst prevProperty = this.init && prevSlicesProperties[i];\n\n\t\t\tlet curStart,curEnd;\n\t\t\tif(this.init) {\n\t\t\t\tcurStart = prevProperty ? prevProperty.startPosition : startPosition;\n\t\t\t\tcurEnd = prevProperty ? prevProperty.endPosition : startPosition;\n\t\t\t} else {\n\t\t\t\tcurStart = startPosition;\n\t\t\t\tcurEnd = endPosition;\n\t\t\t}\n\t\t\tconst curPath =\n\t\t\t\toriginDiffAngle === 360\n\t\t\t\t\t? makeStrokeCircleStr(curStart, curEnd, this.center, this.radius, this.clockWise, largeArc)\n\t\t\t\t\t: makeArcStrokePathStr(curStart, curEnd, this.center, this.radius, this.clockWise, largeArc);\n\n\t\t\ts.sliceStrings.push(curPath);\n\t\t\ts.slicesProperties.push({\n\t\t\t\tstartPosition,\n\t\t\t\tendPosition,\n\t\t\t\tvalue: total,\n\t\t\t\ttotal: s.grandTotal,\n\t\t\t\tstartAngle,\n\t\t\t\tendAngle,\n\t\t\t\tangle: diffAngle\n\t\t\t});\n\n\t\t});\n\t\tthis.init = 0;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'donutSlices',\n\t\t\t\t{ },\n\t\t\t\tfunction() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tsliceStrings: s.sliceStrings,\n\t\t\t\t\t\tcolors: this.colors,\n\t\t\t\t\t\tstrokeWidth: this.strokeWidth,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalTranslateByAngle(property){\n\t\tconst{ radius, hoverRadio } = this;\n\t\tconst position = getPositionByAngle(property.startAngle+(property.angle / 2),radius);\n\t\treturn `translate3d(${(position.x) * hoverRadio}px,${(position.y) * hoverRadio}px,0)`;\n\t}\n\n\thoverSlice(path,i,flag,e){\n\t\tif(!path) return;\n\t\tconst color = this.colors[i];\n\t\tif(flag) {\n\t\t\ttransform(path, this.calTranslateByAngle(this.state.slicesProperties[i]));\n\t\t\tpath.style.stroke = lightenDarkenColor(color, 50);\n\t\t\tlet g_off = getOffset(this.svg);\n\t\t\tlet x = e.pageX - g_off.left + 10;\n\t\t\tlet y = e.pageY - g_off.top - 10;\n\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t\t? this.formatted_labels[i] : this.state.labels[i]) + ': ';\n\t\t\tlet percent = (this.state.sliceTotals[i] * 100 / this.state.grandTotal).toFixed(1);\n\t\t\tthis.tip.setValues(x, y, {name: title, value: percent + \"%\"});\n\t\t\tthis.tip.showTip();\n\t\t} else {\n\t\t\ttransform(path,'translate3d(0,0,0)');\n\t\t\tthis.tip.hideTip();\n\t\t\tpath.style.stroke = color;\n\t\t}\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', this.mouseMove);\n\t\tthis.container.addEventListener('mouseleave', this.mouseLeave);\n\t}\n\n\tmouseMove(e){\n\t\tconst target = e.target;\n\t\tlet slices = this.components.get('donutSlices').store;\n\t\tlet prevIndex = this.curActiveSliceIndex;\n\t\tlet prevAcitve = this.curActiveSlice;\n\t\tif(slices.includes(target)) {\n\t\t\tlet i = slices.indexOf(target);\n\t\t\tthis.hoverSlice(prevAcitve, prevIndex,false);\n\t\t\tthis.curActiveSlice = target;\n\t\t\tthis.curActiveSliceIndex = i;\n\t\t\tthis.hoverSlice(target, i, true, e);\n\t\t} else {\n\t\t\tthis.mouseLeave();\n\t\t}\n\t}\n\n\tmouseLeave(){\n\t\tthis.hoverSlice(this.curActiveSlice,this.curActiveSliceIndex,false);\n\t}\n}\n\n// import MultiAxisChart from './charts/MultiAxisChart';\nconst chartTypes = {\n\tbar: AxisChart,\n\tline: AxisChart,\n\t// multiaxis: MultiAxisChart,\n\tpercentage: PercentageChart,\n\theatmap: Heatmap,\n\tpie: PieChart,\n\tdonut: DonutChart,\n};\n\nfunction getChartByType(chartType = 'line', parent, options) {\n\tif (chartType === 'axis-mixed') {\n\t\toptions.type = 'line';\n\t\treturn new AxisChart(parent, options);\n\t}\n\n\tif (!chartTypes[chartType]) {\n\t\tconsole.error(\"Undefined chart type: \" + chartType);\n\t\treturn;\n\t}\n\n\treturn new chartTypes[chartType](parent, options);\n}\n\nclass Chart {\n\tconstructor(parent, options) {\n\t\treturn getChartByType(options.type, parent, options);\n\t}\n}\n\nexport { Chart, PercentageChart, PieChart, Heatmap, AxisChart };\n","/*\n * This file is part of Flarum.\n *\n * (c) Toby Zerner <toby.zerner@gmail.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport DashboardWidget from 'flarum/components/DashboardWidget';\nimport humanTime from 'flarum/utils/humanTime';\n\nimport {Chart} from 'frappe-charts/dist/frappe-charts.esm.js';\n\nexport default class StatisticsWidget extends DashboardWidget {\n\n  className() {\n    return 'WebsocketStatisticsWidget';\n  }\n\n  content() {\n\n    return (\n      <div className=\"WebsocketStatisticsWidget-table\">\n\n        <div className=\"WebsocketStatisticsWidget-chart\" oncreate={this.drawChart.bind(this)}\n             onupdate={this.drawChart.bind(this)}/>\n      </div>\n    );\n  }\n\n  drawChart(vnode) {\n\n    const stats = app.data.websocket_statistics;\n\n    if (!this.chart) {\n      this.chart = new Chart(vnode.dom, {\n        data: {\n          labels: stats.peak_connections.x.map(date => {\n            return humanTime(new Date(date + ' UTC'));\n          }),\n          datasets: [\n            {\n              name: \"Null\",\n              values: stats.null,\n              chartType: 'bar'\n            },\n            {\n              name: \"Peak Connections\",\n              values: stats.peak_connections.y,\n              chartType: 'bar'\n            },\n            {\n              name: \"Messages Count\",\n              values: stats.websocket_messages_count.y,\n              chartType: 'bar'\n            },\n          ]\n        },\n        title: app.translator.trans('kyrne-websocket.admin.chart.title'),\n        type: 'bar',\n        height: 300,\n        colors: [app.forum.attribute('themePrimaryColor'), app.forum.attribute('themeSecondaryColor')]\n      });\n    }\n  }\n}\n","import app from 'flarum/app';\nimport { extend } from 'flarum/extend';\n\nimport DashboardPage from 'flarum/components/DashboardPage';\n\nimport WebsocketPage from './components/WebsocketPage';\nimport WebsocketStatsWidget from \"./components/WebsocketStatsWidget\";\nimport RegisterWidget from \"../common/Widget/RegisterWidget\";\n\napp.initializers.add('kyrne-websocket', app => {\n\n  app.extensionData\n    .for('kyrne-websocket')\n    .registerPage(WebsocketPage);\n\n  extend(DashboardPage.prototype, 'availableWidgets', widgets => {\n    widgets.add('websocketstatistics', <WebsocketStatsWidget/>, 15);\n  });\n\n  if (app.initializers.has('afrux/forum-widgets-core')) {\n    RegisterWidget(app);\n  }\n});\n\n"],"sourceRoot":""}